// *** Generated by com.sos.scheduler.engine.cplusplus.generator ***

#include "_precompiled.h"

#ifndef _JAVAPROXY_JAVA_LANG_OBJECT_H_
#define _JAVAPROXY_JAVA_LANG_OBJECT_H_


namespace javaproxy { namespace java { namespace lang { struct String; }}}


namespace javaproxy { namespace java { namespace lang { 


struct Object__class;

struct Object : ::zschimmer::javabridge::proxy_jobject< Object >, ::zschimmer::javabridge::Class_based {
    static Object new_instance();

    Object(jobject = NULL);

    Object(const Object&);

    #ifdef Z_HAS_MOVE_CONSTRUCTOR
        Object(Object&&);
    #endif

    ~Object();

    Object& operator=(jobject jo) { assign_(jo); return *this; }
    Object& operator=(const Object& o) { assign_(o.get_jobject()); return *this; }
    #ifdef Z_HAS_MOVE_CONSTRUCTOR
        Object& operator=(Object&& o) { set_jobject(o.get_jobject()); o.set_jobject(NULL); return *this; }
    #endif

    jobject get_jobject() const { return ::zschimmer::javabridge::proxy_jobject< Object >::get_jobject(); }

  protected:
    void set_jobject(jobject jo) {
        ::zschimmer::javabridge::proxy_jobject< Object >::set_jobject(jo);
    }
  public:

    bool equals(const ::zschimmer::javabridge::proxy_jobject< ::javaproxy::java::lang::Object >& p0) const;
    jint hashCode() const;
    void notify() const;
    void notifyAll() const;
    ::javaproxy::java::lang::String toString() const;
    void wait() const;
    void wait(jlong p0) const;
    void wait(jlong p0, jint p1) const;

    ::zschimmer::javabridge::Class* java_object_class_() const;

    static ::zschimmer::javabridge::Class* java_class_();


  private:
    struct Lazy_class : ::zschimmer::abstract_lazy<Object__class*> {
        void initialize() const;
    };

    Lazy_class _class;
};


}}}

#endif
