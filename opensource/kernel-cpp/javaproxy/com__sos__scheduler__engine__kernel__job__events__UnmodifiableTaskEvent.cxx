// *** Generated by com.sos.scheduler.engine.cplusplus.generator ***

#include "_precompiled.h"

#include "com__sos__scheduler__engine__kernel__job__events__UnmodifiableTaskEvent.h"
#include "com__sos__scheduler__engine__kernel__job__events__TaskEvent.h"
#include "java__lang__String.h"

namespace javaproxy { namespace com { namespace sos { namespace scheduler { namespace engine { namespace kernel { namespace job { namespace events { 

struct UnmodifiableTaskEvent__class : ::zschimmer::javabridge::Class
{
    UnmodifiableTaskEvent__class(const string& class_name);
   ~UnmodifiableTaskEvent__class();


    static const ::zschimmer::javabridge::class_factory< UnmodifiableTaskEvent__class > class_factory;
};

const ::zschimmer::javabridge::class_factory< UnmodifiableTaskEvent__class > UnmodifiableTaskEvent__class::class_factory ("com.sos.scheduler.engine.kernel.job.events.UnmodifiableTaskEvent");

UnmodifiableTaskEvent__class::UnmodifiableTaskEvent__class(const string& class_name) :
    ::zschimmer::javabridge::Class(class_name)
{}

UnmodifiableTaskEvent__class::~UnmodifiableTaskEvent__class() {}




UnmodifiableTaskEvent::UnmodifiableTaskEvent(jobject jo) { if (jo) assign_(jo); }

UnmodifiableTaskEvent::UnmodifiableTaskEvent(const UnmodifiableTaskEvent& o) { assign_(o.get_jobject()); }

#ifdef Z_HAS_MOVE_CONSTRUCTOR
    UnmodifiableTaskEvent::UnmodifiableTaskEvent(UnmodifiableTaskEvent&& o) { set_jobject(o.get_jobject());  o.set_jobject(NULL); }
#endif

UnmodifiableTaskEvent::~UnmodifiableTaskEvent() { assign_(NULL); }





::zschimmer::javabridge::Class* UnmodifiableTaskEvent::java_object_class_() { return _class.get(); }

::zschimmer::javabridge::Class* UnmodifiableTaskEvent::java_class_() { return UnmodifiableTaskEvent__class::class_factory.clas(); }


void UnmodifiableTaskEvent::Lazy_class::initialize() {
    _value = UnmodifiableTaskEvent__class::class_factory.clas();
}


}}}}}}}}
