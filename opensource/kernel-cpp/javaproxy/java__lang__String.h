// *** Generated by com.sos.scheduler.engine.cplusplus.generator ***

#ifndef _JAVAPROXY_JAVA_LANG_STRING_H_
#define _JAVAPROXY_JAVA_LANG_STRING_H_

#include "_precompiled.h"

#include "java__lang__Object.h"

namespace javaproxy { namespace java { namespace lang { struct Object; }}}
namespace javaproxy { namespace java { namespace lang { struct String; }}}


namespace javaproxy { namespace java { namespace lang { 


struct String__class;

struct String : ::zschimmer::javabridge::proxy_jobject< String >, ::javaproxy::java::lang::Object {
    static String new_instance();
    static String new_instance(const ::zschimmer::javabridge::Local_java_byte_array& p0);
    static String new_instance(const ::zschimmer::javabridge::Local_java_byte_array& p0, jint p1);
    static String new_instance(const ::zschimmer::javabridge::Local_java_byte_array& p0, jint p1, jint p2);
    static String new_instance(const ::zschimmer::javabridge::Local_java_byte_array& p0, jint p1, jint p2, jint p3);
    static String new_instance(const ::zschimmer::javabridge::Local_java_byte_array& p0, jint p1, jint p2, const ::zschimmer::javabridge::proxy_jobject< ::javaproxy::java::lang::String >& p3);
    static String new_instance(const ::zschimmer::javabridge::Local_java_byte_array& p0, const ::zschimmer::javabridge::proxy_jobject< ::javaproxy::java::lang::String >& p1);
    static String new_instance(const ::zschimmer::javabridge::proxy_jobject< ::javaproxy::java::lang::String >& p0);

    String(jobject = NULL);
    String(const char*);
    String(const string&);
    String(const ::zschimmer::com::Bstr&);
    operator string() const;

    String(const String&);

    #ifdef Z_HAS_MOVE_CONSTRUCTOR
        String(String&&);
    #endif

    ~String();

    String& operator=(jobject jo) { assign_(jo); return *this; }
    String& operator=(const String& o) { assign_(o.get_jobject()); return *this; }
    #ifdef Z_HAS_MOVE_CONSTRUCTOR
        String& operator=(String&& o) { set_jobject(o.get_jobject()); o.set_jobject(NULL); return *this; }
    #endif

    jobject get_jobject() const { return ::zschimmer::javabridge::proxy_jobject< String >::get_jobject(); }

  protected:
    void set_jobject(jobject jo) {
        ::zschimmer::javabridge::proxy_jobject< String >::set_jobject(jo);
        ::javaproxy::java::lang::Object::set_jobject(jo);
    }
  public:

    wchar_t charAt(jint p0) const;
    jint codePointAt(jint p0) const;
    jint codePointBefore(jint p0) const;
    jint codePointCount(jint p0, jint p1) const;
    jint compareTo(const ::zschimmer::javabridge::proxy_jobject< ::javaproxy::java::lang::Object >& p0) const;
    jint compareTo(const ::zschimmer::javabridge::proxy_jobject< ::javaproxy::java::lang::String >& p0) const;
    jint compareToIgnoreCase(const ::zschimmer::javabridge::proxy_jobject< ::javaproxy::java::lang::String >& p0) const;
    ::javaproxy::java::lang::String concat(const ::zschimmer::javabridge::proxy_jobject< ::javaproxy::java::lang::String >& p0) const;
    bool endsWith(const ::zschimmer::javabridge::proxy_jobject< ::javaproxy::java::lang::String >& p0) const;
    bool equals(const ::zschimmer::javabridge::proxy_jobject< ::javaproxy::java::lang::Object >& p0) const;
    bool equalsIgnoreCase(const ::zschimmer::javabridge::proxy_jobject< ::javaproxy::java::lang::String >& p0) const;
    string getBytes() const;
    void getBytes(jint p0, jint p1, const ::zschimmer::javabridge::Local_java_byte_array& p2, jint p3) const;
    string getBytes(const ::zschimmer::javabridge::proxy_jobject< ::javaproxy::java::lang::String >& p0) const;
    jint hashCode() const;
    jint indexOf(jint p0) const;
    jint indexOf(jint p0, jint p1) const;
    jint indexOf(const ::zschimmer::javabridge::proxy_jobject< ::javaproxy::java::lang::String >& p0) const;
    jint indexOf(const ::zschimmer::javabridge::proxy_jobject< ::javaproxy::java::lang::String >& p0, jint p1) const;
    ::javaproxy::java::lang::String intern() const;
    bool isEmpty() const;
    jint lastIndexOf(jint p0) const;
    jint lastIndexOf(jint p0, jint p1) const;
    jint lastIndexOf(const ::zschimmer::javabridge::proxy_jobject< ::javaproxy::java::lang::String >& p0) const;
    jint lastIndexOf(const ::zschimmer::javabridge::proxy_jobject< ::javaproxy::java::lang::String >& p0, jint p1) const;
    jint length() const;
    bool matches(const ::zschimmer::javabridge::proxy_jobject< ::javaproxy::java::lang::String >& p0) const;
    jint offsetByCodePoints(jint p0, jint p1) const;
    bool regionMatches(jboolean p0, jint p1, const ::zschimmer::javabridge::proxy_jobject< ::javaproxy::java::lang::String >& p2, jint p3, jint p4) const;
    bool regionMatches(jint p0, const ::zschimmer::javabridge::proxy_jobject< ::javaproxy::java::lang::String >& p1, jint p2, jint p3) const;
    ::javaproxy::java::lang::String replace(jchar p0, jchar p1) const;
    ::javaproxy::java::lang::String replaceAll(const ::zschimmer::javabridge::proxy_jobject< ::javaproxy::java::lang::String >& p0, const ::zschimmer::javabridge::proxy_jobject< ::javaproxy::java::lang::String >& p1) const;
    ::javaproxy::java::lang::String replaceFirst(const ::zschimmer::javabridge::proxy_jobject< ::javaproxy::java::lang::String >& p0, const ::zschimmer::javabridge::proxy_jobject< ::javaproxy::java::lang::String >& p1) const;
    bool startsWith(const ::zschimmer::javabridge::proxy_jobject< ::javaproxy::java::lang::String >& p0) const;
    bool startsWith(const ::zschimmer::javabridge::proxy_jobject< ::javaproxy::java::lang::String >& p0, jint p1) const;
    ::javaproxy::java::lang::String substring(jint p0) const;
    ::javaproxy::java::lang::String substring(jint p0, jint p1) const;
    ::javaproxy::java::lang::String toLowerCase() const;
    ::javaproxy::java::lang::String toString() const;
    ::javaproxy::java::lang::String toUpperCase() const;
    ::javaproxy::java::lang::String trim() const;
    static ::javaproxy::java::lang::String valueOf(jboolean p0);
    static ::javaproxy::java::lang::String valueOf(jchar p0);
    static ::javaproxy::java::lang::String valueOf(jdouble p0);
    static ::javaproxy::java::lang::String valueOf(jfloat p0);
    static ::javaproxy::java::lang::String valueOf(jint p0);
    static ::javaproxy::java::lang::String valueOf(const ::zschimmer::javabridge::proxy_jobject< ::javaproxy::java::lang::Object >& p0);
    static ::javaproxy::java::lang::String valueOf(jlong p0);

    ::zschimmer::javabridge::Class* java_object_class_() const;

    static ::zschimmer::javabridge::Class* java_class_();


  private:
    struct Lazy_class : ::zschimmer::abstract_lazy<String__class*> {
        void initialize() const;
    };

    Lazy_class _class;
};


}}}

#endif
