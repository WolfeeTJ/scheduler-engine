// *** Generated by com.sos.scheduler.engine.cplusplus.generator ***

#include "_precompiled.h"

#ifndef _JAVAPROXY_JAVA_UTIL_ABSTRACTCOLLECTION_H_
#define _JAVAPROXY_JAVA_UTIL_ABSTRACTCOLLECTION_H_

#include "java__lang__Object.h"

namespace javaproxy { namespace java { namespace lang { struct Object; }}}
namespace javaproxy { namespace java { namespace lang { struct String; }}}


namespace javaproxy { namespace java { namespace util { 


struct AbstractCollection__class;

struct AbstractCollection : ::zschimmer::javabridge::proxy_jobject< AbstractCollection >, ::javaproxy::java::lang::Object {
  private:
    static AbstractCollection new_instance();  // Not implemented
  public:

    AbstractCollection(jobject = NULL);

    AbstractCollection(const AbstractCollection&);

    #ifdef Z_HAS_MOVE_CONSTRUCTOR
        AbstractCollection(AbstractCollection&&);
    #endif

    ~AbstractCollection();

    AbstractCollection& operator=(jobject jo) { assign_(jo); return *this; }
    AbstractCollection& operator=(const AbstractCollection& o) { assign_(o.get_jobject()); return *this; }
    #ifdef Z_HAS_MOVE_CONSTRUCTOR
        AbstractCollection& operator=(AbstractCollection&& o) { set_jobject(o.get_jobject()); o.set_jobject(NULL); return *this; }
    #endif

    jobject get_jobject() const { return ::zschimmer::javabridge::proxy_jobject< AbstractCollection >::get_jobject(); }

  protected:
    void set_jobject(jobject jo) {
        ::zschimmer::javabridge::proxy_jobject< AbstractCollection >::set_jobject(jo);
        ::javaproxy::java::lang::Object::set_jobject(jo);
    }
  public:

    bool add(const ::zschimmer::javabridge::proxy_jobject< ::javaproxy::java::lang::Object >& p0) const;
    void clear() const;
    bool contains(const ::zschimmer::javabridge::proxy_jobject< ::javaproxy::java::lang::Object >& p0) const;
    bool isEmpty() const;
    bool remove(const ::zschimmer::javabridge::proxy_jobject< ::javaproxy::java::lang::Object >& p0) const;
    jint size() const;
    ::javaproxy::java::lang::String toString() const;

    ::zschimmer::javabridge::Class* java_object_class_() const;

    static ::zschimmer::javabridge::Class* java_class_();


  private:
    struct Lazy_class : ::zschimmer::abstract_lazy<AbstractCollection__class*> {
        void initialize() const;
    };

    Lazy_class _class;
};


}}}

#endif
