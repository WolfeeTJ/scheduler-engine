// *** Generated by com.sos.scheduler.engine.cplusplus.generator ***

#ifndef _JAVAPROXY_COM_SOS_SCHEDULER_ENGINE_KERNEL_CPPPROXY_ORDER_SUBSYSTEMC_H_
#define _JAVAPROXY_COM_SOS_SCHEDULER_ENGINE_KERNEL_CPPPROXY_ORDER_SUBSYSTEMC_H_

#include "../zschimmer/zschimmer.h"
#include "../zschimmer/java.h"
#include "../zschimmer/Has_proxy.h"
#include "../zschimmer/javaproxy.h"
#include "../zschimmer/lazy.h"
#include "java__lang__Object.h"

namespace javaproxy { namespace java { namespace lang { struct Object; }}}
namespace javaproxy { namespace java { namespace lang { struct String; }}}
namespace javaproxy { namespace java { namespace util { struct ArrayList; }}}


namespace javaproxy { namespace com { namespace sos { namespace scheduler { namespace engine { namespace kernel { namespace cppproxy { 


struct Order_subsystemC__class;

struct Order_subsystemC : ::zschimmer::javabridge::proxy_jobject< Order_subsystemC >, ::javaproxy::java::lang::Object {
  private:
    static Order_subsystemC new_instance();  // Not implemented
  public:

    Order_subsystemC(jobject = NULL);

    Order_subsystemC(const Order_subsystemC&);

    #ifdef Z_HAS_MOVE_CONSTRUCTOR
        Order_subsystemC(Order_subsystemC&&);
    #endif

    ~Order_subsystemC();

    Order_subsystemC& operator=(jobject jo) { assign_(jo); return *this; }
    Order_subsystemC& operator=(const Order_subsystemC& o) { assign_(o.get_jobject()); return *this; }
    #ifdef Z_HAS_MOVE_CONSTRUCTOR
        Order_subsystemC& operator=(Order_subsystemC&& o) { set_jobject(o.get_jobject()); o.set_jobject(NULL); return *this; }
    #endif

    jobject get_jobject() const { return ::zschimmer::javabridge::proxy_jobject< Order_subsystemC >::get_jobject(); }

  protected:
    void set_jobject(jobject jo) {
        ::zschimmer::javabridge::proxy_jobject< Order_subsystemC >::set_jobject(jo);
        ::javaproxy::java::lang::Object::set_jobject(jo);
    }
  public:


    ::zschimmer::javabridge::Class* java_object_class_() const;

    static ::zschimmer::javabridge::Class* java_class_();


  private:
    struct Lazy_class : ::zschimmer::abstract_lazy<Order_subsystemC__class*> {
        void initialize() const;
    };

    Lazy_class _class;
};


}}}}}}}

#endif
