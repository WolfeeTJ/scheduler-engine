// *** Generated by com.sos.scheduler.engine.cplusplus.generator ***

#include "_precompiled.h"

#include "com__sos__scheduler__engine__kernel__cppproxy__SettingsC.h"
#include "java__lang__Object.h"
#include "java__lang__String.h"

namespace javaproxy { namespace com { namespace sos { namespace scheduler { namespace engine { namespace kernel { namespace cppproxy { 

struct SettingsC__class : ::zschimmer::javabridge::Class
{
    SettingsC__class(const string& class_name);
   ~SettingsC__class();


    static const ::zschimmer::javabridge::class_factory< SettingsC__class > class_factory;
};

const ::zschimmer::javabridge::class_factory< SettingsC__class > SettingsC__class::class_factory ("com.sos.scheduler.engine.kernel.cppproxy.SettingsC");

SettingsC__class::SettingsC__class(const string& class_name) :
    ::zschimmer::javabridge::Class(class_name)
{}

SettingsC__class::~SettingsC__class() {}




SettingsC::SettingsC(jobject jo) { if (jo) assign_(jo); }

SettingsC::SettingsC(const SettingsC& o) { assign_(o.get_jobject()); }

#ifdef Z_HAS_MOVE_CONSTRUCTOR
    SettingsC::SettingsC(SettingsC&& o) { set_jobject(o.get_jobject());  o.set_jobject(NULL); }
#endif

SettingsC::~SettingsC() { assign_(NULL); }





::zschimmer::javabridge::Class* SettingsC::java_object_class_() const { return _class.get(); }

::zschimmer::javabridge::Class* SettingsC::java_class_() { return SettingsC__class::class_factory.clas(); }


void SettingsC::Lazy_class::initialize() const {
    _value = SettingsC__class::class_factory.clas();
}


}}}}}}}
