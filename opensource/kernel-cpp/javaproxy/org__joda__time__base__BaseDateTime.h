// *** Generated by com.sos.scheduler.engine.cplusplus.generator ***

#ifndef _JAVAPROXY_ORG_JODA_TIME_BASE_BASEDATETIME_H_
#define _JAVAPROXY_ORG_JODA_TIME_BASE_BASEDATETIME_H_

#include "../zschimmer/zschimmer.h"
#include "../zschimmer/java.h"
#include "../zschimmer/Has_proxy.h"
#include "../zschimmer/javaproxy.h"
#include "../zschimmer/lazy.h"
#include "java__lang__Object.h"
#include "org__joda__time__base__AbstractDateTime.h"
#include "org__joda__time__base__AbstractInstant.h"

namespace javaproxy { namespace java { namespace lang { struct Object; }}}
namespace javaproxy { namespace java { namespace lang { struct String; }}}
namespace javaproxy { namespace org { namespace joda { namespace time { namespace base { struct AbstractDateTime; }}}}}


namespace javaproxy { namespace org { namespace joda { namespace time { namespace base { 


struct BaseDateTime__class;

struct BaseDateTime : ::zschimmer::javabridge::proxy_jobject< BaseDateTime >, ::javaproxy::org::joda::time::base::AbstractDateTime {
    static BaseDateTime new_instance();
    static BaseDateTime new_instance(jint p0, jint p1, jint p2, jint p3, jint p4, jint p5, jint p6);
    static BaseDateTime new_instance(jlong p0);

    BaseDateTime(jobject = NULL);

    BaseDateTime(const BaseDateTime&);

    #ifdef Z_HAS_MOVE_CONSTRUCTOR
        BaseDateTime(BaseDateTime&&);
    #endif

    ~BaseDateTime();

    BaseDateTime& operator=(jobject jo) { assign_(jo); return *this; }
    BaseDateTime& operator=(const BaseDateTime& o) { assign_(o.get_jobject()); return *this; }
    #ifdef Z_HAS_MOVE_CONSTRUCTOR
        BaseDateTime& operator=(BaseDateTime&& o) { set_jobject(o.get_jobject()); o.set_jobject(NULL); return *this; }
    #endif

    jobject get_jobject() const { return ::zschimmer::javabridge::proxy_jobject< BaseDateTime >::get_jobject(); }

  protected:
    void set_jobject(jobject jo) {
        ::zschimmer::javabridge::proxy_jobject< BaseDateTime >::set_jobject(jo);
        ::javaproxy::org::joda::time::base::AbstractDateTime::set_jobject(jo);
    }
  public:

    jlong getMillis() const;

    ::zschimmer::javabridge::Class* java_object_class_() const;

    static ::zschimmer::javabridge::Class* java_class_();


  private:
    struct Lazy_class : ::zschimmer::abstract_lazy<BaseDateTime__class*> {
        void initialize() const;
    };

    Lazy_class _class;
};


}}}}}

#endif
