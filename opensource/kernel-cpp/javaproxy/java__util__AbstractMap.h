// *** Generated by com.sos.scheduler.engine.cplusplus.generator ***

#ifndef _JAVAPROXY_JAVA_UTIL_ABSTRACTMAP_H_
#define _JAVAPROXY_JAVA_UTIL_ABSTRACTMAP_H_

#include "_precompiled.h"

#include "java__lang__Object.h"

namespace javaproxy { namespace java { namespace lang { struct Object; }}}
namespace javaproxy { namespace java { namespace lang { struct String; }}}


namespace javaproxy { namespace java { namespace util { 


struct AbstractMap__class;

struct AbstractMap : ::zschimmer::javabridge::proxy_jobject< AbstractMap >, ::javaproxy::java::lang::Object {
  private:
    static AbstractMap new_instance();  // Not implemented
  public:

    AbstractMap(jobject = NULL);

    AbstractMap(const AbstractMap&);

    #ifdef Z_HAS_MOVE_CONSTRUCTOR
        AbstractMap(AbstractMap&&);
    #endif

    ~AbstractMap();

    AbstractMap& operator=(jobject jo) { assign_(jo); return *this; }
    AbstractMap& operator=(const AbstractMap& o) { assign_(o.get_jobject()); return *this; }
    #ifdef Z_HAS_MOVE_CONSTRUCTOR
        AbstractMap& operator=(AbstractMap&& o) { set_jobject(o.get_jobject()); o.set_jobject(NULL); return *this; }
    #endif

    jobject get_jobject() const { return ::zschimmer::javabridge::proxy_jobject< AbstractMap >::get_jobject(); }

  protected:
    void set_jobject(jobject jo) {
        ::zschimmer::javabridge::proxy_jobject< AbstractMap >::set_jobject(jo);
        ::javaproxy::java::lang::Object::set_jobject(jo);
    }
  public:

    void clear() const;
    bool containsKey(const ::zschimmer::javabridge::proxy_jobject< ::javaproxy::java::lang::Object >& p0) const;
    bool containsValue(const ::zschimmer::javabridge::proxy_jobject< ::javaproxy::java::lang::Object >& p0) const;
    bool equals(const ::zschimmer::javabridge::proxy_jobject< ::javaproxy::java::lang::Object >& p0) const;
    ::javaproxy::java::lang::Object get(const ::zschimmer::javabridge::proxy_jobject< ::javaproxy::java::lang::Object >& p0) const;
    jint hashCode() const;
    bool isEmpty() const;
    ::javaproxy::java::lang::Object put(const ::zschimmer::javabridge::proxy_jobject< ::javaproxy::java::lang::Object >& p0, const ::zschimmer::javabridge::proxy_jobject< ::javaproxy::java::lang::Object >& p1) const;
    ::javaproxy::java::lang::Object remove(const ::zschimmer::javabridge::proxy_jobject< ::javaproxy::java::lang::Object >& p0) const;
    jint size() const;
    ::javaproxy::java::lang::String toString() const;

    ::zschimmer::javabridge::Class* java_object_class_() const;

    static ::zschimmer::javabridge::Class* java_class_();


  private:
    struct Lazy_class : ::zschimmer::abstract_lazy<AbstractMap__class*> {
        void initialize() const;
    };

    Lazy_class _class;
};


}}}

#endif
