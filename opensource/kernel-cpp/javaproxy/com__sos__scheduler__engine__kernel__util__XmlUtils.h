// *** Generated by com.sos.scheduler.engine.cplusplus.generator ***

#ifndef _JAVAPROXY_COM_SOS_SCHEDULER_ENGINE_KERNEL_UTIL_XMLUTILS_H_
#define _JAVAPROXY_COM_SOS_SCHEDULER_ENGINE_KERNEL_UTIL_XMLUTILS_H_

#include "_precompiled.h"

#include "java__lang__Object.h"

namespace javaproxy { namespace java { namespace lang { struct Object; }}}
namespace javaproxy { namespace java { namespace lang { struct String; }}}
namespace javaproxy { namespace org { namespace w3c { namespace dom { struct Document; }}}}
namespace javaproxy { namespace org { namespace w3c { namespace dom { struct Element; }}}}
namespace javaproxy { namespace org { namespace w3c { namespace dom { struct Node; }}}}
namespace javaproxy { namespace org { namespace w3c { namespace dom { struct NodeList; }}}}


namespace javaproxy { namespace com { namespace sos { namespace scheduler { namespace engine { namespace kernel { namespace util { 


struct XmlUtils__class;

struct XmlUtils : ::zschimmer::javabridge::proxy_jobject< XmlUtils >, ::javaproxy::java::lang::Object {
  private:
    static XmlUtils new_instance();  // Not implemented
  public:

    XmlUtils(jobject = NULL);

    XmlUtils(const XmlUtils&);

    #ifdef Z_HAS_MOVE_CONSTRUCTOR
        XmlUtils(XmlUtils&&);
    #endif

    ~XmlUtils();

    XmlUtils& operator=(jobject jo) { assign_(jo); return *this; }
    XmlUtils& operator=(const XmlUtils& o) { assign_(o.get_jobject()); return *this; }
    #ifdef Z_HAS_MOVE_CONSTRUCTOR
        XmlUtils& operator=(XmlUtils&& o) { set_jobject(o.get_jobject()); o.set_jobject(NULL); return *this; }
    #endif

    jobject get_jobject() const { return ::zschimmer::javabridge::proxy_jobject< XmlUtils >::get_jobject(); }

  protected:
    void set_jobject(jobject jo) {
        ::zschimmer::javabridge::proxy_jobject< XmlUtils >::set_jobject(jo);
        ::javaproxy::java::lang::Object::set_jobject(jo);
    }
  public:

    static bool booleanXmlAttribute(const ::zschimmer::javabridge::proxy_jobject< ::javaproxy::org::w3c::dom::Element >& p0, const ::zschimmer::javabridge::proxy_jobject< ::javaproxy::java::lang::String >& p1, jboolean p2);
    static jint intXmlAttribute(const ::zschimmer::javabridge::proxy_jobject< ::javaproxy::org::w3c::dom::Element >& p0, const ::zschimmer::javabridge::proxy_jobject< ::javaproxy::java::lang::String >& p1);
    static ::javaproxy::org::w3c::dom::Document loadXml(const ::zschimmer::javabridge::Local_java_byte_array& p0);
    static ::javaproxy::org::w3c::dom::Document newDocument();
    static ::javaproxy::java::lang::String toXml(const ::zschimmer::javabridge::proxy_jobject< ::javaproxy::org::w3c::dom::Node >& p0);
    static string toXmlBytes(const ::zschimmer::javabridge::proxy_jobject< ::javaproxy::org::w3c::dom::Node >& p0, const ::zschimmer::javabridge::proxy_jobject< ::javaproxy::java::lang::String >& p1, jboolean p2);
    static ::javaproxy::java::lang::String xmlAttribute(const ::zschimmer::javabridge::proxy_jobject< ::javaproxy::org::w3c::dom::Element >& p0, const ::zschimmer::javabridge::proxy_jobject< ::javaproxy::java::lang::String >& p1, const ::zschimmer::javabridge::proxy_jobject< ::javaproxy::java::lang::String >& p2);
    static ::javaproxy::org::w3c::dom::Node xpathNode(const ::zschimmer::javabridge::proxy_jobject< ::javaproxy::org::w3c::dom::Node >& p0, const ::zschimmer::javabridge::proxy_jobject< ::javaproxy::java::lang::String >& p1);
    static ::javaproxy::org::w3c::dom::NodeList xpathNodeList(const ::zschimmer::javabridge::proxy_jobject< ::javaproxy::org::w3c::dom::Node >& p0, const ::zschimmer::javabridge::proxy_jobject< ::javaproxy::java::lang::String >& p1);

    ::zschimmer::javabridge::Class* java_object_class_() const;

    static ::zschimmer::javabridge::Class* java_class_();


  private:
    struct Lazy_class : ::zschimmer::abstract_lazy<XmlUtils__class*> {
        void initialize() const;
    };

    Lazy_class _class;
};


}}}}}}}

#endif
