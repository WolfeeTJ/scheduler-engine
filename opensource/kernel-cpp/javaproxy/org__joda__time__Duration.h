// *** Generated by com.sos.scheduler.engine.cplusplus.generator ***

#ifndef _JAVAPROXY_ORG_JODA_TIME_DURATION_H_
#define _JAVAPROXY_ORG_JODA_TIME_DURATION_H_

#include "../zschimmer/zschimmer.h"
#include "../zschimmer/java.h"
#include "../zschimmer/Has_proxy.h"
#include "../zschimmer/javaproxy.h"
#include "../zschimmer/lazy.h"
#include "java__lang__Object.h"
#include "org__joda__time__base__AbstractDuration.h"
#include "org__joda__time__base__BaseDuration.h"

namespace javaproxy { namespace java { namespace lang { struct Object; }}}
namespace javaproxy { namespace java { namespace lang { struct String; }}}
namespace javaproxy { namespace org { namespace joda { namespace time { namespace base { struct BaseDuration; }}}}}


namespace javaproxy { namespace org { namespace joda { namespace time { 


struct Duration__class;

struct Duration : ::zschimmer::javabridge::proxy_jobject< Duration >, ::javaproxy::org::joda::time::base::BaseDuration {
    static Duration new_instance(const ::zschimmer::javabridge::proxy_jobject< ::javaproxy::java::lang::Object >& p0);
    static Duration new_instance(jlong p0);
    static Duration new_instance(jlong p0, jlong p1);

    Duration(jobject = NULL);

    Duration(const Duration&);

    #ifdef Z_HAS_MOVE_CONSTRUCTOR
        Duration(Duration&&);
    #endif

    ~Duration();

    Duration& operator=(jobject jo) { assign_(jo); return *this; }
    Duration& operator=(const Duration& o) { assign_(o.get_jobject()); return *this; }
    #ifdef Z_HAS_MOVE_CONSTRUCTOR
        Duration& operator=(Duration&& o) { set_jobject(o.get_jobject()); o.set_jobject(NULL); return *this; }
    #endif

    jobject get_jobject() const { return ::zschimmer::javabridge::proxy_jobject< Duration >::get_jobject(); }

  protected:
    void set_jobject(jobject jo) {
        ::zschimmer::javabridge::proxy_jobject< Duration >::set_jobject(jo);
        ::javaproxy::org::joda::time::base::BaseDuration::set_jobject(jo);
    }
  public:

    jlong getStandardDays() const;
    jlong getStandardHours() const;
    jlong getStandardMinutes() const;
    jlong getStandardSeconds() const;
    static ::javaproxy::org::joda::time::Duration millis(jlong p0);
    ::javaproxy::org::joda::time::Duration minus(jlong p0) const;
    static ::javaproxy::org::joda::time::Duration parse(const ::zschimmer::javabridge::proxy_jobject< ::javaproxy::java::lang::String >& p0);
    ::javaproxy::org::joda::time::Duration plus(jlong p0) const;
    static ::javaproxy::org::joda::time::Duration standardDays(jlong p0);
    static ::javaproxy::org::joda::time::Duration standardHours(jlong p0);
    static ::javaproxy::org::joda::time::Duration standardMinutes(jlong p0);
    static ::javaproxy::org::joda::time::Duration standardSeconds(jlong p0);
    ::javaproxy::org::joda::time::Duration toDuration() const;
    ::javaproxy::org::joda::time::Duration withDurationAdded(jlong p0, jint p1) const;
    ::javaproxy::org::joda::time::Duration withMillis(jlong p0) const;

    ::zschimmer::javabridge::Class* java_object_class_() const;

    static ::zschimmer::javabridge::Class* java_class_();


  private:
    struct Lazy_class : ::zschimmer::abstract_lazy<Duration__class*> {
        void initialize() const;
    };

    Lazy_class _class;
};


}}}}

#endif
