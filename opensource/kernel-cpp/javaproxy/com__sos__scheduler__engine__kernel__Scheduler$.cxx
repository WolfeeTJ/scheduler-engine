// *** Generated by com.sos.scheduler.engine.cplusplus.generator ***

#include "_precompiled.h"

#include "com__sos__scheduler__engine__kernel__Scheduler$.h"
#include "com__sos__scheduler__engine__kernel__Scheduler.h"
#include "com__sos__scheduler__engine__kernel__cppproxy__SpoolerC.h"
#include "com__sos__scheduler__engine__main__SchedulerControllerBridge.h"
#include "java__lang__Object.h"
#include "java__lang__String.h"

namespace javaproxy { namespace com { namespace sos { namespace scheduler { namespace engine { namespace kernel { 

struct Scheduler$__class : ::zschimmer::javabridge::Class
{
    Scheduler$__class(const string& class_name);
   ~Scheduler$__class();

    ::zschimmer::javabridge::Method const _of__Lcom_sos_scheduler_engine_kernel_cppproxy_SpoolerC_2Lcom_sos_scheduler_engine_main_SchedulerControllerBridge_2Ljava_lang_String_2__method;

    static const ::zschimmer::javabridge::class_factory< Scheduler$__class > class_factory;
};

const ::zschimmer::javabridge::class_factory< Scheduler$__class > Scheduler$__class::class_factory ("com.sos.scheduler.engine.kernel.Scheduler$");

Scheduler$__class::Scheduler$__class(const string& class_name) :
    ::zschimmer::javabridge::Class(class_name)
    ,_of__Lcom_sos_scheduler_engine_kernel_cppproxy_SpoolerC_2Lcom_sos_scheduler_engine_main_SchedulerControllerBridge_2Ljava_lang_String_2__method(this, "of", "(Lcom/sos/scheduler/engine/kernel/cppproxy/SpoolerC;Lcom/sos/scheduler/engine/main/SchedulerControllerBridge;Ljava/lang/String;)Lcom/sos/scheduler/engine/kernel/Scheduler;"){}

Scheduler$__class::~Scheduler$__class() {}




Scheduler$::Scheduler$(jobject jo) { if (jo) assign_(jo); }

Scheduler$::Scheduler$(const Scheduler$& o) { assign_(o.get_jobject()); }

#ifdef Z_HAS_MOVE_CONSTRUCTOR
    Scheduler$::Scheduler$(Scheduler$&& o) { set_jobject(o.get_jobject());  o.set_jobject(NULL); }
#endif

Scheduler$::~Scheduler$() { assign_(NULL); }




::javaproxy::com::sos::scheduler::engine::kernel::Scheduler Scheduler$::of(const ::zschimmer::javabridge::proxy_jobject< ::javaproxy::com::sos::scheduler::engine::kernel::cppproxy::SpoolerC >& p0, const ::zschimmer::javabridge::proxy_jobject< ::javaproxy::com::sos::scheduler::engine::main::SchedulerControllerBridge >& p1, const ::zschimmer::javabridge::proxy_jobject< ::javaproxy::java::lang::String >& p2) const {
    ::zschimmer::javabridge::raw_parameter_list<3> parameter_list;
    parameter_list._jvalues[0].l = p0.get_jobject();
    parameter_list._jvalues[1].l = p1.get_jobject();
    parameter_list._jvalues[2].l = p2.get_jobject();
    Scheduler$__class* cls = _class.get();
    ::javaproxy::com::sos::scheduler::engine::kernel::Scheduler result;
    result.steal_local_ref(cls->_of__Lcom_sos_scheduler_engine_kernel_cppproxy_SpoolerC_2Lcom_sos_scheduler_engine_main_SchedulerControllerBridge_2Ljava_lang_String_2__method.jobject_call(get_jobject(), parameter_list));
    return result;
}


::zschimmer::javabridge::Class* Scheduler$::java_object_class_() const { return _class.get(); }

::zschimmer::javabridge::Class* Scheduler$::java_class_() { return Scheduler$__class::class_factory.clas(); }


void Scheduler$::Lazy_class::initialize() const {
    _value = Scheduler$__class::class_factory.clas();
}


}}}}}}
