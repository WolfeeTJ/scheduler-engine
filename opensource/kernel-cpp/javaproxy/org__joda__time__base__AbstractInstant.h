// *** Generated by com.sos.scheduler.engine.cplusplus.generator ***

#ifndef _JAVAPROXY_ORG_JODA_TIME_BASE_ABSTRACTINSTANT_H_
#define _JAVAPROXY_ORG_JODA_TIME_BASE_ABSTRACTINSTANT_H_

#include "../zschimmer/zschimmer.h"
#include "../zschimmer/java.h"
#include "../zschimmer/Has_proxy.h"
#include "../zschimmer/javaproxy.h"
#include "../zschimmer/lazy.h"
#include "java__lang__Object.h"

namespace javaproxy { namespace java { namespace lang { struct Object; }}}
namespace javaproxy { namespace java { namespace lang { struct String; }}}
namespace javaproxy { namespace org { namespace joda { namespace time { struct DateTime; }}}}


namespace javaproxy { namespace org { namespace joda { namespace time { namespace base { 


struct AbstractInstant__class;

struct AbstractInstant : ::zschimmer::javabridge::proxy_jobject< AbstractInstant >, ::javaproxy::java::lang::Object {
  private:
    static AbstractInstant new_instance();  // Not implemented
  public:

    AbstractInstant(jobject = NULL);

    AbstractInstant(const AbstractInstant&);

    #ifdef Z_HAS_MOVE_CONSTRUCTOR
        AbstractInstant(AbstractInstant&&);
    #endif

    ~AbstractInstant();

    AbstractInstant& operator=(jobject jo) { assign_(jo); return *this; }
    AbstractInstant& operator=(const AbstractInstant& o) { assign_(o.get_jobject()); return *this; }
    #ifdef Z_HAS_MOVE_CONSTRUCTOR
        AbstractInstant& operator=(AbstractInstant&& o) { set_jobject(o.get_jobject()); o.set_jobject(NULL); return *this; }
    #endif

    jobject get_jobject() const { return ::zschimmer::javabridge::proxy_jobject< AbstractInstant >::get_jobject(); }

  protected:
    void set_jobject(jobject jo) {
        ::zschimmer::javabridge::proxy_jobject< AbstractInstant >::set_jobject(jo);
        ::javaproxy::java::lang::Object::set_jobject(jo);
    }
  public:

    jint compareTo(const ::zschimmer::javabridge::proxy_jobject< ::javaproxy::java::lang::Object >& p0) const;
    bool equals(const ::zschimmer::javabridge::proxy_jobject< ::javaproxy::java::lang::Object >& p0) const;
    jint hashCode() const;
    bool isAfter(jlong p0) const;
    bool isAfterNow() const;
    bool isBefore(jlong p0) const;
    bool isBeforeNow() const;
    bool isEqual(jlong p0) const;
    bool isEqualNow() const;
    ::javaproxy::org::joda::time::DateTime toDateTime() const;
    ::javaproxy::org::joda::time::DateTime toDateTimeISO() const;
    ::javaproxy::java::lang::String toString() const;

    ::zschimmer::javabridge::Class* java_object_class_() const;

    static ::zschimmer::javabridge::Class* java_class_();


  private:
    struct Lazy_class : ::zschimmer::abstract_lazy<AbstractInstant__class*> {
        void initialize() const;
    };

    Lazy_class _class;
};


}}}}}

#endif
