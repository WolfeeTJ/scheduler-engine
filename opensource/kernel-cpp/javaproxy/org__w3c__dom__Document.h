// *** Generated by com.sos.scheduler.engine.cplusplus.generator ***

#include "_precompiled.h"

#ifndef _JAVAPROXY_ORG_W3C_DOM_DOCUMENT_H_
#define _JAVAPROXY_ORG_W3C_DOM_DOCUMENT_H_

#include "java__lang__Object.h"

namespace javaproxy { namespace java { namespace lang { struct Object; }}}
namespace javaproxy { namespace java { namespace lang { struct String; }}}
namespace javaproxy { namespace org { namespace w3c { namespace dom { struct Attr; }}}}
namespace javaproxy { namespace org { namespace w3c { namespace dom { struct CDATASection; }}}}
namespace javaproxy { namespace org { namespace w3c { namespace dom { struct Comment; }}}}
namespace javaproxy { namespace org { namespace w3c { namespace dom { struct Element; }}}}
namespace javaproxy { namespace org { namespace w3c { namespace dom { struct Node; }}}}
namespace javaproxy { namespace org { namespace w3c { namespace dom { struct NodeList; }}}}
namespace javaproxy { namespace org { namespace w3c { namespace dom { struct Text; }}}}


namespace javaproxy { namespace org { namespace w3c { namespace dom { 


struct Document__class;

struct Document : ::zschimmer::javabridge::proxy_jobject< Document >, ::javaproxy::java::lang::Object {
  private:
    static Document new_instance();  // Not implemented
  public:

    Document(jobject = NULL);

    Document(const Document&);

    #ifdef Z_HAS_MOVE_CONSTRUCTOR
        Document(Document&&);
    #endif

    ~Document();

    Document& operator=(jobject jo) { assign_(jo); return *this; }
    Document& operator=(const Document& o) { assign_(o.get_jobject()); return *this; }
    #ifdef Z_HAS_MOVE_CONSTRUCTOR
        Document& operator=(Document&& o) { set_jobject(o.get_jobject()); o.set_jobject(NULL); return *this; }
    #endif

    jobject get_jobject() const { return ::zschimmer::javabridge::proxy_jobject< Document >::get_jobject(); }

  protected:
    void set_jobject(jobject jo) {
        ::zschimmer::javabridge::proxy_jobject< Document >::set_jobject(jo);
        ::javaproxy::java::lang::Object::set_jobject(jo);
    }
  public:

    ::javaproxy::org::w3c::dom::Node adoptNode(const ::zschimmer::javabridge::proxy_jobject< ::javaproxy::org::w3c::dom::Node >& p0) const;
    ::javaproxy::org::w3c::dom::Attr createAttribute(const ::zschimmer::javabridge::proxy_jobject< ::javaproxy::java::lang::String >& p0) const;
    ::javaproxy::org::w3c::dom::Attr createAttributeNS(const ::zschimmer::javabridge::proxy_jobject< ::javaproxy::java::lang::String >& p0, const ::zschimmer::javabridge::proxy_jobject< ::javaproxy::java::lang::String >& p1) const;
    ::javaproxy::org::w3c::dom::CDATASection createCDATASection(const ::zschimmer::javabridge::proxy_jobject< ::javaproxy::java::lang::String >& p0) const;
    ::javaproxy::org::w3c::dom::Comment createComment(const ::zschimmer::javabridge::proxy_jobject< ::javaproxy::java::lang::String >& p0) const;
    ::javaproxy::org::w3c::dom::Element createElement(const ::zschimmer::javabridge::proxy_jobject< ::javaproxy::java::lang::String >& p0) const;
    ::javaproxy::org::w3c::dom::Element createElementNS(const ::zschimmer::javabridge::proxy_jobject< ::javaproxy::java::lang::String >& p0, const ::zschimmer::javabridge::proxy_jobject< ::javaproxy::java::lang::String >& p1) const;
    ::javaproxy::org::w3c::dom::Text createTextNode(const ::zschimmer::javabridge::proxy_jobject< ::javaproxy::java::lang::String >& p0) const;
    ::javaproxy::org::w3c::dom::Element getDocumentElement() const;
    ::javaproxy::java::lang::String getDocumentURI() const;
    ::javaproxy::org::w3c::dom::Element getElementById(const ::zschimmer::javabridge::proxy_jobject< ::javaproxy::java::lang::String >& p0) const;
    ::javaproxy::org::w3c::dom::NodeList getElementsByTagName(const ::zschimmer::javabridge::proxy_jobject< ::javaproxy::java::lang::String >& p0) const;
    ::javaproxy::org::w3c::dom::NodeList getElementsByTagNameNS(const ::zschimmer::javabridge::proxy_jobject< ::javaproxy::java::lang::String >& p0, const ::zschimmer::javabridge::proxy_jobject< ::javaproxy::java::lang::String >& p1) const;
    ::javaproxy::java::lang::String getInputEncoding() const;
    bool getStrictErrorChecking() const;
    ::javaproxy::java::lang::String getXmlEncoding() const;
    bool getXmlStandalone() const;
    ::javaproxy::java::lang::String getXmlVersion() const;
    ::javaproxy::org::w3c::dom::Node importNode(const ::zschimmer::javabridge::proxy_jobject< ::javaproxy::org::w3c::dom::Node >& p0, jboolean p1) const;
    void normalizeDocument() const;
    ::javaproxy::org::w3c::dom::Node renameNode(const ::zschimmer::javabridge::proxy_jobject< ::javaproxy::org::w3c::dom::Node >& p0, const ::zschimmer::javabridge::proxy_jobject< ::javaproxy::java::lang::String >& p1, const ::zschimmer::javabridge::proxy_jobject< ::javaproxy::java::lang::String >& p2) const;
    void setDocumentURI(const ::zschimmer::javabridge::proxy_jobject< ::javaproxy::java::lang::String >& p0) const;
    void setStrictErrorChecking(jboolean p0) const;
    void setXmlStandalone(jboolean p0) const;
    void setXmlVersion(const ::zschimmer::javabridge::proxy_jobject< ::javaproxy::java::lang::String >& p0) const;

    ::zschimmer::javabridge::Class* java_object_class_() const;

    static ::zschimmer::javabridge::Class* java_class_();


  private:
    struct Lazy_class : ::zschimmer::abstract_lazy<Document__class*> {
        void initialize() const;
    };

    Lazy_class _class;
};


}}}}

#endif
