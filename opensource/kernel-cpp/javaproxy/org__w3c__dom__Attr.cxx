// *** Generated by com.sos.scheduler.engine.cplusplus.generator ***

#include "_precompiled.h"

#include "org__w3c__dom__Attr.h"
#include "java__lang__Object.h"
#include "java__lang__String.h"
#include "org__w3c__dom__Element.h"
#include "org__w3c__dom__Node.h"

namespace javaproxy { namespace org { namespace w3c { namespace dom { 

struct Attr__class : ::zschimmer::javabridge::Class
{
    Attr__class(const string& class_name);
   ~Attr__class();

    ::zschimmer::javabridge::Method const _getName____method;
    ::zschimmer::javabridge::Method const _getOwnerElement____method;
    ::zschimmer::javabridge::Method const _getSpecified____method;
    ::zschimmer::javabridge::Method const _getValue____method;
    ::zschimmer::javabridge::Method const _isId____method;
    ::zschimmer::javabridge::Method const _setValue__Ljava_lang_String_2__method;

    static const ::zschimmer::javabridge::class_factory< Attr__class > class_factory;
};

const ::zschimmer::javabridge::class_factory< Attr__class > Attr__class::class_factory ("org.w3c.dom.Attr");

Attr__class::Attr__class(const string& class_name) :
    ::zschimmer::javabridge::Class(class_name)
    ,_getName____method(this, "getName", "()Ljava/lang/String;")
    ,_getOwnerElement____method(this, "getOwnerElement", "()Lorg/w3c/dom/Element;")
    ,_getSpecified____method(this, "getSpecified", "()Z")
    ,_getValue____method(this, "getValue", "()Ljava/lang/String;")
    ,_isId____method(this, "isId", "()Z")
    ,_setValue__Ljava_lang_String_2__method(this, "setValue", "(Ljava/lang/String;)V"){}

Attr__class::~Attr__class() {}




Attr::Attr(jobject jo) { if (jo) assign_(jo); }

Attr::Attr(const Attr& o) { assign_(o.get_jobject()); }

#ifdef Z_HAS_MOVE_CONSTRUCTOR
    Attr::Attr(Attr&& o) { set_jobject(o.get_jobject());  o.set_jobject(NULL); }
#endif

Attr::~Attr() { assign_(NULL); }




::javaproxy::java::lang::String Attr::getName() const {
    ::zschimmer::javabridge::raw_parameter_list<0> parameter_list;
    Attr__class* cls = _class.get();
    ::javaproxy::java::lang::String result;
    result.steal_local_ref(cls->_getName____method.jobject_call(get_jobject(), parameter_list));
    return result;
}

::javaproxy::org::w3c::dom::Element Attr::getOwnerElement() const {
    ::zschimmer::javabridge::raw_parameter_list<0> parameter_list;
    Attr__class* cls = _class.get();
    ::javaproxy::org::w3c::dom::Element result;
    result.steal_local_ref(cls->_getOwnerElement____method.jobject_call(get_jobject(), parameter_list));
    return result;
}

bool Attr::getSpecified() const {
    ::zschimmer::javabridge::raw_parameter_list<0> parameter_list;
    Attr__class* cls = _class.get();
    return 0 != cls->_getSpecified____method.bool_call(get_jobject(), parameter_list);
}

::javaproxy::java::lang::String Attr::getValue() const {
    ::zschimmer::javabridge::raw_parameter_list<0> parameter_list;
    Attr__class* cls = _class.get();
    ::javaproxy::java::lang::String result;
    result.steal_local_ref(cls->_getValue____method.jobject_call(get_jobject(), parameter_list));
    return result;
}

bool Attr::isId() const {
    ::zschimmer::javabridge::raw_parameter_list<0> parameter_list;
    Attr__class* cls = _class.get();
    return 0 != cls->_isId____method.bool_call(get_jobject(), parameter_list);
}

void Attr::setValue(const ::zschimmer::javabridge::proxy_jobject< ::javaproxy::java::lang::String >& p0) const {
    ::zschimmer::javabridge::raw_parameter_list<1> parameter_list;
    parameter_list._jvalues[0].l = p0.get_jobject();
    Attr__class* cls = _class.get();
    cls->_setValue__Ljava_lang_String_2__method.call(get_jobject(), parameter_list);
}


::zschimmer::javabridge::Class* Attr::java_object_class_() const { return _class.get(); }

::zschimmer::javabridge::Class* Attr::java_class_() { return Attr__class::class_factory.clas(); }


void Attr::Lazy_class::initialize() const {
    _value = Attr__class::class_factory.clas();
}


}}}}
