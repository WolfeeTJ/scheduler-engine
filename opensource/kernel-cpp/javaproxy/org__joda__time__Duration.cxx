// *** Generated by com.sos.scheduler.engine.cplusplus.generator ***

#include "_precompiled.h"

#include "org__joda__time__Duration.h"
#include "java__lang__Object.h"
#include "java__lang__String.h"
#include "org__joda__time__ReadableInstant.h"
#include "org__joda__time__base__BaseDuration.h"

namespace javaproxy { namespace org { namespace joda { namespace time { 

struct Duration__class : ::zschimmer::javabridge::Class
{
    Duration__class(const string& class_name);
   ~Duration__class();

    ::zschimmer::javabridge::Method const __constructor__Ljava_lang_Object_2__method;
    ::zschimmer::javabridge::Method const __constructor__J__method;
    ::zschimmer::javabridge::Method const __constructor__JJ__method;
    ::zschimmer::javabridge::Method const __constructor__Lorg_joda_time_ReadableInstant_2Lorg_joda_time_ReadableInstant_2__method;
    ::zschimmer::javabridge::Method const _getStandardDays____method;
    ::zschimmer::javabridge::Method const _getStandardHours____method;
    ::zschimmer::javabridge::Method const _getStandardMinutes____method;
    ::zschimmer::javabridge::Method const _getStandardSeconds____method;
    ::zschimmer::javabridge::Static_method const _millis__J__method;
    ::zschimmer::javabridge::Method const _minus__J__method;
    ::zschimmer::javabridge::Static_method const _parse__Ljava_lang_String_2__method;
    ::zschimmer::javabridge::Method const _plus__J__method;
    ::zschimmer::javabridge::Static_method const _standardDays__J__method;
    ::zschimmer::javabridge::Static_method const _standardHours__J__method;
    ::zschimmer::javabridge::Static_method const _standardMinutes__J__method;
    ::zschimmer::javabridge::Static_method const _standardSeconds__J__method;
    ::zschimmer::javabridge::Method const _toDuration____method;
    ::zschimmer::javabridge::Method const _withDurationAdded__JI__method;
    ::zschimmer::javabridge::Method const _withMillis__J__method;

    static const ::zschimmer::javabridge::class_factory< Duration__class > class_factory;
};

const ::zschimmer::javabridge::class_factory< Duration__class > Duration__class::class_factory ("org.joda.time.Duration");

Duration__class::Duration__class(const string& class_name) :
    ::zschimmer::javabridge::Class(class_name)
    ,__constructor__Ljava_lang_Object_2__method(this, "<init>", "(Ljava/lang/Object;)V")
    ,__constructor__J__method(this, "<init>", "(J)V")
    ,__constructor__JJ__method(this, "<init>", "(JJ)V")
    ,__constructor__Lorg_joda_time_ReadableInstant_2Lorg_joda_time_ReadableInstant_2__method(this, "<init>", "(Lorg/joda/time/ReadableInstant;Lorg/joda/time/ReadableInstant;)V")
    ,_getStandardDays____method(this, "getStandardDays", "()J")
    ,_getStandardHours____method(this, "getStandardHours", "()J")
    ,_getStandardMinutes____method(this, "getStandardMinutes", "()J")
    ,_getStandardSeconds____method(this, "getStandardSeconds", "()J")
    ,_millis__J__method(this, "millis", "(J)Lorg/joda/time/Duration;")
    ,_minus__J__method(this, "minus", "(J)Lorg/joda/time/Duration;")
    ,_parse__Ljava_lang_String_2__method(this, "parse", "(Ljava/lang/String;)Lorg/joda/time/Duration;")
    ,_plus__J__method(this, "plus", "(J)Lorg/joda/time/Duration;")
    ,_standardDays__J__method(this, "standardDays", "(J)Lorg/joda/time/Duration;")
    ,_standardHours__J__method(this, "standardHours", "(J)Lorg/joda/time/Duration;")
    ,_standardMinutes__J__method(this, "standardMinutes", "(J)Lorg/joda/time/Duration;")
    ,_standardSeconds__J__method(this, "standardSeconds", "(J)Lorg/joda/time/Duration;")
    ,_toDuration____method(this, "toDuration", "()Lorg/joda/time/Duration;")
    ,_withDurationAdded__JI__method(this, "withDurationAdded", "(JI)Lorg/joda/time/Duration;")
    ,_withMillis__J__method(this, "withMillis", "(J)Lorg/joda/time/Duration;"){}

Duration__class::~Duration__class() {}



Duration Duration::new_instance(const ::zschimmer::javabridge::proxy_jobject< ::javaproxy::java::lang::Object >& p0) {
    Duration result;
    result.java_object_allocate_();
    ::zschimmer::javabridge::raw_parameter_list<1> parameter_list;
    parameter_list._jvalues[0].l = p0.get_jobject();
    Duration__class* cls = result._class.get();
    cls->__constructor__Ljava_lang_Object_2__method.call(result.get_jobject(), parameter_list);
    return result;
}

Duration Duration::new_instance(jlong p0) {
    Duration result;
    result.java_object_allocate_();
    ::zschimmer::javabridge::raw_parameter_list<1> parameter_list;
    parameter_list._jvalues[0].j = p0;
    Duration__class* cls = result._class.get();
    cls->__constructor__J__method.call(result.get_jobject(), parameter_list);
    return result;
}

Duration Duration::new_instance(jlong p0, jlong p1) {
    Duration result;
    result.java_object_allocate_();
    ::zschimmer::javabridge::raw_parameter_list<2> parameter_list;
    parameter_list._jvalues[0].j = p0;
    parameter_list._jvalues[1].j = p1;
    Duration__class* cls = result._class.get();
    cls->__constructor__JJ__method.call(result.get_jobject(), parameter_list);
    return result;
}

Duration Duration::new_instance(const ::zschimmer::javabridge::proxy_jobject< ::javaproxy::org::joda::time::ReadableInstant >& p0, const ::zschimmer::javabridge::proxy_jobject< ::javaproxy::org::joda::time::ReadableInstant >& p1) {
    Duration result;
    result.java_object_allocate_();
    ::zschimmer::javabridge::raw_parameter_list<2> parameter_list;
    parameter_list._jvalues[0].l = p0.get_jobject();
    parameter_list._jvalues[1].l = p1.get_jobject();
    Duration__class* cls = result._class.get();
    cls->__constructor__Lorg_joda_time_ReadableInstant_2Lorg_joda_time_ReadableInstant_2__method.call(result.get_jobject(), parameter_list);
    return result;
}


Duration::Duration(jobject jo) { if (jo) assign_(jo); }

Duration::Duration(const Duration& o) { assign_(o.get_jobject()); }

#ifdef Z_HAS_MOVE_CONSTRUCTOR
    Duration::Duration(Duration&& o) { set_jobject(o.get_jobject());  o.set_jobject(NULL); }
#endif

Duration::~Duration() { assign_(NULL); }




jlong Duration::getStandardDays() const {
    ::zschimmer::javabridge::raw_parameter_list<0> parameter_list;
    Duration__class* cls = _class.get();
    return cls->_getStandardDays____method.long_call(get_jobject(), parameter_list);
}

jlong Duration::getStandardHours() const {
    ::zschimmer::javabridge::raw_parameter_list<0> parameter_list;
    Duration__class* cls = _class.get();
    return cls->_getStandardHours____method.long_call(get_jobject(), parameter_list);
}

jlong Duration::getStandardMinutes() const {
    ::zschimmer::javabridge::raw_parameter_list<0> parameter_list;
    Duration__class* cls = _class.get();
    return cls->_getStandardMinutes____method.long_call(get_jobject(), parameter_list);
}

jlong Duration::getStandardSeconds() const {
    ::zschimmer::javabridge::raw_parameter_list<0> parameter_list;
    Duration__class* cls = _class.get();
    return cls->_getStandardSeconds____method.long_call(get_jobject(), parameter_list);
}

::javaproxy::org::joda::time::Duration Duration::millis(jlong p0) {
    ::zschimmer::javabridge::raw_parameter_list<1> parameter_list;
    parameter_list._jvalues[0].j = p0;
    Duration__class* cls = Duration__class::class_factory.clas();
    ::javaproxy::org::joda::time::Duration result;
    result.steal_local_ref(cls->_millis__J__method.jobject_call(cls->get_jclass(), parameter_list));
    return result;
}

::javaproxy::org::joda::time::Duration Duration::minus(jlong p0) const {
    ::zschimmer::javabridge::raw_parameter_list<1> parameter_list;
    parameter_list._jvalues[0].j = p0;
    Duration__class* cls = _class.get();
    ::javaproxy::org::joda::time::Duration result;
    result.steal_local_ref(cls->_minus__J__method.jobject_call(get_jobject(), parameter_list));
    return result;
}

::javaproxy::org::joda::time::Duration Duration::parse(const ::zschimmer::javabridge::proxy_jobject< ::javaproxy::java::lang::String >& p0) {
    ::zschimmer::javabridge::raw_parameter_list<1> parameter_list;
    parameter_list._jvalues[0].l = p0.get_jobject();
    Duration__class* cls = Duration__class::class_factory.clas();
    ::javaproxy::org::joda::time::Duration result;
    result.steal_local_ref(cls->_parse__Ljava_lang_String_2__method.jobject_call(cls->get_jclass(), parameter_list));
    return result;
}

::javaproxy::org::joda::time::Duration Duration::plus(jlong p0) const {
    ::zschimmer::javabridge::raw_parameter_list<1> parameter_list;
    parameter_list._jvalues[0].j = p0;
    Duration__class* cls = _class.get();
    ::javaproxy::org::joda::time::Duration result;
    result.steal_local_ref(cls->_plus__J__method.jobject_call(get_jobject(), parameter_list));
    return result;
}

::javaproxy::org::joda::time::Duration Duration::standardDays(jlong p0) {
    ::zschimmer::javabridge::raw_parameter_list<1> parameter_list;
    parameter_list._jvalues[0].j = p0;
    Duration__class* cls = Duration__class::class_factory.clas();
    ::javaproxy::org::joda::time::Duration result;
    result.steal_local_ref(cls->_standardDays__J__method.jobject_call(cls->get_jclass(), parameter_list));
    return result;
}

::javaproxy::org::joda::time::Duration Duration::standardHours(jlong p0) {
    ::zschimmer::javabridge::raw_parameter_list<1> parameter_list;
    parameter_list._jvalues[0].j = p0;
    Duration__class* cls = Duration__class::class_factory.clas();
    ::javaproxy::org::joda::time::Duration result;
    result.steal_local_ref(cls->_standardHours__J__method.jobject_call(cls->get_jclass(), parameter_list));
    return result;
}

::javaproxy::org::joda::time::Duration Duration::standardMinutes(jlong p0) {
    ::zschimmer::javabridge::raw_parameter_list<1> parameter_list;
    parameter_list._jvalues[0].j = p0;
    Duration__class* cls = Duration__class::class_factory.clas();
    ::javaproxy::org::joda::time::Duration result;
    result.steal_local_ref(cls->_standardMinutes__J__method.jobject_call(cls->get_jclass(), parameter_list));
    return result;
}

::javaproxy::org::joda::time::Duration Duration::standardSeconds(jlong p0) {
    ::zschimmer::javabridge::raw_parameter_list<1> parameter_list;
    parameter_list._jvalues[0].j = p0;
    Duration__class* cls = Duration__class::class_factory.clas();
    ::javaproxy::org::joda::time::Duration result;
    result.steal_local_ref(cls->_standardSeconds__J__method.jobject_call(cls->get_jclass(), parameter_list));
    return result;
}

::javaproxy::org::joda::time::Duration Duration::toDuration() const {
    ::zschimmer::javabridge::raw_parameter_list<0> parameter_list;
    Duration__class* cls = _class.get();
    ::javaproxy::org::joda::time::Duration result;
    result.steal_local_ref(cls->_toDuration____method.jobject_call(get_jobject(), parameter_list));
    return result;
}

::javaproxy::org::joda::time::Duration Duration::withDurationAdded(jlong p0, jint p1) const {
    ::zschimmer::javabridge::raw_parameter_list<2> parameter_list;
    parameter_list._jvalues[0].j = p0;
    parameter_list._jvalues[1].i = p1;
    Duration__class* cls = _class.get();
    ::javaproxy::org::joda::time::Duration result;
    result.steal_local_ref(cls->_withDurationAdded__JI__method.jobject_call(get_jobject(), parameter_list));
    return result;
}

::javaproxy::org::joda::time::Duration Duration::withMillis(jlong p0) const {
    ::zschimmer::javabridge::raw_parameter_list<1> parameter_list;
    parameter_list._jvalues[0].j = p0;
    Duration__class* cls = _class.get();
    ::javaproxy::org::joda::time::Duration result;
    result.steal_local_ref(cls->_withMillis__J__method.jobject_call(get_jobject(), parameter_list));
    return result;
}


::zschimmer::javabridge::Class* Duration::java_object_class_() const { return _class.get(); }

::zschimmer::javabridge::Class* Duration::java_class_() { return Duration__class::class_factory.clas(); }


void Duration::Lazy_class::initialize() const {
    _value = Duration__class::class_factory.clas();
}


}}}}
