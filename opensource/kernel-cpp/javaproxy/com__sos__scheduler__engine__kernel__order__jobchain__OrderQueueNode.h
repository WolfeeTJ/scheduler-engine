// *** Generated by com.sos.scheduler.engine.cplusplus.generator ***

#ifndef _JAVAPROXY_COM_SOS_SCHEDULER_ENGINE_KERNEL_ORDER_JOBCHAIN_ORDERQUEUENODE_H_
#define _JAVAPROXY_COM_SOS_SCHEDULER_ENGINE_KERNEL_ORDER_JOBCHAIN_ORDERQUEUENODE_H_

#include "../zschimmer/zschimmer.h"
#include "../zschimmer/java.h"
#include "../zschimmer/Has_proxy.h"
#include "../zschimmer/javaproxy.h"
#include "../zschimmer/lazy.h"
#include "com__sos__scheduler__engine__kernel__order__jobchain__Node.h"
#include "java__lang__Object.h"

namespace javaproxy { namespace com { namespace google { namespace inject { struct Injector; }}}}
namespace javaproxy { namespace com { namespace sos { namespace scheduler { namespace engine { namespace kernel { namespace order { namespace jobchain { struct Node; }}}}}}}}
namespace javaproxy { namespace java { namespace lang { struct String; }}}


namespace javaproxy { namespace com { namespace sos { namespace scheduler { namespace engine { namespace kernel { namespace order { namespace jobchain { 


struct OrderQueueNode__class;

struct OrderQueueNode : ::zschimmer::javabridge::proxy_jobject< OrderQueueNode >, ::javaproxy::com::sos::scheduler::engine::kernel::order::jobchain::Node {
    static OrderQueueNode new_instance();

    OrderQueueNode(jobject = NULL);

    OrderQueueNode(const OrderQueueNode&);

    #ifdef Z_HAS_MOVE_CONSTRUCTOR
        OrderQueueNode(OrderQueueNode&&);
    #endif

    ~OrderQueueNode();

    OrderQueueNode& operator=(jobject jo) { assign_(jo); return *this; }
    OrderQueueNode& operator=(const OrderQueueNode& o) { assign_(o.get_jobject()); return *this; }
    #ifdef Z_HAS_MOVE_CONSTRUCTOR
        OrderQueueNode& operator=(OrderQueueNode&& o) { set_jobject(o.get_jobject()); o.set_jobject(NULL); return *this; }
    #endif

    jobject get_jobject() const { return ::zschimmer::javabridge::proxy_jobject< OrderQueueNode >::get_jobject(); }

  protected:
    void set_jobject(jobject jo) {
        ::zschimmer::javabridge::proxy_jobject< OrderQueueNode >::set_jobject(jo);
        ::javaproxy::com::sos::scheduler::engine::kernel::order::jobchain::Node::set_jobject(jo);
    }
  public:

    ::javaproxy::com::google::inject::Injector injector() const;
    jint orderCount() const;

    ::zschimmer::javabridge::Class* java_object_class_() const;

    static ::zschimmer::javabridge::Class* java_class_();


  private:
    struct Lazy_class : ::zschimmer::abstract_lazy<OrderQueueNode__class*> {
        void initialize() const;
    };

    Lazy_class _class;
};


}}}}}}}}

#endif
