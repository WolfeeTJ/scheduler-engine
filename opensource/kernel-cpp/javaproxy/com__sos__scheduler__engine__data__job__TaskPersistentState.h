// *** Generated by com.sos.scheduler.engine.cplusplus.generator ***

#ifndef _JAVAPROXY_COM_SOS_SCHEDULER_ENGINE_DATA_JOB_TASKPERSISTENTSTATE_H_
#define _JAVAPROXY_COM_SOS_SCHEDULER_ENGINE_DATA_JOB_TASKPERSISTENTSTATE_H_

#include "../zschimmer/zschimmer.h"
#include "../zschimmer/java.h"
#include "../zschimmer/Has_proxy.h"
#include "../zschimmer/javaproxy.h"
#include "../zschimmer/lazy.h"
#include "java__lang__Object.h"

namespace javaproxy { namespace com { namespace sos { namespace scheduler { namespace engine { namespace data { namespace job { struct TaskId; }}}}}}}
namespace javaproxy { namespace java { namespace lang { struct Object; }}}
namespace javaproxy { namespace java { namespace lang { struct String; }}}
namespace javaproxy { namespace org { namespace joda { namespace time { struct ReadableInstant; }}}}


namespace javaproxy { namespace com { namespace sos { namespace scheduler { namespace engine { namespace data { namespace job { 


struct TaskPersistentState__class;

struct TaskPersistentState : ::zschimmer::javabridge::proxy_jobject< TaskPersistentState >, ::javaproxy::java::lang::Object {
  private:
    static TaskPersistentState new_instance();  // Not implemented
  public:

    TaskPersistentState(jobject = NULL);

    TaskPersistentState(const TaskPersistentState&);

    #ifdef Z_HAS_MOVE_CONSTRUCTOR
        TaskPersistentState(TaskPersistentState&&);
    #endif

    ~TaskPersistentState();

    TaskPersistentState& operator=(jobject jo) { assign_(jo); return *this; }
    TaskPersistentState& operator=(const TaskPersistentState& o) { assign_(o.get_jobject()); return *this; }
    #ifdef Z_HAS_MOVE_CONSTRUCTOR
        TaskPersistentState& operator=(TaskPersistentState&& o) { set_jobject(o.get_jobject()); o.set_jobject(NULL); return *this; }
    #endif

    jobject get_jobject() const { return ::zschimmer::javabridge::proxy_jobject< TaskPersistentState >::get_jobject(); }

  protected:
    void set_jobject(jobject jo) {
        ::zschimmer::javabridge::proxy_jobject< TaskPersistentState >::set_jobject(jo);
        ::javaproxy::java::lang::Object::set_jobject(jo);
    }
  public:

    ::javaproxy::org::joda::time::ReadableInstant enqueueTime() const;
    ::javaproxy::java::lang::String parametersXml() const;
    jlong startTimeMillis() const;
    ::javaproxy::com::sos::scheduler::engine::data::job::TaskId taskId() const;
    ::javaproxy::java::lang::String xml() const;

    ::zschimmer::javabridge::Class* java_object_class_() const;

    static ::zschimmer::javabridge::Class* java_class_();


  private:
    struct Lazy_class : ::zschimmer::abstract_lazy<TaskPersistentState__class*> {
        void initialize() const;
    };

    Lazy_class _class;
};


}}}}}}}

#endif
