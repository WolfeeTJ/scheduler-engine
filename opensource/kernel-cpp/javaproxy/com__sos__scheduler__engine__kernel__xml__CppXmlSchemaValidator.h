// *** Generated by com.sos.scheduler.engine.cplusplus.generator ***

#ifndef _JAVAPROXY_COM_SOS_SCHEDULER_ENGINE_KERNEL_XML_CPPXMLSCHEMAVALIDATOR_H_
#define _JAVAPROXY_COM_SOS_SCHEDULER_ENGINE_KERNEL_XML_CPPXMLSCHEMAVALIDATOR_H_

#include "../zschimmer/zschimmer.h"
#include "../zschimmer/java.h"
#include "../zschimmer/Has_proxy.h"
#include "../zschimmer/javaproxy.h"
#include "../zschimmer/lazy.h"
#include "java__lang__Object.h"

namespace javaproxy { namespace java { namespace lang { struct Object; }}}
namespace javaproxy { namespace java { namespace lang { struct String; }}}
namespace javaproxy { namespace org { namespace w3c { namespace dom { struct Document; }}}}


namespace javaproxy { namespace com { namespace sos { namespace scheduler { namespace engine { namespace kernel { namespace xml { 


struct CppXmlSchemaValidator__class;

struct CppXmlSchemaValidator : ::zschimmer::javabridge::proxy_jobject< CppXmlSchemaValidator >, ::javaproxy::java::lang::Object {
    static CppXmlSchemaValidator new_instance(const ::zschimmer::javabridge::proxy_jobject< ::javaproxy::java::lang::String >& p0);

    CppXmlSchemaValidator(jobject = NULL);

    CppXmlSchemaValidator(const CppXmlSchemaValidator&);

    #ifdef Z_HAS_MOVE_CONSTRUCTOR
        CppXmlSchemaValidator(CppXmlSchemaValidator&&);
    #endif

    ~CppXmlSchemaValidator();

    CppXmlSchemaValidator& operator=(jobject jo) { assign_(jo); return *this; }
    CppXmlSchemaValidator& operator=(const CppXmlSchemaValidator& o) { assign_(o.get_jobject()); return *this; }
    #ifdef Z_HAS_MOVE_CONSTRUCTOR
        CppXmlSchemaValidator& operator=(CppXmlSchemaValidator&& o) { set_jobject(o.get_jobject()); o.set_jobject(NULL); return *this; }
    #endif

    jobject get_jobject() const { return ::zschimmer::javabridge::proxy_jobject< CppXmlSchemaValidator >::get_jobject(); }

  protected:
    void set_jobject(jobject jo) {
        ::zschimmer::javabridge::proxy_jobject< CppXmlSchemaValidator >::set_jobject(jo);
        ::javaproxy::java::lang::Object::set_jobject(jo);
    }
  public:

    void validate(const ::zschimmer::javabridge::proxy_jobject< ::javaproxy::org::w3c::dom::Document >& p0) const;

    ::zschimmer::javabridge::Class* java_object_class_() const;

    static ::zschimmer::javabridge::Class* java_class_();


  private:
    struct Lazy_class : ::zschimmer::abstract_lazy<CppXmlSchemaValidator__class*> {
        void initialize() const;
    };

    Lazy_class _class;
};


}}}}}}}

#endif
