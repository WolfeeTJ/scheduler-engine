<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet href="scheduler.xsl" type="text/xsl"?>
<!--
    title               = "Verteilte Aufträge"
-->
<description
    title               = "Distributed Orders"
    base_dir            = ""
    author              = "$Author: al $"
    date                = "$Date: 2007-03-20 11:23:39 +0200 (Do, 05 Okt 2006) $"
>
	
	<h2>
		Load Balancing With Distributed Orders
<!--Load Balancing mit verteilten Aufträgen-->
	</h2>
	
	<p>
		
		A Job Scheduler cluster can be used to distribute orders for processing on more than one host. 
		This feature can be used for load balancing - 
		reducing processing times by using more hardware to process an order.
<!--Ein Job Scheduler Cluster kann verwendet werden, um Aufträge auf mehreren Hosts zu verarbeiten. Dies kann zum 
		Load Balancing genutzt werden, um Verarbeitungszeiten durch einsatz weiterer Hardware zu minimieren.-->
	</p>
	
	<p>
		All the Job Schedulers in a cluster indicate their availability by sending out heartbeats. 
		At the same time they check the availability of all the other Job Schedulers in the cluster. 
		Should a Job Scheduler determine that the heartbeat of another Job Scheduler has been missing for a longer period of time
		(ca. 1-2 minutes), then it takes over the processing of the orders started by the missing Job Scheduler.
<!--In einem Cluster zeigen alle Job Scheduler ihre Verfügbarkeit durch das Versenden von Herzschlägen an. 
		Alle Job Scheduler prüfen, ob die jeweils anderen Job Scheduler verfügbar sind. 
		Stellt ein Job Scheduler fest, dass vom anderen Scheduler die Herzschläge über einen längeren Zeitraum
		(ca. 1-2 Minuten) ausbleiben, so übernimmt dieser die Verarbeitung der angefangenen Aufträge.-->
	</p>
	
	<p>
		The conditions under which a Job Scheduler cluster can be used for distributed orders are 
		schematically represented on the following diagram and described in the next section.
<!--Die Voraussetzungen für die Operation eines Scheduler Clusters für verteilte Aufträge
		sind schematisch in der folgende Zeichnung abgebildet, und werden im Detail in den nächsten Abschnitt beschreiben.-->
	</p>
	
	<img src="images/job_scheduler_distributed_orders_1.jpg" style="margin: 20px 0px ; border:1px solid gray;"/>
	
	<p>
		Distributed orders can be processed from different Job Schedulers on their way along a job chain. 
		The handing over of the processing of an order to another job node on another Job Scheduler
		is schematically illustrated in the following diagram:
<!--Verteilte Aufträge können während ihres Weges durch die Job-Kette von verschiedenen Job Schedulern verarbeitet werden. 
		Die Übernahme der Verarbeitung eines Auftrags in einem anderen Job-Knoten durch einen anderen Job Scheduler
		ist schematisch in der folgende Zeichnung abgebildet:-->
	</p>
	
	<img src="images/job_scheduler_distributed_orders_2.jpg" style="margin: 20px 0px ; border:1px solid gray;"/>
	
	
	<h3>
		The Conditions Required for Distributed Orders
<!--Voraussetzungen für Verteilte Aufträge-->
	</h3>
	
	<ul>
		<li>
			All the Job Schedulers in the cluster must use the same database - 
			Oracle, DB2, MySQL und Postgres database systems are supported.
	<!--Alle Job Scheduler des Clusters verwenden die selbe Datenbank. 
			Es werden die Datenbanksysteme Oracle, DB2, MySQL und Postgres unterstützt.-->
		</li>
		<li>
			The Job Schedulers must all use the same configuration file or an exact copy.
	<!--Alle Job Scheduler verwenden die selbe Konfigurationsdatei bzw. eine genaue Kopie.-->
		</li>
		<li>
			All the Job Schedulers must be started with the same Scheduler ID. 
	<!--Alle Job Scheduler werden mit der gleichen Scheduler-ID gestartet. -->
		</li>
		<li>
			The Job Schedulers must all be started with the <scheduler_option name="distributed-orders"/> option. 
	<!--Alle Job Scheduler werden mit der Option <scheduler_option name="distributed-orders"/> 
			gestartet. -->
		</li>
		<li>
			All the Job Schedulers must have access to any resources required by jobs run on a distributed job chain
			- for example, monitored directories. Directories which are used by all the Job Schedulers 
			must be mounted (or linked) on the same path on all systems.
	<!--Alle Job Scheduler haben Zugriff auf Resourcen, die von den Jobs der verteilten Job-Kette benötigt
			werden (z.B. überwachte Verzeichnisse). Gemeinsam genutzte Verzeichnisse sind auf allen Systemen
			auf den gleichen Pfad gemountet (oder verlinkt).-->
		</li>
	</ul>
	
	<h3>
		Starting a Job Scheduler Cluster for Distributed Orders
<!--Starten des Job Scheduler Clusters für verteilte Aufträge-->
	</h3>
	
	<p>
		The Job Schedulers making up the cluster can be started in any order. 
		Any Job Scheduler belonging to the cluster can be removed or added as required whilst the cluster is in operation. 
		When a Scheduler is removed from a cluster it should, where possible, be stopped (terminated) normally,
		to allow any orders which are being processed at the time to be completed.
<!--Die Job Scheduler, die den Cluster bilden, werden in beliebiger Reihenfolge gestartet. 
		Es können während der Laufzeit beliebig Scheduler entfernt oder hinzugefügt werden. Beim entfernen
		von Job Scheduler Instanzen, sollten diese, wenn möglich, normal beendet (Terminate) werden,
		damit sie die Möglichkeit haben, Aufträge zu beenden, die gerade verarbeitet werden.-->
	</p>
	
	<h3>
		Generation of Distributed Orders
<!--Erzeugen verteilter Aufträge-->
	</h3>
	
	<p>
		Distributed Orders can either be generated by  the <scheduler_element name="add_order"/> command 
		or by directory monitoring.
<!--Verteilte Aufträge können entweder per <scheduler_element name="add_order"/> Befehl oder per Verzeichnisüberwachung
		erzeugt werden.-->
	</p>
	
	<h3>
		Distributed Orders Using add_order
<!--Verteilte Aufträge durch add_order-->
	</h3>
	
	<p>
		Either the <scheduler_element name="add_order"/> XML command or the 
		<scheduler_method class="Job_chain" method="add_order" java_signature="Order"/> API function
		can be used.
		Neither the Job Scheduler to which the command is sent to nor the Job Scheduler on which the command is carried out
		is important - the order will be made available to the whole cluster for processing. 
<!--Es kann entweder das XML-Kommando <scheduler_element name="add_order"/> oder die API-Funktion 
		<scheduler_method class="Job_chain" method="add_order" java_signature="Order"/> verwendet werden.
		Es ist dabei egal an welchen Job Scheduler das Kommando geschickt wird beziehungsweise auf welchem
		Job Scheduler der Befehl ausgeführt wird. Der Auftrag wird dem gesamten Cluster zur Verarbeitung bereitgestellt.-->
	</p>
	
	<h3>
		Distributed File Orders
<!--Verteilte Dateiaufträge-->
	</h3>
	
	<p>
		Distributed File Orders are configured in a distributed job chain using 
		<scheduler_element name="file_order_source"/>. 
		Each Job Scheduler in the cluster monitors the relevant directory or directories and can create file orders.
		A file order can be processed by a different Job Scheduler to the one that created the order.
<!--Verteilte Dateiaufträge werden per <scheduler_element name="file_order_source"/> in einer verteilten Job-Kette
		konfiguriert. Jeder Job Scheduler des Clusters überwacht das Verzeichnis und kann Dateiaufträge erstellen.
		Ein Dateiauftrag wird nicht notwendigerweise von dem Job Scheduler verarbeitet, der ihn erstellt hat.-->
	</p>
	
	<h3>
		Stand-Alone Jobs with Distributed Job Schedulers
<!--Standalone-Jobs in verteilten Schedulern-->
	</h3>
	
	<p>
		Independent jobs which do not process orders are processed in a Job Scheduler cluster by the Job Schedulers 
		with which they were configured.
<!--Eigenständige Jobs, die keine Aufträge verarbeiten, werden in einem Scheduler Cluster nur von dem Job Scheduler ausgeführt,
		in dem sie konfiguriert werden..-->
	</p>
</description>
