<?xml version="1.0" encoding="ISO-8859-1"?>
<!--
\brief Generating scheduler resource files

\details
This buildfile is for generating some resource files for the JS. 
<li>C++ classes scheduler_embedded_files.cxx</li>
scheduler_embedded_files.cxx:   array representation of scheduler.xsd and log_categories.xml
<li>register_data.xml with a lot of keywords collected from different xml documentation files</li>
<li>copy scheduler.xsd to the xml documentation folders</li>
-->
<project name="com.sos.scheduler.build" basedir=".">

  <taskdef resource="net/sf/antcontrib/antcontrib.properties" classpath="${env.USERPROFILE}/.m2/repository/ant-contrib/ant-contrib/1.0b3/ant-contrib-1.0b3.jar"/>

  <propertyregex property="base" override="true" global="true" input="${basedir}" regexp="\\" replace="/" defaultValue="${basedir}" />  
  <property name="script.root" value="${base}/src/main/scripts" />
  <property name="perl.embeddedfiles" value="${script.root}/files_to_c++.pl" />
  <property name="perl.copy"          value="${script.root}/copy_file_if_changed.pl" />
  <property name="xslt.messages"      value="${script.root}/messages_to_c++.xslt" />
  
  <property name="work.dir" value="${base}/scheduler" />
  <property name="generated.dir" value="${base}/target/generated" />
	<property name="dependency.dir" value="${base}/target/dependency" />
	<property name="doc.dir" value="${dependency.dir}/com/sos/scheduler/enginedoc/common" />

  <property name="scheduler.schema" value="scheduler.xsd" />
  <property name="output.e" value="spooler_embedded_files.cxx" />
  <property name="output.r" value="register_data.xml"/>

  <target name="all"
          description="generierung von c++ sourcen"
          depends="prepare, embedded.files, messages.to.cpp"
  >
    <echo>DONE!</echo>
  </target>

  <target name="prepare"
          description="prepare the build"
  >
    <echo>base=${base}</echo>
    <mkdir dir="${generated.dir}" />
		<unzip dest="${dependency.dir}">
	    <fileset dir="${dependency.dir}">
	        <include name="enginedoc-common-*.jar"/>
	    </fileset>
		</unzip>

  </target>

  <target name="embedded.files"
          description="generates scheduler_embedded_files.cxx"
          depends="prepare"
  >

    <echo message="generating ${output.e} ..." />
    <exec executable="perl" dir="${work.dir}" output="${generated.dir}/${output.e}">
      <arg value="${perl.embeddedfiles}" />
      <arg value="-trim" />
      <arg value="${doc.dir}/scheduler.xsd" />
      <arg value="${doc.dir}/log_categories.xml" />
    </exec>
    
    <!-- copy spooler_embedded_files.cxx to scheduler -->
    <macro_copy sourcefile="${generated.dir}/${output.e}" targetfile="${work.dir}/${output.e}" />
  </target>

  <target name="messages.to.cpp"
          description="generates cpp classes for xml message files"
  >

    <!-- copy the message files for project zschimmer -->
    <foreach target="-messages.to.cpp.file" param="fullname">
      <path>
        <fileset dir="${doc.dir}" casesensitive="yes">
          <include name="*messages*.xml" />
          <exclude name="scheduler_messages.xml" />
        </fileset>
      </path>
      <param name="project" value="zschimmer" />
    </foreach>
    
    <!-- copy the message files for project scheduler -->
    <foreach target="-messages.to.cpp.file" param="fullname">
      <path>
        <fileset dir="${doc.dir}" casesensitive="yes" includes="scheduler_messages.xml" />
      </path>
      <param name="project" value="scheduler" />
    </foreach>

  </target>

  <target name="-messages.to.cpp.file"
          description="generates cpp classes for one xml message file"
  >
    <property name="targetext" value="cxx" />
    <propertyregex property="targetfile" input="${fullname}" regexp=".*(\\|/)([^\.]*)\.xml*$" select="\2" casesensitive="false" />  
    <property name="fullname.norm" value="${fullname}" />
    <propertyregex property="fullname.norm" override="true" global="true" input="${fullname}" regexp="\\" replace="/" casesensitive="false" />  
    <echo>generating ${targetfile}.${targetext} ...</echo>
    <!-- <echo>fullname is ${fullname.norm}</echo> -->
    <xslt
      in="${fullname}"
      out="${generated.dir}/${targetfile}.${targetext}"
      style="${xslt.messages}"
      force="true"
    >
       <classpath location="${settings.localRepository}/net/sf/saxon/saxon/8.7/saxon-8.7.jar" />
    </xslt>

    <macro_copy sourcefile="${generated.dir}/${targetfile}.${targetext}" targetfile="${base}/${project}/${targetfile}.${targetext}" />

  </target>
  
  <macrodef name="macro_copy">
    <attribute name="sourcefile" />
    <attribute name="targetfile" />
    <sequential>
      <!-- <echo message="copy @{sourcefile} to @{targetfile} ... " /> -->
      <exec executable="perl" dir="${work.dir}">
        <arg value="${perl.copy}" />
        <arg value="@{sourcefile}" />
        <arg value="@{targetfile}" />
      </exec>
    </sequential>
  </macrodef>

</project>