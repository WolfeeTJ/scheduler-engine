<?xml version="1.0" encoding="iso-8859-1"?>

<!-- $Id: spooler.xml,v 1.36 2001/02/23 09:02:11 jz Exp $   (C) 2001 SOS GmbH Berlin -->

<!DOCTYPE spooler SYSTEM "s:\prod\spooler\spooler.dtd">

<spooler>
<config tcp_port    = "4444" 
        udp_port    = "4444" 
        log_dir     = "c:\tmp">

    <security>
        <allowed_host host="192.168.100.0" level="all"/>
        <allowed_host host="lillerud"      level="all"/>
    </security>

    <object_set_classes>

        <object_set_class name="Dokumente">

            <level_decls>
                <level_decl level="100" name="Beauftragt"/>
                <level_decl level="200" name="Aufbereitet"/>
                <level_decl level="300" name="Gedruckt"/>
            </level_decls>

            <script use_engine="job"><![CDATA[

set hw = createobject("hostware.global")

spooler_log.msg "param1=" & spooler_task.params.var("param1")

dir_name = "c:\tmp\spooler"

spooler_job.start_when_directory_changed dir_name

set fso = createobject( "Scripting.FileSystemObject" )
script_index = 0



class Testobjekt

    sub construct( file_par )
        dim lev
        set file = file_par
        lev = mid( file.name, instr( file.name & "-", "-" ) + 1 )
        lev = left( lev, instr( lev & ".", "." ) - 1 )
        spooler_level = lev
    end sub


    sub spooler_process( new_level )
        spooler_log.msg "process " & spooler_level & " ==> " & new_level 
        spooler_log.msg "file(" & file.path & ").move " & dir_name & "\" & new_level & "\" & file.name
        file.move dir_name & "\" & new_level & "\" & file.name
        spooler_level = new_level
    end sub


    public  spooler_level
    private file

end class



class Object_set_class

    sub spooler_open()
        dim files
        dim file
        dim i
        
        spooler_log.msg "spooler_open: [" & spooler_task.object_set.low_level & "," & spooler_task.object_set.high_level & "], spooler.param=" & spooler.param

        set files=fso.getFolder(dir_name).Files
        
        file_array = Array
        i = 1
        for each file in files
            redim preserve file_array(i)
            set file_array(i) = file
            i = i + 1
        next 

        index = 1
    end sub


    function spooler_get()
        if index > ubound(file_array) then exit function

        dim object
        set object = new Testobjekt
        object.construct file_array(index)
        spooler_log.msg "index=" & index & ", level=" & object.spooler_level & ", script_index=" & script_index
        index = index + 1
        script_index = script_index + 1

        set spooler_get = object
    end function


    private file_array
    private index

end class



function spooler_make_object_set
    set spooler_make_object_set = new Object_set_class
end function


sub spooler_init
    spooler_log.msg "spooler_init"
end sub

            ]]></script>

        </object_set_class>


        <object_set_class name="Perl" script_interface="procedural">

            <level_decls>
                <level_decl level="1" name="Stufe 1"/>
                <level_decl level="2" name="Stufe 2"/>
                <level_decl level="3" name="Stufe 3"/>
            </level_decls>

            <script language="PerlScript" use_engine="job"><![CDATA[

use diagnostics;
use Win32::OLE;

#$spooler_log->msg( "*Job Perl" );


{
    package Testobjekt;


    sub construct
    {
        #$main::spooler_log->msg( "Testobjekt::construct" );
        my $self = {};
        bless( $self );
        $self->{name} = shift;
        $self->{spooler_level} = 100;
        return $self;
    }


    sub spooler_process
    {
        my $self = shift;
        my $new_level = shift;  # Wie holt man den Parameter? Joacim
        #$main::spooler_log->msg( "process " . $self->{name} . ", " . $self->{spooler_level} . " ==> $new_level" );
        $self->{spooler_level} = $new_level;
    }
}



{
    package Object_set_class;


    sub construct
    {
        my $self = {};
        bless( $self );

        $self->{index} = 1;
        $self->{low_level} = 0;
        $self->{high_level} = 0;

        return $self;
    }


    sub spooler_open
    {
        my $self = shift;
        # Leer
    }


    sub spooler_close
    {
        my $self = shift;
        # Leer
    }


    sub spooler_get
    {
        my $self = shift;

        if( $self->{index} > 3 )  { return; }

        my $object = Testobjekt::construct( $self->{index} );
        $main::spooler_log->msg( "script_index=" . $main::script_index . " index=" . $self->{index} . ", level=" . $object->{spooler_level} );
        $main::script_index++;
        $self->{index}++;

        return $object;
    }
}



sub spooler_make_object_set()
{
    my $object_set_class = construct Object_set_class;
    return $object_set_class;
}



# Folgender prozeduraler Code, weil PerlScript kein IDispatch, also kein Objekt liefern kann:

my $object_set_class;
my $object;
$script_index = 1;

#sub spooler_init() { $spooler_log->msg( "spooler_init" ); return 0; }

sub spooler_open()
{
    $spooler_log->msg( "high_level=" . $spooler_task->object_set->high_level );
    $object_set_class = spooler_make_object_set();
    $object_set_class->spooler_open();
    return; 
}

sub spooler_close()
{
    $object_set_class->spooler_close();
   #$object_set_class = null;  Objektemenge freigeben. Wie geht das in Perl?
    return; 
}

sub spooler_process()
{
    my $new_level = shift;
    $object = $object_set_class->spooler_get();
    if( !ref($object) ) { return 0; }  #{ $spooler_task->{error} = "Fehler aus Perl"; exit(); }  
    $object->spooler_process( $new_level );
    return 1;
}

            ]]></script>

        </object_set_class>

    </object_set_classes>


    <threads>
        <thread name="Eins">
            <script language="VBScript"><![CDATA[

dim global
'set hostware = createobject( "hostware.global" )        'Damit hostOLE nicht immer wieder neu geladen wird.

'set errfile = createobject( "hostware.file" )
'errfile.open "-out file /dev/stderr"
'errfile.put_line "Spooler-Skript gestartet"

var="Variable des Spooler-Skripts"

class Global_class
    function method()
        method="Ich bin von der globalen Methode" & ", spooler.param=" & spooler.param
    end function
end class

sub spooler_init
    set global = new Global_class 
    spooler_log.msg "spooler_init des Spooler-Skripts ausgeführt"
end sub

spooler_log.msg "Spooler-Skript geladen."   

    ]]></script>

            <jobs>

                <job name           = "Aufbereiten" 
                     priority       = "2" 
                     output_level   = "200" 
                     spooler_id     = "x">

                    <object_set class="Dokumente">
                        <levels low="100" high="200"/>
                    </object_set>

                    <run_time repeat = "60"/>

                </job>



                <job name="einfach" priority="3" spooler_id="test">

                    <script language="VBScript" use_engine="task"><![CDATA[

'spooler_log.msg "*Job einfach"

index = 1

function spooler_process()
    'spooler_process=true
    spooler_log.msg "*Job einfach: spooler_process index=" & index      '& ", " & spooler.script.global.method()
    index = index + 1
    if index > 3 then spooler_process=false: exit function
    spooler_task.error = "Ein Fehler"
    spooler_task.repeat = 2.5
    spooler_process = true
end function

                    ]]></script>


                    <run_time begin="12:12" end="12:48" repeat="4">

                        <period single_start="19:51:50" end="20:00" let_run="no"/>
                        <period begin="19:52:10" end="19:59:59" repeat="7"/>

                        <date date="8.2.2001"> <period begin="0:00" end="24:00" repeat="0.1"/> </date>

                        <weekdays>
                            <day day="1"/>
                            <day day="3">
                                <period begin="7:00" end="12:00"/>
                                <period begin="13:00" end="19:00"/>
                            </day>
                        </weekdays>

                    </run_time>

                </job>


                <job name           = "Perlset" 
                     output_level   = "200"
                     priority       = "1"
                     spooler_id     = "perl">

                    <object_set class="Perl">
                        <levels low="1" high="3"/>
                    </object_set>

                    <run_time repeat="0.1"/>

                </job>

                <job name="single" spooler_id="">
                    <script language="VBScript" use_engine="task"><![CDATA[

spooler_log.msg "*Job single"

set params = spooler.create_variable_set()
params.var("param1")="heinz"

'spooler.job("Aufbereiten").start( params )


function spooler_process()
    fehler=1/1
    spooler_process=false
end function

sub spooler_on_error()
    spooler_log.msg "spooler_on_error: error=" & spooler_task.error & " code=" & spooler_task.error.code & " text=" & spooler_task.error.text
end sub

sub spooler_on_success()
    spooler_log.msg "spooler_on_success: error=" & spooler_task.error & " code=" & spooler_task.error.code & " text=" & spooler_task.error.text
end sub

                    ]]></script>

                    <run_time single_start="11:31:10"/>

                </job>


                <job name="perl" spooler_id="perl">
                    <script language="PerlScript" use_engine="task"><![CDATA[

$spooler_log->msg( "*Job perl" );
$spooler->job("Aufbereiten")->start();

sub spooler_exit()
{
    $spooler->msg( "spooler_exit()" );
}

                    ]]></script>
            
                    <run_time repeat="7"/>

                </job>

                <job name="programm">
                    <process file="c:\tmp\spooler.bat" param="AA BBB"/>
                </job>

                <job name="programmstart">
                    <script language="JScript"><![CDATA[
                        params = spooler.create_variable_set();
                        params(1) = "eins";
                        params(2) = "zwei";
                        params(3) = "drei";
                        spooler.job("programm").start(params);
                        spooler_log.msg("programmstart fertig");
                    ]]></script>

                    <run_time repeat="60"/>
                </job>

                <job name="umlaute">
                    <script language="JScript"><![CDATA[
                        function spooler_process() { spooler_task.error = "Fehlermeldung mit Umlauten: ÅÄÖÜåäöüß"; }
                    ]]></script>

                    <run_time/>
                </job>

            </jobs>

        </thread>

        <thread name="dauer" spooler_id="">
            <jobs>
                <job name="dauer" spooler_id="">
                    <script language="PerlScript" use_engine="task"><![CDATA[
#use Win32::OLE;
#$hostware = Win32::OLE->new('hostWare.Global');

sub spooler_process()
{
    #$i = $spooler_task->params("zahl");
    #if( undef($i) ) { $i = 10; }
    $i = 20;
    $spooler_log->msg( "zahl=$i" );
    
    while( $i-- > 0 )
    {
        $spooler_log->msg( "spooler_process sleep" );
        #$hostware->sleep(1);
        sleep(1);
    }
    
    $spooler_task->{result} = "Das Ergebnis";
    return 0;
}

sub spooler_close()
{
    $spooler_log->msg( "spooler_close" );
    #$spooler_task->{error} = "Fehler";
}

                    ]]></script>
                </job> 
            </jobs>
        </thread>


        <thread name="job control" spooler_id="">
            <jobs>
                <job name="steuerung">
                    <script language="JScript"><![CDATA[

function spooler_process()
{
    spooler_log.msg( "spooler_process" );
    params = spooler.create_variable_set();
    spooler_log.msg( "1" );
    params("zahl") = 3;
    spooler_log.msg( "start" );
    task = spooler.job("dauer").start(params);
    spooler_log.msg( "***** wait_until_terminated()" );
    ok = task.wait_until_terminated(11);
    spooler_log.msg( "***** wait_until_terminated() " + ok + "  result=" + task.result + "  error=" + task.error.text );
    return 0;
}

function spooler_close()
{
    spooler_log.msg("spooler_close");
}

                    ]]></script>

                    <run_time repeat="15" let_run="yes"/>
                </job>
            </jobs>
        </thread>

<!--
        <thread name="perlzwei">
            <jobs>
                <job name="perl2">
                    <script language="PerlScript"><![CDATA[
                        sub spooler_process()
                        {
                            $spooler_log->msg("perl2");
                            return 0;
                        }
                    ]]></script>
                    <run_time repeat="0.7"/>
                </job>
            </jobs>
        </thread>
-->

    </threads>

</config>
</spooler>
