// *** Generated by com.sos.scheduler.engine.cplusplus.generator ***

package com.sos.scheduler.engine.kernel.cppproxy;

class JobCImpl extends com.sos.scheduler.engine.cplusplus.runtime.CppProxyImpl<com.sos.scheduler.engine.kernel.job.Job> implements com.sos.scheduler.engine.kernel.cppproxy.JobC {

    private JobCImpl(com.sos.scheduler.engine.cplusplus.runtime.Sister context) { // Nur für JNI zugänglich
        setSister(sisterType.sister(this, context));
    }

    @Override public java.lang.String name() {
        com.sos.scheduler.engine.cplusplus.runtime.CppProxy.threadLock.lock();
        try {
            java.lang.String result = name__native(cppReference());
            if (!java.lang.String.class.isInstance(result))
                throw new CppProxyInvalidated(java.lang.String.class);
            return result;
        }
        finally {
            com.sos.scheduler.engine.cplusplus.runtime.CppProxy.threadLock.unlock();
        }
    }

    private static native java.lang.String name__native(long cppReference);


    @Override public java.lang.String path() {
        com.sos.scheduler.engine.cplusplus.runtime.CppProxy.threadLock.lock();
        try {
            java.lang.String result = path__native(cppReference());
            if (!java.lang.String.class.isInstance(result))
                throw new CppProxyInvalidated(java.lang.String.class);
            return result;
        }
        finally {
            com.sos.scheduler.engine.cplusplus.runtime.CppProxy.threadLock.unlock();
        }
    }

    private static native java.lang.String path__native(long cppReference);


}
