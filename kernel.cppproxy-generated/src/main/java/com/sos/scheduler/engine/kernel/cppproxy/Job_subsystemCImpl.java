// *** Generated by com.sos.scheduler.engine.cplusplus.generator ***

package com.sos.scheduler.engine.kernel.cppproxy;

class Job_subsystemCImpl extends com.sos.scheduler.engine.cplusplus.runtime.CppProxyImpl<com.sos.scheduler.engine.cplusplus.runtime.Sister> implements com.sos.scheduler.engine.kernel.cppproxy.Job_subsystemC {

    private Job_subsystemCImpl(com.sos.scheduler.engine.cplusplus.runtime.Sister context) { // Nur für JNI zugänglich
        requireContextIsNull(context);
    }

    @Override public com.sos.scheduler.engine.kernel.cppproxy.JobC job_by_string(java.lang.String p0) {
        com.sos.scheduler.engine.cplusplus.runtime.ThreadLock.lock();
        try {
            return job_by_string__native(cppReference(), p0);
        }
        finally {
            com.sos.scheduler.engine.cplusplus.runtime.ThreadLock.unlock();
        }
    }

    private static native com.sos.scheduler.engine.kernel.cppproxy.JobC job_by_string__native(long cppReference, java.lang.String p0);


    @Override public com.sos.scheduler.engine.kernel.cppproxy.JobC job_by_string_or_null(java.lang.String p0) {
        com.sos.scheduler.engine.cplusplus.runtime.ThreadLock.lock();
        try {
            return job_by_string_or_null__native(cppReference(), p0);
        }
        finally {
            com.sos.scheduler.engine.cplusplus.runtime.ThreadLock.unlock();
        }
    }

    private static native com.sos.scheduler.engine.kernel.cppproxy.JobC job_by_string_or_null__native(long cppReference, java.lang.String p0);


}
