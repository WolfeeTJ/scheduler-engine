<?xml version="1.0" encoding="iso-8859-1"?>
<!--
\brief Prepare the necessary resources from JS kernel for setup 

\details
This buildfile provides the necessary resources of the scheduler kernel to build a setup. It based on the result of running dependency:copy and
dependency:copy-dependencies.

The main target of this build (setup.platform) is called by maven via the pom.xml in this directory. The build is not able
to run without maven integration.

\version 1.0
\date 2011-06-21
-->
<project name="SOSJobSchedulerModel" basedir=".">

	<taskdef resource="net/sf/antcontrib/antcontrib.properties" classpath="${settings.localRepository}/ant-contrib/ant-contrib/1.0b3/ant-contrib-1.0b3.jar"/>
	

	<property name="setup.platform" value="linux-i386" />
	<property name="package.name" value="com.sos.scheduler" />
	<property name="source.dir" value="${basedir}/target/dependency" />
	<property name="target.dir" value="${basedir}/target/setup_${setup.version}" />
	
	<fileset dir="${source.dir}" id="files.config">
		<include name="scheduler.xsd"/>
	</fileset>
	
	<fileset dir="${source.dir}" id="files.lib">
		<include name="com.sos.scheduler.engine.jar*"/>
	</fileset>
	
	<fileset dir="${source.dir}" id="files.jar">
		<include name="guava*.jar"/>
		<include name="log4j-*.jar"/>
	</fileset>
	
	<fileset dir="${source.dir}" id="files.bin.windows">
		<include name="scheduler.exe"/>
		<include name="spidermonkey.dll"/>
	</fileset>
	
	<fileset dir="${source.dir}" id="files.bin.unix">
		<include name="scheduler"/>
	</fileset>
	
	<fileset dir="${source.dir}" id="files.lib.windows">
		<include name="scheduler.dll"/>
	</fileset>

	<target name="setup.platform" depends="setup"	description="platform specific setup preparation">

    <echo message="${settings.localRepository}" />
    <if>
     <equals arg1="${setup.platform}" arg2="windows-x86" />
     <then>
    		<copy todir="${target.dir}/scheduler.windows/bin">
    			<fileset refid="files.bin.windows" />
    		</copy>
    		<copy todir="${target.dir}/scheduler.windows/lib">
    			<fileset refid="files.lib.windows" />
    		</copy>
     </then>
    </if>

    <if>
     <equals arg1="${setup.platform}" arg2="linux-i386" />
     <then>
    		<copy todir="${target.dir}/scheduler.linux/bin">
    			<fileset refid="files.bin.unix" />
    		</copy>
     </then>
    </if>

    <if>
     <equals arg1="${setup.platform}" arg2="hpux-itanium" />
     <then>
    		<echo message="HP-UX" />
    		<!--
    		<copy todir="${target.dir}/scheduler.hpux-ia64-32/bin">
    			<fileset refid="files.bin.unix" />
    		</copy>
    		-->
     </then>
    </if>

    <if>
     <equals arg1="${setup.platform}" arg2="solaris-" />
     <then>
    		<echo message="SOLARIS" />
    		<!--
    		<copy todir="${target.dir}/scheduler.solarisx86/bin">
    			<fileset refid="files.bin.unix" />
    		</copy>
    		-->
     </then>
    </if>

  </target>
	
	<target name="setup" description="copy all setup files for the scheduler kernel into a directory">
	
		<!-- unzip the binary files into a working directory -->
 		<echo message="working for ${setup.platform}" />
		<unzip dest="${source.dir}">
	    <patternset>
	        <exclude name="*.map"/>
	        <exclude name="*.pdb"/>
	    </patternset>
	    <fileset dir="${source.dir}">
	        <include name="*${setup.platform}.zip"/>
	    </fileset>
		</unzip>
		
		<!-- copy the sos specific jar files to the target directory and normalize theirs names -->
		<copy todir="${target.dir}/scheduler/config">
			<fileset refid="files.config" />
		</copy>
		<copy todir="${target.dir}/scheduler/lib">
			<fileset refid="files.lib" />
		  <mapper type="regexp" from="^com.sos.scheduler.engine.jar-(.*)\.jar$" to="com.sos.spooler.\1.jar"/>
		</copy>
		<copy todir="${target.dir}/scheduler/lib">
			<fileset refid="files.jar" />
		</copy>
		
		<!--
		<copy todir="${target.dir}">
			<fileset refid="files.sos" />
			<mapper type="regexp" from="^${package.name}\.(.*)" to="\1"/>
		</copy>
		-->
		
	</target>

</project>
