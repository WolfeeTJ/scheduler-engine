<?xml version="1.0" encoding="ISO-8859-1"?>
<job xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://www.sos-berlin.com/repository/scheduler/1.7/scheduler.xsd">
    <script language="javax.script:javascript">
        <![CDATA[
var imports = new JavaImporter(
    java.io.File,
    com.google.common.io.Files,
    java.nio.charset.Charset
);

function spooler_init()	{
	log_function("spooler_init");
	return true;
}
 
function spooler_open()	{
	log_function("spooler_open");
	return true;
}
 
function spooler_process() {
	spooler_log.warn(spooler.id() +": " + spooler_job.name() + " is running with task id " + spooler_task.id() );   // use alle objects given by JS kernel
	log_function("spooler_process");
	return false;
}

function spooler_close() {
	log_function("spooler_close");
}
 
function spooler_exit()	{
	log_function("spooler_exit");
}
 
function spooler_on_error()	{
	log_function("spooler_on_error");
}
 
function spooler_on_success() {
	log_function("spooler_on_success");
}

function log_function( functionname ) {
    with (imports) {
        count = spooler.variables().value(functionname) ? spooler.variables().value(functionname) : 0;
        count++;
        filename = spooler.configuration_directory() + "/resultfile.txt";
        Files.append(functionname + "=" + count + "\n", new File(filename), Charset.defaultCharset());
        spooler_log.info(functionname + " called " + count + " times.");
	}
}
        ]]>
    </script>
    <monitor>
        <script language="javax.script:javascript">
            <![CDATA[
var imports = new JavaImporter(
    com.google.common.io.Files,
    java.io.File,
    java.nio.charset.Charset
);

function spooler_task_before() {
	log_function("spooler_task_before");
	return true;
}

function spooler_process_before() {
	log_function("spooler_process_before");
	return true;
}

function spooler_process_after(spooler_process_result) {
	spooler_log.info(spooler.id() +": " + spooler_job.name() + " is running with task id " + spooler_task.id() );   // use alle objects given by JS kernel
	log_function("spooler_process_after");
	return spooler_process_result;
}

function spooler_task_after() {
	log_function("spooler_task_after");
}

function log_function( functionname ) {
    with (imports) {
        count = spooler.variables().value(functionname)? spooler.variables().value(functionname) : 0;
        count++;
        filename = spooler.configuration_directory() + "/resultfile.txt";
        Files.append(functionname + "=" + count + "\n", new File(filename), Charset.defaultCharset());
        spooler_log.info(functionname + " called " + count + " times.");
    }
}
            ]]>
        </script>
    </monitor>
</job>
