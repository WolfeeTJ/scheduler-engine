<?xml version="1.0" encoding="ISO-8859-1"?>
<job xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://www.sos-berlin.com/repository/scheduler/1.3.12/scheduler.xsd" 
	order="yes">
    <script language="javax.script:javascript">
        <![CDATA[
var imports = new JavaImporter(
    com.google.common.io.Files,
    java.io.File,
    java.nio.charset.Charset
);

function spooler_process() {
	spooler_log.info(spooler.id() +": " + spooler_job.name() + " is running with task id " + spooler_task.id() );   // use alle objects given by JS kernel
	
	spooler.variables().set_var("parm1","value1");
	spooler.variables().set_var("parm2","value2");
	log_object("spooler.variables.count",spooler.variables().count() );
	
	log_object("spooler_task.order.job_chain.name",spooler_task.order().job_chain().name() );
	
	spooler_task.params().set_var("taskparam1", "value1");
	spooler_task.params().set_var("taskparam2", "value2");
	log_object("spooler_task.params.names", spooler_task.params().names() );
	
	log_object("spooler_job.order_queue.length",spooler_job.order_queue().length() );
	
	return true;
}

function log_object( varname, objectvalue ) {
    with (imports) {
        filename = spooler.configuration_directory() + "/resultfile.txt";
        msg = varname + "=" + objectvalue;
        Files.append(msg + "\n", new File(filename), Charset.defaultCharset());
        spooler_log.info(msg);
	}
}
        ]]>
    </script>
    <monitor>
        <script language="javax.script:javascript">
            <![CDATA[
var imports = new JavaImporter(
    com.google.common.io.Files,
    java.io.File,
    java.nio.charset.Charset
);

function spooler_process_after(spooler_process_result) {
	spooler_log.warn(spooler.id() +": " + spooler_job.name() + " is running with task id " + spooler_task.id() );   // use alle objects given by JS kernel
	log_object("spooler_task.order.id",spooler_task.order().id() );
	return spooler_process_result;
}

function log_object( varname, objectvalue ) {
    with (imports) {
        filename = spooler.configuration_directory() + "/resultfile.txt";
        msg = varname + "=" + objectvalue;
        Files.append(msg + "\n", new File(filename), Charset.defaultCharset());
        spooler_log.info(varname + "=" + objectvalue);
	}
}
            ]]>
        </script>
    </monitor>
</job>
