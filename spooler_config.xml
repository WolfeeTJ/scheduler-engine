<?xml version="1.0" encoding="iso-8859-1"?>

<!-- $Id: spooler_config.xml,v 1.8 2001/01/05 23:24:33 jz Exp $   (C) 2000 SOS GmbH Berlin -->

<!DOCTYPE spooler_config SYSTEM "spooler_config.dtd">

<spooler_config>

    <object_set_classes>

        <object_set_class name="Dokumente">

            <level_decls>
                <level_decl level="100" name="Beauftragt"/>
                <level_decl level="200" name="Aufbereitet"/>
                <level_decl level="300" name="Gedruckt"/>
            </level_decls>

            <script><![CDATA[

dir_name = "c:\tmp\spooler"
set fso = createobject( "Scripting.FileSystemObject" )

set log_file = createobject( "hostware.file" )
log_file.open "-out /dev/stderr"

sub log( text )
    log_file.put_line text
end sub


class Testobjekt

    sub construct( file_par )
        dim lev
        set file = file_par
        lev = mid( file.name, instr( file.name & "-", "-" ) + 1 )
        lev = left( lev, instr( lev & ".", "." ) - 1 )
        level = lev
    end sub


    sub process( new_level )
        log "process " & level & " ==> " & new_level 
        'file.name = new_level & ".object"
        file.move dir_name & "\" & new_level & "\" & file.name
        level = new_level
    end sub


    public level

    private file

end class


class Object_set_class

    sub spooler_open()
        dim files
        dim file
        dim i
        
        set files=fso.getFolder(dir_name).Files
        
        file_array = Array
        i = 1
        for each file in files
            redim preserve file_array(i)
            set file_array(i) = file
            i = i + 1
        next 

        index = 1
    end sub


    sub spooler_close()
    end sub


    function spooler_get()
        if spooler_eof then exit function

        dim object
        set object = new Testobjekt
        object.construct file_array(index)
        log "index=" & index & ", level=" & object.level
        index = index + 1

        set spooler_get = object
    end function


    property get spooler_eof()
        spooler_eof = index > ubound(file_array)
    end property


    public low_level
    public high_level

    private file_array
    private index
end class




function spooler_make_object_set
    set object_set = new Object_set_class
    set spooler_make_object_set = object_set
end function

            ]]></script>

        </object_set_class>

        <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

        <object_set_class name="Test">

            <level_decls>
                <level_decl level="1" name="Stufe 1"/>
                <level_decl level="2" name="Stufe 2"/>
                <level_decl level="3" name="Stufe 3"/>
            </level_decls>

            <script language="PerlScript"><![CDATA[

use diagnostics;
use Win32::OLE;


$log_file = Win32::OLE->new( 'hostware.file' );
$log_file->open( "-out /dev/stderr" );

sub log
{
    $log_file->put_line( shift );
}



package Testobjekt;

    sub construct
    {
        print "Testobjekt::construct\n";
        my $self = {};
        bless( $self );
        $self->{name} = shift;
        $self->{level} = 100;
        return $self;
    }


    sub process
    {
        my $self = shift;
        my $new_level = shift;
        main::log "process " . $self->{name} . ", " . $self->{level} . " ==> $new_level";
        $self->{level} = $new_level;
    }



package Object_set_class;


    sub construct
    {
        my $self = {};
        bless( $self );

        $self->{index} = 1;
        $self->{low_level} = 0;
        $self->{high_level} = 0;

        return $self;
    }


    sub spooler_open
    {
        my $self = shift;
    }


    sub spooler_close
    {
    }


    sub spooler_get
    {
        my $self = shift;

        if( $self->spooler_eof() )  { return; }

        my $object = Testobjekt::construct( $self->{index} );
        main::log "index=" . $self->{index} . ", level=" . $object->{level};
        $self->{index}++;

        return $object;
    }


    sub spooler_eof
    {
        my $self = shift;
        if( $self->{index} > 3 ) { return 1; }
        return 0;
    }



package main;

    sub spooler_make_object_set
    {
        return Object_set_class->construct();
    }


            ]]></script>

        </object_set_class>

    </object_set_classes>

    <jobs>

        <job name           = "Aufbereiten" 
             priority       = "50" 
             output_level   = "200" 
             spooler        = "Hans"
             rerun          = "no">

            <object_set class="Dokumente">
                <levels low="100" high="200"/>
            </object_set>

            <run_time retry_period="5">

                <time_of_day begin="17:11:55" end="21:00:00"/>

                <date date="2001-01-02"/>
                <date date="2001-01-09"/>

                <weekdays>
                    <day day="1"/>
                    <day day="2"/>
                    <day day="5"/>
                </weekdays>

                <monthdays>
                    <day day="2"/>
                    <day day="3"/>
                </monthdays>

                <ultimos>
                    <day day="0"/>
                </ultimos>

                <holiday date="2001-05-01"/>
                <holiday date="2001-12-24"/>
                <holiday date="2001-12-25"/>
                <holiday date="2001-12-26"/>
                <holiday date="2001-12-31"/>
                <holiday date="2002-01-01"/>

            </run_time>

        </job>



        <job name           = "Test" 
             output_level   = "200">

            <object_set class="Test">
                <levels low="1" high="3"/>
            </object_set>

            <run_time retry_period="3">
                <time_of_day begin="00:00:00" end="24:00:00"/>
                <weekdays>
                    <day day="0"/>
                    <day day="1"/>
                    <day day="2"/>
                    <day day="3"/>
                    <day day="4"/>
                    <day day="5"/>
                    <day day="6"/>
                </weekdays>
            </run_time>

        </job>
    </jobs>

</spooler_config>
