// $Id: spooler.odl,v 1.14 2001/06/20 17:55:15 jz Exp $

// Anweisung: midl /nologo /error all /out $(OutDir) $(InputPath)

[
    uuid        ( ED57B226-CD4F-490a-B47E-E7D44A895273 ),
    helpstring  ( "SOS GmbH Berlin, www.sos-berlin.com" ),
    lcid        ( 0x0000 ),
    version     ( 1.0 )
]
library spooler
{
    importlib("STDOLE32.TLB");

    interface Ilog;
    interface Itask;
    interface Ithread;

    //----------------------------------------------------------------------------------------Error

    [
        uuid       ( 5BF4BD80-A437-46df-86AB-05E5E9E1C4E2 ),
        odl,
        dual
    ]
    interface Ierror : IDispatch
    {
        [id(0),propget]
        HRESULT                 is_error                    ( [out,retval] VARIANT_BOOL* result );

        [propget]
        HRESULT                 code                        ( [out,retval] BSTR* code );

        [propget]
        HRESULT                 text                        ( [out,retval] BSTR* text );
    }

    [
        uuid       ( 5B4463E8-4DAE-4198-91C2-160411369DF1 )
    ]
    coclass Error
    {
        interface Ierror;
    }

    //---------------------------------------------------------------------------------Variable_set

    [
        uuid       ( 5F028EDD-2195-4bcc-B63F-FC88B73A4712 ),
        odl,
        dual
    ]
    interface Ivariable_set : IDispatch
    {
        HRESULT                 set_var                     ( [in] BSTR name, [in] VARIANT* value );

        [id(0),propput]
        HRESULT                 var                         ( [in] BSTR name, [in] VARIANT* value );

        [id(0),propget]
        HRESULT                 var                         ( [in] BSTR name, [out,retval] VARIANT* value );

        [propget]
        HRESULT                 count                       ( [out,retval] int* value );
    }

    [
        uuid       ( 818150DA-CD01-4db3-972B-433A9D6237F3 )
    ]
    coclass Variable_set
    {
        interface Ivariable_set;
    }

    //-----------------------------------------------------------------------------------Object_set

    [
        uuid       ( FB6288E5-3391-4c9d-A10E-04E1CC162900 ),
        odl,
        dual
    ]
    interface Iobject_set : IDispatch
    {
        [propget]
        HRESULT                 low_level                   ( [out,retval] int* level );

        [propget]
        HRESULT                 high_level                  ( [out,retval] int* level );
    }

    [
        uuid       ( 9A38442F-9816-49b9-AB67-6B352CF84F66 )
    ]
    coclass Object_set
    {
        interface Iobject_set;
    }

    //------------------------------------------------------------------------------------------Job

    [
        uuid       ( 4DF2E8E8-52DA-454f-8ADE-3B5D4FE7F73B ),
        odl,
        dual
    ]
    interface Ijob : IDispatch
    {
        HRESULT                 start_when_directory_changed( [in] BSTR directory_name );

        HRESULT                 start                       ( [in,optional] VARIANT* variables, [out,retval] Itask** );

        [propget]
        HRESULT                 thread                      ( [out,retval] Ithread** result );

      //[propput]
      //HRESULT                 include_path                ( [in] BSTR include_path );

        [propget]
        HRESULT                 include_path                ( [out,retval] BSTR* include_path );

        [propget]
        HRESULT                 name                        ( [out,retval] BSTR* name );
    }

    [
        uuid       ( 15ECAE84-4142-43e6-A38C-C90A299097B4 )
    ]
    coclass Job
    {
        interface Ijob;
    }

    //-----------------------------------------------------------------------------------------Task

    [
        uuid       ( 65E311F1-04BF-4e34-A847-BBF0B0AC6DC6 ),
        odl,
        dual
    ]
    interface Itask : IDispatch
    {
        [propget]
        HRESULT                 object_set                  ( [out,retval] Iobject_set** result );

        [propput]
        HRESULT                 error                       ( [in] VARIANT* error_text );       // Für PerlScript, das einen Fehlertext nicht durchreicht

        [propget]
        HRESULT                 error                       ( [out,retval] Ierror** result );

        [propget]
        HRESULT                 job                         ( [out,retval] Ijob** job );

        [propget]
        HRESULT                 params                      ( [out,retval] Ivariable_set** parameters );

        [propput]
        HRESULT                 result                      ( [in] VARIANT* value );

        [propget]
        HRESULT                 result                      ( [out,retval] VARIANT* value );

        HRESULT                 wait_until_terminated       ( [in,defaultvalue(999999999)] double wait_time, [out,retval] VARIANT_BOOL* ok );

        [propput,helpstring("Task nach der Anzahl Sekunden erneut starten")]
        HRESULT                 repeat                      ( [in] double seconds );

      //[propget]
      //HRESULT                 thread                      ( [out,retval] Ithread** result );
    }

    [
        uuid       ( 00BB25C8-812A-4200-A6F9-1AE8E2650474 )
    ]
    coclass Task
    {
        interface Itask;
    }

    //---------------------------------------------------------------------------------------Thread

    [
        uuid       ( 0FA3AC14-01EC-4c8f-81D9-7CABF8A76B43 ),
        odl,
        dual
    ]
    interface Ithread : IDispatch
    {
        [propget]
        HRESULT                 log                     ( [out,retval] Ilog** log );

        [propget]
        HRESULT                 script                  ( [out,retval] IDispatch** script_object );

      //[propput]
      //HRESULT                 include_path            ( [in] BSTR include_path );

        [propget]
        HRESULT                 include_path            ( [out,retval] BSTR* include_path );

        [propget]
        HRESULT                 name                        ( [out,retval] BSTR* name );
    }

    [
        uuid       ( 4E70F30E-D446-42b1-B4F0-7A53113D87C7 )
    ]
    coclass Thread
    {
        interface Ithread;
    }

    //--------------------------------------------------------------------------------------Spooler

    [
        uuid       ( 3D8FF20C-5CFD-4b70-9A2D-B51AB3DCB98D ),
        odl,
        dual
    ]
    interface Ispooler : IDispatch
    {
        [propget]
        HRESULT                 log                     ( [out,retval] Ilog** log );

        [propget]
        HRESULT                 id                      ( [out,retval] BSTR* spooler_id );

        [propget]
        HRESULT                 param                   ( [out,retval] BSTR* spooler_param );

      //[propget]
      //HRESULT                 script                  ( [out,retval] IDispatch** script_object );

        [propget]
        HRESULT                 job                     ( [in] BSTR job_name, [out,retval] Ijob** job );

        HRESULT                 create_variable_set     ( [out,retval] Ivariable_set** result );

      //[propput]
      //HRESULT                 include_path            ( [in] BSTR include_path );

        [propget]
        HRESULT                 include_path            ( [out,retval] BSTR* include_path );
    }

    [
        uuid       ( 87605BDB-42C7-43e7-B311-D568F86D78B5 )
    ]
    coclass Spooler
    {
        interface Ispooler;
    }

    //------------------------------------------------------------------------------------------Log

    [
        uuid       ( 3B6C8A62-B511-445d-A2A2-E852BC2E05A0 ),
        odl,
        dual
    ]
    interface Ilog : IDispatch
    {
        [id(0)]
        HRESULT                 msg                     ( [in] BSTR name );
        HRESULT                 warn                    ( [in] BSTR name );
        HRESULT                 error                   ( [in] BSTR name );
    }

    [
        uuid       ( 032974D7-8668-41c4-A204-3E893E06846F )
    ]
    coclass Log
    {
        interface Ilog;
    }

};

