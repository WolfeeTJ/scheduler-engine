// *** Generated by com.sos.scheduler.engine.cplusplus.generator ***

#ifndef _JAVAPROXY_JAVA_LANG_BOOLEAN_H_
#define _JAVAPROXY_JAVA_LANG_BOOLEAN_H_

#include "../zschimmer/zschimmer.h"
#include "../zschimmer/java.h"
#include "../zschimmer/Has_proxy.h"
#include "../zschimmer/javaproxy.h"
#include "../zschimmer/lazy.h"
#include "java__lang__Object.h"

namespace javaproxy { namespace java { namespace lang { struct Object; }}}
namespace javaproxy { namespace java { namespace lang { struct String; }}}


namespace javaproxy { namespace java { namespace lang { 


struct Boolean__class;

struct Boolean : ::zschimmer::javabridge::proxy_jobject< Boolean >, ::javaproxy::java::lang::Object {
    static Boolean new_instance(jboolean p0);
    static Boolean new_instance(const ::zschimmer::javabridge::proxy_jobject< ::javaproxy::java::lang::String >& p0);

    Boolean(jobject = NULL);

    Boolean(const Boolean&);

    #ifdef Z_HAS_MOVE_CONSTRUCTOR
        Boolean(Boolean&&);
    #endif

    ~Boolean();

    Boolean& operator=(jobject jo) { assign_(jo); return *this; }
    Boolean& operator=(const Boolean& o) { assign_(o.get_jobject()); return *this; }
    #ifdef Z_HAS_MOVE_CONSTRUCTOR
        Boolean& operator=(Boolean&& o) { set_jobject(o.get_jobject()); o.set_jobject(NULL); return *this; }
    #endif

    jobject get_jobject() const { return ::zschimmer::javabridge::proxy_jobject< Boolean >::get_jobject(); }

  protected:
    void set_jobject(jobject jo) {
        ::zschimmer::javabridge::proxy_jobject< Boolean >::set_jobject(jo);
        ::javaproxy::java::lang::Object::set_jobject(jo);
    }
  public:

    bool booleanValue() const;
    static jint compare(jboolean p0, jboolean p1);
    jint compareTo(const ::zschimmer::javabridge::proxy_jobject< ::javaproxy::java::lang::Boolean >& p0) const;
    jint compareTo(const ::zschimmer::javabridge::proxy_jobject< ::javaproxy::java::lang::Object >& p0) const;
    bool equals(const ::zschimmer::javabridge::proxy_jobject< ::javaproxy::java::lang::Object >& p0) const;
    static bool getBoolean(const ::zschimmer::javabridge::proxy_jobject< ::javaproxy::java::lang::String >& p0);
    jint hashCode() const;
    static jint hashCode(jboolean p0);
    static bool logicalAnd(jboolean p0, jboolean p1);
    static bool logicalOr(jboolean p0, jboolean p1);
    static bool logicalXor(jboolean p0, jboolean p1);
    static bool parseBoolean(const ::zschimmer::javabridge::proxy_jobject< ::javaproxy::java::lang::String >& p0);
    ::javaproxy::java::lang::String toString() const;
    static ::javaproxy::java::lang::String toString(jboolean p0);
    static ::javaproxy::java::lang::Boolean valueOf(jboolean p0);
    static ::javaproxy::java::lang::Boolean valueOf(const ::zschimmer::javabridge::proxy_jobject< ::javaproxy::java::lang::String >& p0);

    ::zschimmer::javabridge::Class* java_object_class_() const;

    static ::zschimmer::javabridge::Class* java_class_();


  private:
    struct Lazy_class : ::zschimmer::abstract_lazy<Boolean__class*> {
        void initialize() const;
    };

    Lazy_class _class;
};


}}}

#endif
