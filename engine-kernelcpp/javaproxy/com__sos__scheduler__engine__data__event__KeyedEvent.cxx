// *** Generated by com.sos.scheduler.engine.cplusplus.generator ***

#include "_precompiled.h"

#include "com__sos__scheduler__engine__data__event__KeyedEvent.h"
#include "java__lang__Object.h"
#include "java__lang__String.h"
#include "scala__Option.h"

namespace javaproxy { namespace com { namespace sos { namespace scheduler { namespace engine { namespace data { namespace event { 

struct KeyedEvent__class : ::zschimmer::javabridge::Class
{
    KeyedEvent__class(const string& class_name);
   ~KeyedEvent__class();

    ::zschimmer::javabridge::Method const _canEqual__Ljava_lang_Object_2__method;
    ::zschimmer::javabridge::Method const _copy$default$1____method;
    ::zschimmer::javabridge::Method const _equals__Ljava_lang_Object_2__method;
    ::zschimmer::javabridge::Method const _hashCode____method;
    ::zschimmer::javabridge::Method const _key____method;
    ::zschimmer::javabridge::Method const _productArity____method;
    ::zschimmer::javabridge::Method const _productElement__I__method;
    ::zschimmer::javabridge::Method const _productPrefix____method;
    ::zschimmer::javabridge::Method const _toString____method;
    ::zschimmer::javabridge::Static_method const _unapply__Lcom_sos_scheduler_engine_data_event_KeyedEvent_2__method;

    static const ::zschimmer::javabridge::class_factory< KeyedEvent__class > class_factory;
};

const ::zschimmer::javabridge::class_factory< KeyedEvent__class > KeyedEvent__class::class_factory ("com.sos.scheduler.engine.data.event.KeyedEvent");

KeyedEvent__class::KeyedEvent__class(const string& class_name) :
    ::zschimmer::javabridge::Class(class_name)
    ,_canEqual__Ljava_lang_Object_2__method(this, "canEqual", "(Ljava/lang/Object;)Z")
    ,_copy$default$1____method(this, "copy$default$1", "()Ljava/lang/Object;")
    ,_equals__Ljava_lang_Object_2__method(this, "equals", "(Ljava/lang/Object;)Z")
    ,_hashCode____method(this, "hashCode", "()I")
    ,_key____method(this, "key", "()Ljava/lang/Object;")
    ,_productArity____method(this, "productArity", "()I")
    ,_productElement__I__method(this, "productElement", "(I)Ljava/lang/Object;")
    ,_productPrefix____method(this, "productPrefix", "()Ljava/lang/String;")
    ,_toString____method(this, "toString", "()Ljava/lang/String;")
    ,_unapply__Lcom_sos_scheduler_engine_data_event_KeyedEvent_2__method(this, "unapply", "(Lcom/sos/scheduler/engine/data/event/KeyedEvent;)Lscala/Option;"){}

KeyedEvent__class::~KeyedEvent__class() {}




KeyedEvent::KeyedEvent(jobject jo) { if (jo) assign_(jo); }

KeyedEvent::KeyedEvent(const KeyedEvent& o) { assign_(o.get_jobject()); }

#ifdef Z_HAS_MOVE_CONSTRUCTOR
    KeyedEvent::KeyedEvent(KeyedEvent&& o) { set_jobject(o.get_jobject());  o.set_jobject(NULL); }
#endif

KeyedEvent::~KeyedEvent() { assign_(NULL); }




bool KeyedEvent::canEqual(const ::zschimmer::javabridge::proxy_jobject< ::javaproxy::java::lang::Object >& p0) const {
    ::zschimmer::javabridge::raw_parameter_list<1> parameter_list;
    parameter_list._jvalues[0].l = p0.get_jobject();
    KeyedEvent__class* cls = _class.get();
    return 0 != cls->_canEqual__Ljava_lang_Object_2__method.bool_call(get_jobject(), parameter_list);
}

::javaproxy::java::lang::Object KeyedEvent::copy$default$1() const {
    ::zschimmer::javabridge::raw_parameter_list<0> parameter_list;
    KeyedEvent__class* cls = _class.get();
    ::javaproxy::java::lang::Object result;
    result.steal_local_ref(cls->_copy$default$1____method.jobject_call(get_jobject(), parameter_list));
    return result;
}

bool KeyedEvent::equals(const ::zschimmer::javabridge::proxy_jobject< ::javaproxy::java::lang::Object >& p0) const {
    ::zschimmer::javabridge::raw_parameter_list<1> parameter_list;
    parameter_list._jvalues[0].l = p0.get_jobject();
    KeyedEvent__class* cls = _class.get();
    return 0 != cls->_equals__Ljava_lang_Object_2__method.bool_call(get_jobject(), parameter_list);
}

jint KeyedEvent::hashCode() const {
    ::zschimmer::javabridge::raw_parameter_list<0> parameter_list;
    KeyedEvent__class* cls = _class.get();
    return cls->_hashCode____method.int_call(get_jobject(), parameter_list);
}

::javaproxy::java::lang::Object KeyedEvent::key() const {
    ::zschimmer::javabridge::raw_parameter_list<0> parameter_list;
    KeyedEvent__class* cls = _class.get();
    ::javaproxy::java::lang::Object result;
    result.steal_local_ref(cls->_key____method.jobject_call(get_jobject(), parameter_list));
    return result;
}

jint KeyedEvent::productArity() const {
    ::zschimmer::javabridge::raw_parameter_list<0> parameter_list;
    KeyedEvent__class* cls = _class.get();
    return cls->_productArity____method.int_call(get_jobject(), parameter_list);
}

::javaproxy::java::lang::Object KeyedEvent::productElement(jint p0) const {
    ::zschimmer::javabridge::raw_parameter_list<1> parameter_list;
    parameter_list._jvalues[0].i = p0;
    KeyedEvent__class* cls = _class.get();
    ::javaproxy::java::lang::Object result;
    result.steal_local_ref(cls->_productElement__I__method.jobject_call(get_jobject(), parameter_list));
    return result;
}

::javaproxy::java::lang::String KeyedEvent::productPrefix() const {
    ::zschimmer::javabridge::raw_parameter_list<0> parameter_list;
    KeyedEvent__class* cls = _class.get();
    ::javaproxy::java::lang::String result;
    result.steal_local_ref(cls->_productPrefix____method.jobject_call(get_jobject(), parameter_list));
    return result;
}

::javaproxy::java::lang::String KeyedEvent::toString() const {
    ::zschimmer::javabridge::raw_parameter_list<0> parameter_list;
    KeyedEvent__class* cls = _class.get();
    ::javaproxy::java::lang::String result;
    result.steal_local_ref(cls->_toString____method.jobject_call(get_jobject(), parameter_list));
    return result;
}

::javaproxy::scala::Option KeyedEvent::unapply(const ::zschimmer::javabridge::proxy_jobject< ::javaproxy::com::sos::scheduler::engine::data::event::KeyedEvent >& p0) {
    ::zschimmer::javabridge::raw_parameter_list<1> parameter_list;
    parameter_list._jvalues[0].l = p0.get_jobject();
    KeyedEvent__class* cls = KeyedEvent__class::class_factory.clas();
    ::javaproxy::scala::Option result;
    result.steal_local_ref(cls->_unapply__Lcom_sos_scheduler_engine_data_event_KeyedEvent_2__method.jobject_call(cls->get_jclass(), parameter_list));
    return result;
}


::zschimmer::javabridge::Class* KeyedEvent::java_object_class_() const { return _class.get(); }

::zschimmer::javabridge::Class* KeyedEvent::java_class_() { return KeyedEvent__class::class_factory.clas(); }


void KeyedEvent::Lazy_class::initialize() const {
    _value = KeyedEvent__class::class_factory.clas();
}


}}}}}}}
