// *** Generated by com.sos.scheduler.engine.cplusplus.generator ***

#ifndef _JAVAPROXY_COM_SOS_SCHEDULER_ENGINE_KERNEL_EVENT_EVENTSUBSYSTEM_H_
#define _JAVAPROXY_COM_SOS_SCHEDULER_ENGINE_KERNEL_EVENT_EVENTSUBSYSTEM_H_

#include "../zschimmer/zschimmer.h"
#include "../zschimmer/java.h"
#include "../zschimmer/Has_proxy.h"
#include "../zschimmer/javaproxy.h"
#include "../zschimmer/lazy.h"
#include "java__lang__Object.h"

namespace javaproxy { namespace com { namespace sos { namespace jobscheduler { namespace data { namespace event { struct KeyedEvent; }}}}}}
namespace javaproxy { namespace java { namespace lang { struct Object; }}}
namespace javaproxy { namespace java { namespace lang { struct String; }}}


namespace javaproxy { namespace com { namespace sos { namespace scheduler { namespace engine { namespace kernel { namespace event { 


struct EventSubsystem__class;

struct EventSubsystem : ::zschimmer::javabridge::proxy_jobject< EventSubsystem >, ::javaproxy::java::lang::Object {
  private:
    static EventSubsystem new_instance();  // Not implemented
  public:

    EventSubsystem(jobject = NULL);

    EventSubsystem(const EventSubsystem&);

    #ifdef Z_HAS_MOVE_CONSTRUCTOR
        EventSubsystem(EventSubsystem&&);
    #endif

    ~EventSubsystem();

    EventSubsystem& operator=(jobject jo) { assign_(jo); return *this; }
    EventSubsystem& operator=(const EventSubsystem& o) { assign_(o.get_jobject()); return *this; }
    #ifdef Z_HAS_MOVE_CONSTRUCTOR
        EventSubsystem& operator=(EventSubsystem&& o) { set_jobject(o.get_jobject()); o.set_jobject(NULL); return *this; }
    #endif

    jobject get_jobject() const { return ::zschimmer::javabridge::proxy_jobject< EventSubsystem >::get_jobject(); }

  protected:
    void set_jobject(jobject jo) {
        ::zschimmer::javabridge::proxy_jobject< EventSubsystem >::set_jobject(jo);
        ::javaproxy::java::lang::Object::set_jobject(jo);
    }
  public:

    void checkNumberOfEventCodes(jint p0) const;
    void report(const ::zschimmer::javabridge::proxy_jobject< ::javaproxy::com::sos::jobscheduler::data::event::KeyedEvent >& p0) const;
    void reportEventClass(jint p0, const ::zschimmer::javabridge::proxy_jobject< ::javaproxy::java::lang::Object >& p1) const;
    void reportLogged(jint p0, const ::zschimmer::javabridge::proxy_jobject< ::javaproxy::java::lang::String >& p1, const ::zschimmer::javabridge::proxy_jobject< ::javaproxy::java::lang::String >& p2) const;

    ::zschimmer::javabridge::Class* java_object_class_() const;

    static ::zschimmer::javabridge::Class* java_class_();


  private:
    struct Lazy_class : ::zschimmer::abstract_lazy<EventSubsystem__class*> {
        void initialize() const;
    };

    Lazy_class _class;
};


}}}}}}}

#endif
