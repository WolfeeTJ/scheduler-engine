// *** Generated by com.sos.scheduler.engine.cplusplus.generator ***

#include "_precompiled.h"

#include "com__sos__scheduler__engine__kernel__order__jobchain__SimpleJobNode.h"
#include "com__sos__scheduler__engine__kernel__order__jobchain__JobNode.h"
#include "java__lang__String.h"

namespace javaproxy { namespace com { namespace sos { namespace scheduler { namespace engine { namespace kernel { namespace order { namespace jobchain { 

struct SimpleJobNode__class : ::zschimmer::javabridge::Class
{
    SimpleJobNode__class(const string& class_name);
   ~SimpleJobNode__class();


    static const ::zschimmer::javabridge::class_factory< SimpleJobNode__class > class_factory;
};

const ::zschimmer::javabridge::class_factory< SimpleJobNode__class > SimpleJobNode__class::class_factory ("com.sos.scheduler.engine.kernel.order.jobchain.SimpleJobNode");

SimpleJobNode__class::SimpleJobNode__class(const string& class_name) :
    ::zschimmer::javabridge::Class(class_name)
{}

SimpleJobNode__class::~SimpleJobNode__class() {}




SimpleJobNode::SimpleJobNode(jobject jo) { if (jo) assign_(jo); }

SimpleJobNode::SimpleJobNode(const SimpleJobNode& o) { assign_(o.get_jobject()); }

#ifdef Z_HAS_MOVE_CONSTRUCTOR
    SimpleJobNode::SimpleJobNode(SimpleJobNode&& o) { set_jobject(o.get_jobject());  o.set_jobject(NULL); }
#endif

SimpleJobNode::~SimpleJobNode() { assign_(NULL); }





::zschimmer::javabridge::Class* SimpleJobNode::java_object_class_() const { return _class.get(); }

::zschimmer::javabridge::Class* SimpleJobNode::java_class_() { return SimpleJobNode__class::class_factory.clas(); }


void SimpleJobNode::Lazy_class::initialize() const {
    _value = SimpleJobNode__class::class_factory.clas();
}


}}}}}}}}
