// *** Generated by com.sos.scheduler.engine.cplusplus.generator ***

#include "_precompiled.h"

#include "com__sos__scheduler__engine__kernel__order__jobchain__JobNode.h"
#include "com__sos__scheduler__engine__kernel__order__Order.h"
#include "com__sos__scheduler__engine__kernel__order__jobchain__OrderQueueNode.h"
#include "java__lang__String.h"

namespace javaproxy { namespace com { namespace sos { namespace scheduler { namespace engine { namespace kernel { namespace order { namespace jobchain { 

struct JobNode__class : ::zschimmer::javabridge::Class
{
    JobNode__class(const string& class_name);
   ~JobNode__class();

    ::zschimmer::javabridge::Method const _onOrderStepEnded__Lcom_sos_scheduler_engine_kernel_order_Order_2I__method;
    ::zschimmer::javabridge::Method const _orderStateTransitionToState__J__method;

    static const ::zschimmer::javabridge::class_factory< JobNode__class > class_factory;
};

const ::zschimmer::javabridge::class_factory< JobNode__class > JobNode__class::class_factory ("com.sos.scheduler.engine.kernel.order.jobchain.JobNode");

JobNode__class::JobNode__class(const string& class_name) :
    ::zschimmer::javabridge::Class(class_name)
    ,_onOrderStepEnded__Lcom_sos_scheduler_engine_kernel_order_Order_2I__method(this, "onOrderStepEnded", "(Lcom/sos/scheduler/engine/kernel/order/Order;I)V")
    ,_orderStateTransitionToState__J__method(this, "orderStateTransitionToState", "(J)Ljava/lang/String;"){}

JobNode__class::~JobNode__class() {}




JobNode::JobNode(jobject jo) { if (jo) assign_(jo); }

JobNode::JobNode(const JobNode& o) { assign_(o.get_jobject()); }

#ifdef Z_HAS_MOVE_CONSTRUCTOR
    JobNode::JobNode(JobNode&& o) { set_jobject(o.get_jobject());  o.set_jobject(NULL); }
#endif

JobNode::~JobNode() { assign_(NULL); }




void JobNode::onOrderStepEnded(const ::zschimmer::javabridge::proxy_jobject< ::javaproxy::com::sos::scheduler::engine::kernel::order::Order >& p0, jint p1) const {
    ::zschimmer::javabridge::raw_parameter_list<2> parameter_list;
    parameter_list._jvalues[0].l = p0.get_jobject();
    parameter_list._jvalues[1].i = p1;
    JobNode__class* cls = _class.get();
    cls->_onOrderStepEnded__Lcom_sos_scheduler_engine_kernel_order_Order_2I__method.call(get_jobject(), parameter_list);
}

::javaproxy::java::lang::String JobNode::orderStateTransitionToState(jlong p0) const {
    ::zschimmer::javabridge::raw_parameter_list<1> parameter_list;
    parameter_list._jvalues[0].j = p0;
    JobNode__class* cls = _class.get();
    ::javaproxy::java::lang::String result;
    result.steal_local_ref(cls->_orderStateTransitionToState__J__method.jobject_call(get_jobject(), parameter_list));
    return result;
}


::zschimmer::javabridge::Class* JobNode::java_object_class_() const { return _class.get(); }

::zschimmer::javabridge::Class* JobNode::java_class_() { return JobNode__class::class_factory.clas(); }


void JobNode::Lazy_class::initialize() const {
    _value = JobNode__class::class_factory.clas();
}


}}}}}}}}
