// *** Generated by com.sos.scheduler.engine.cplusplus.generator ***

#include "_precompiled.h"

#include "com__sos__scheduler__engine__kernel__cppproxy__Schedule_subsystemC.h"
#include "java__lang__Object.h"
#include "java__lang__String.h"

namespace javaproxy { namespace com { namespace sos { namespace scheduler { namespace engine { namespace kernel { namespace cppproxy { 

struct Schedule_subsystemC__class : ::zschimmer::javabridge::Class
{
    Schedule_subsystemC__class(const string& class_name);
   ~Schedule_subsystemC__class();


    static const ::zschimmer::javabridge::class_factory< Schedule_subsystemC__class > class_factory;
};

const ::zschimmer::javabridge::class_factory< Schedule_subsystemC__class > Schedule_subsystemC__class::class_factory ("com.sos.scheduler.engine.kernel.cppproxy.Schedule_subsystemC");

Schedule_subsystemC__class::Schedule_subsystemC__class(const string& class_name) :
    ::zschimmer::javabridge::Class(class_name)
{}

Schedule_subsystemC__class::~Schedule_subsystemC__class() {}




Schedule_subsystemC::Schedule_subsystemC(jobject jo) { if (jo) assign_(jo); }

Schedule_subsystemC::Schedule_subsystemC(const Schedule_subsystemC& o) { assign_(o.get_jobject()); }

#ifdef Z_HAS_MOVE_CONSTRUCTOR
    Schedule_subsystemC::Schedule_subsystemC(Schedule_subsystemC&& o) { set_jobject(o.get_jobject());  o.set_jobject(NULL); }
#endif

Schedule_subsystemC::~Schedule_subsystemC() { assign_(NULL); }





::zschimmer::javabridge::Class* Schedule_subsystemC::java_object_class_() const { return _class.get(); }

::zschimmer::javabridge::Class* Schedule_subsystemC::java_class_() { return Schedule_subsystemC__class::class_factory.clas(); }


void Schedule_subsystemC::Lazy_class::initialize() const {
    _value = Schedule_subsystemC__class::class_factory.clas();
}


}}}}}}}
