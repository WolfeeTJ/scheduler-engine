<?xml version="1.0"?>
<?xml-stylesheet href="api.xsl" type="text/xsl"?>

<!-- Versuch -->



<class name="Task" object_name="spooler_task">

    <com.type interface="Itask" iid="feee478c-6c1b-11d8-8103-000476ee8afb"/>
    
    <java.type type="sos.spooler.Task"/>
    
    
    
    


    <property name="job" access="read">
        <title>
            Der Job, zu dem die Task gehört.
        </title>
        
        <com>
            <com.type class="Job" interface="Ijob"/>
        </com>
    </property>


    <property name="id" access="read">
        <title>
            Die Task-Kennung.
        </title>
        
        <com>
            <com.type type="int"/>
        </com>
    </property>


    <property name="params">
        <description>
            Eine Task kann Parameter haben. 
            Die Parameter können in der Konfiguration mit <scheduler_element name="parameter"/>, 
            mit <scheduler_method class="Job" method="start"/>
            oder mit <scheduler_element name="start_job"/> gesetzt werden. 
        </description>
        
        <com>
            <com.type class="Variable_set"/>
        </com>
    </property>


    <property name="result">
        <com>
            <com.type type="VARIANT*"/>
        </com>
    </property>


    <property name="repeat" access="write">
        <com>
            <com.type type="double" parameter_name="seconds"/>
        </com>
    </property>


    <method name="end">
    </method>


    <property name="error">
        <com access="write">
            <com.type type="VARIANT*">
                <com.variant accepted_type="BSTR"/>
                <!--com.variant accepted_type="Ierror"/-->
            </com.type>
        </com>
        
        <com access="read">
            <com.type class="Error" interface="Ierror"/>
        </com>
    </property>


    <property name="history_field" access="write">
        <com>
            <com.type type="VARIANT*"/>
            
            <com.parameter name="name">
                <com.type type="BSTR"/>
            </com.parameter>
        </com>
    </property>


    <property name="delay_spooler_process" access="write">
        <com>
            <com.type type="VARIANT*" parameter_name="seconds_or_hhmm_ss" description="time_from_variant.xml"/>
        </com> 
        
        <java>
            <java.type type="double" parameter_name="seconds"/>
        </java>
        
        <java>
            <java.type class="java.lang.String" parameter_name="hhmm_ss" description="time_from_variant.xml"/>
        </java>
    </property>


    <method name="add_pid">
        <com>
            <com.parameter name="pid">
                <com.type type="int"/>
            </com.parameter>  
            
            <com.parameter name="timeout">
                <com.type type="VARIANT*">
                    <com.variant optional="true"/>
                </com.type>
            </com.parameter> 
        </com>

        <java>
            <java.parameter name="pid">
                <java.type type="int"/>
            </java.parameter>
        </java>

        <java>
            <java.parameter name="pid">
                 <java.type type="int"/>
            </java.parameter>
            
            <java.parameter name="timeout">
                <java.type type="double"/>
            </java.parameter>
        </java>
    </method>
    
    
    <method name="wait_until_terminated">
        <abstract>
            <type>
                <description>
                    True, wenn die Task in der Wartezeit geendet hat.
                    <br/>
                    False, wenn die Wartezeit abgelaufen ist, ohne dass die Task geendet hat.
                </description>
            </type>
            
            <parameter name="wait_time">
                <description>
                    Wartezeit in Sekunden
                </description>
            </parameter>
        </abstract>
    
        <com>
            <com.type type="bool"/>
            
            <com.parameter name="wait_time">
                <com.type type="double" default="999999999"/>
            </com.parameter>
        </com>
    </method>
    
    
    <method name="create_subprocess">
        <title>
            Start eines überwachten Subprozesses.
        </title>
        
        <com>
            <com.type class="Subprocess" interface="Isubprocess"/>
            
            <com.parameter name="filename_and_arguments">
                <com.type type="VARIANT*">
                    <com.variant accepted_type="BSTR"/>
                    <com.variant accepted_array_type="BSTR"/>
                    <com.variant optional="true"/>
                </com.type>
            </com.parameter>
        </com>

        <java>
            <java.type class="sos.spooler.Subprocess"/>
        </java>            
        
        <java>
            <java.type class="sos.spooler.Subprocess"/>
            
            <java.parameter name="command_line">
                 <java.type type="java.lang.String"/>
            </java.parameter>
        </java>
        
        <java>
            <java.type class="sos.spooler.Subprocess"/>
            
            <java.parameter name="filename_and_arguments">
                <java.type type="java.lang.String[]"/>
            </java.parameter>
        </java>
    </method>

</class>
