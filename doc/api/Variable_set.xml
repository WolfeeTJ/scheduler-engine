<?xml version="1.0"?>
<!-- $Id$ -->

<?xml-stylesheet href="api-default_language.xsl" type="text/xsl"?>


<api.class
    name        = "Variable_set"
    object_name = "v"
    base_dir    = "../"
    author      = "$Author$"
    date        = "$Date$"
>

<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->

<property name="count" access="read">
    <com>
        <com.result>
            <com.type type="int"/>
        </com.result>
    </com>

    <title>
        Anzahl der Variablen
    </title>
</property>

<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->

<property name="value" default_property="true">
    <com>
        <com.parameter name="name">
            <com.type type="BSTR"/>
        </com.parameter>

        <com.result name="value">
            <com.type type="VARIANT"/>

            <description>
                <api.empty/>, wenn die Variable nicht vorhanden ist.
            </description>
        </com.result>
    </com>

    <not_implemented programming_language="java"/>

    <title>
        Eine Variable
    </title>
</property>

<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->

<property name="var">
    <not_implemented programming_language="javascript"/>        <!-- var ist Schlüsselwort -->

    <com>
        <com.parameter name="name">
            <com.type type="BSTR"/>
        </com.parameter>

        <com.result name="value">
            <com.type type="VARIANT"/>

            <description>
                <api.empty/>, wenn die Variable nicht vorhanden ist.
            </description>
        </com.result>
    </com>

    <title>
        Eine Variable
    </title>

</property>

<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->

<method name="set_var">
    <com>
        <com.parameter name="name">
            <com.type type="BSTR"/>
        </com.parameter>

        <com.parameter name="value">
            <com.type type="VARIANT"/>
        </com.parameter>
    </com>

    <not_implemented programming_language="java"/>

    <title>
        Setzt eine Variable
    </title>
</method>

<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->

<property name="xml">
    <com>
        <com.result>
            <com.type type="BSTR"/>

            <description>
                XML-Dokument als String.
                Beim Setzen wird der Name des Wurzelelements (<code>&lt;sos.spooler.Variable_set></code>) nicht beachtet.
            </description>
        </com.result>
    </com>

    <title>
        <code>Variable_set</code> als XML-Dokument
    </title>

    <description>
        <p>
            Siehe <scheduler_element name="params"/>.
        </p>
    </description>

    <example programming_language="javascript">
        <pre>var variable_set = spooler.create_variable_set();
spooler_log.info( variable_set );

variable_set.xml= "&lt;?xml version='1.0'?>" +
                  "&lt;params>" +
                      "&lt;param name='nachname' value='Meier'/>" +
                      "&lt;param name='vorname' value='Hans'/>" + 
                  "&lt;/params>";
spooler_log.info( variable_set.xml );
spooler_log.info( "nachname=" + variable_set.value( "nachname" ) );
spooler_log.info( "vorname =" + variable_set.value( "vorname" ) );</pre></example>

</property>

<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->

<method name="merge">
    <com>
        <com.parameter>
            <com.type class="Variable_set"/>
        </com.parameter>
    </com>

    <title>
        Mischt eine andere Variablenmenge ein
    </title>

    <description>
        <p>
            Gleichnamige Variablen werden überschrieben.
        </p>
    </description>
</method>

<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->

<title>
    Variablenmenge zur Übergabe von Parametern
</title>

<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->

<description>
    <!--
    <p>
        Die Variablenmenge hält Variablen mit Namen und Wert.
        Die Variablenwerte können von jedem COM-Typ sein (Java: nur Strings).
    </p>
    <p>
        Objekte sollten nicht als Variablenwert verwendet werden.
    </p>
    -->

    <p>
        Variablenmengen werden gebraucht für die Scheduler-weiten Variablen und Task-Parameter.
        Eine neue Variablenmenge wird mit
        <scheduler_method class="Spooler" method="create_variable_set"/>
        angelegt.
    </p>
    <p>
        Die Großschreibung der Variablennamen ist nicht relevant.
    </p>
    <p>
        In COM (JavaScript, VBScript, Perl) ist ein Variablenwert ein Variant.
        Weil die Variablen in der Regel in die Scheduler-Datenbank geschrieben werden,
        sollten nur nach String konvertierbare Variant-Werte verwendet werden
        (d.h. es sollten keine Objekte verwendet werden).
    </p>
    <p>
        In Java ist ein Variablenwert ein String.
        Wenn die Variable mit COM als Variant gesetzt worden ist,
        wird beim Lesen der nach String konvertierte Wert zurückgegeben.
        <code>Null</code> und <code>Empty</code> werden als <api.null/> zurückgeliefert.
        Wenn ein Variant-Wert nicht konvertierbar ist, wird eine Exception ausgelöst.
    </p>
    <p>
        Siehe auch <scheduler_element name="params"/> und <scheduler_element name="sos.spooler.variable_set"/>.
    </p>
</description>

<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->

</api.class>
