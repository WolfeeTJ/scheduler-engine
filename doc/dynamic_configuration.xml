<?xml version="1.0"?>
<?xml-stylesheet href="scheduler.xsl" type="text/xsl"?>

<!--$Id$-->

<description
    title               = "Konfiguration der Scheduler-Objekte in einzelnen XML-Dateien"
    base_dir            = ""
    parent_page         = "index.xml"
    author              = "$Author$"
    date                = "$Date$"
>
    <p>
        Jobs, Jobketten, Daueraufträge, Prozessklassen und Sperren (das alles hier Objekte genannt)
        können in einzelnen Dateien gehalten werden, die der Scheduler automatisch nach Änderung übernimmt.
    </p>
    <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->

    <scheduler_table_of_content/>

    <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->

    <h2>Konfigurationsverzeichnis</h2>
    
    <p>
        Die Dateien liest der Scheduler aus dem Konfigurationsvereichnis und dessen Unterverzeichnisse.
        Das Konfigurationsverzeichnis kann eingestellt werden mit
    </p>
    <ul>
        <li>
            <scheduler_element name="config" attribute="configuration_directory"/>,
            voreingestellt ist das Verzeichnis <code>live</code> im Verzeichnis der Konfigurationsdatei.
        </li>
        <li>
            <scheduler_option name="config"/>. 
            Die Konfigurationsdatei erwartet der Scheduler dann im Konfigurationsverzeichnis 
            unter dem Namen <code>scheduler.xml</code>.
        </li>
    </ul>
    
    <p>
        Der Scheduler überwacht das Konfigurationsverzeichnis und seine Unterverzeichnisse
        und übernimmt hinzugefügte und geänderte Dateien.
        Löschen einer Datei führt zum Löschen des entsprechenden Objekts im Scheduler.
    </p>

    <p>
        Unter Windows verwendet der Scheduler die Verzeichnisüberwachung des Betriebsystems, 
        bemerkt Änderungen also sofort.
        Außerdem liest der die Verzeichnisse im Minutenabstand.
    </p>
    <p>
        Unter Unix überwacht der Scheduler die Verzeichnisse im Abstand von (zurzeit) 10 Sekunden.
    </p>

    <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->

    <h2>Dateien für Prozessklassen, Sperren, Jobs, Jobketten und Daueraufträge</h2>

    <p style="margin-bottom: 1em;">
        Die Dateien enthalten die XML-Elemente für die Definition des Objekts:        
    </p>
    <table cellspacing="0" cellpadding="0">
        <tr>
            <th style="padding-right: 2ex">
                Dateiname
            </th>
            <th style="padding-right: 2ex">
                XML-Element
            </th>
        </tr>
        <tr>
            <td style="padding-right: 2ex">
                <i>name</i>
                <code>.process_class.xml</code>
            </td>
            <td style="padding-right: 2ex">
                <scheduler_element name="process_class"/>
            </td>
        </tr>
        <tr>
            <td>
                <i>name</i>
                <code>.lock.xml</code>
            </td>
            <td style="padding-right: 2ex">
                <scheduler_element name="lock"/>
            </td>
        </tr>
        <tr>
            <td style="padding-right: 2ex">
                <i>name</i><code>.job.xml</code>
            </td>
            <td style="padding-right: 2ex">
                <scheduler_element name="job"/>
            </td>
        </tr>
        <tr>
            <td style="padding-right: 2ex">
                <i>name</i><code>.job_chain.xml</code>
            </td>
            <td style="padding-right: 2ex">
                <scheduler_element name="job_chain"/>
            </td>
        </tr>
        <tr>
            <td style="padding-right: 2ex">
                <i>jobchainname</i><code>,</code><i>orderid</i><code>.order.xml</code>
            </td>
            <td style="padding-right: 2ex">
                <scheduler_element name="order"/>
            </td>
        </tr>
    </table>

    <p>
        Das Attribut <code>name=</code> 
        (oder <code>job_chain=</code> und <code>id=</code> bei Aufträgen)
        sollte nicht angegeben werden.
        Wird es angegeben, muss es dem Dateinamen entsprechen.
    </p>
    <p>
        Die Attribute <code>replace=</code> und <code>spooler_id=</code> sind nicht zulässsig.
    </p>

    <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
    
    <h2>Spiegelung des Verzeichnisses im Scheduler</h2>

    <p>
        Der Scheduler legt für jede Datei mit bekannter Dateinamensendung (<code>.job</code> usw.)
        ein entsprechendes Objekt im Scheduler an und verbindet es mit der Datei.
        Der Scheduler überwacht den Zeitstempel der Datei und geht bei Änderung wie folgt vor.
    </p>
    
    <ul class="big">
        <li>
            Ein hinzugefügter Dateiname führt zu Anlage eines neuen, noch leeren Objekts im Scheduler,
            das mit der Datei verbunden ist.
            Das Objekt ist mit <scheduler_element name="show_state"/> sichtbar.
            Z.B. wird eine Datei <code>xxx.job.xml</code> im Scheduler gespiegelt als ein Job
            <scheduler_element name="job" attribute="name" value="xxx"/>,
            auch wenn die Datei nicht lesbar ist.
        </li>
        <li>
            Eine gelöschte Datei führt zum Löschen des Objekts.
            Das Löschen wird in der Regel verzögert, 
            weil z.B. bei einem Job das Ende der Tasks abgewartet werden muss.
        </li>
        <li>
            Wenn während des Löschens die Datei wieder angelegt wird,
            geht der Scheduler wie beim Ändern der Datei vor.
        </li>
        <li>
            Nach einer Änderung einer Datei (der Zeitstempel hat sich geändert) liest der Scheduler die Datei.
            Kann die Datei geladen werden, 
            dann tauscht er Prozessklassen und Sperren direkt,
            während er Jobs, Jobklassen und Daueraufträge verzögert tauscht,
            weil noch die laufende Operation des zu ersetzenden Objekts abgewartet werden muss (Details unten).
        </li>
        <li>
            Ein Fehler beim Lesen einer Datei beeinflusst nicht ein bereits vorhandenes Objekt.
            Der Scheduler vermerkt den Fehler im Objekt und verschickt eine eMail.
            <scheduler_element name="show_state"/> zeigt den Fehler.
        </li>
    </ul>

    <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->

    <h2>Wirkung der Kommandos zum Ändern und Löschen</h2>

    <p>
        Kommandos zum Ändern von Objekten ändern nicht die Dateien.
    </p>
    <p>
        Kommandos zum Löschen von Objekten dagegen löschen die zugrundliegende Datei
        (die Debug-Version des Schedulers versieht den Dateinamen mit dem Anhängsel "<code>-REMOVED</code>").
    </p>

    <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->

    <h2>Verhalten der einzelnen Objekttypen</h2>

    <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->

    <h3>Prozessklassen</h3>

    <p>
        Änderungen an einer Prozessklasse übernimmt der Scheduler sofort.
    </p>
    <p>
        Beim Löschen einer Prozessklasse beendet der Scheduler alle zugehörigen Tasks.
        Erst wenn keine Task mehr läuft, löscht er die Prozessklasse.
        Bis dahin startet der Scheduler keine weiteren Tasks, wie wenn die Prozessklasse erschöpft wäre.
    </p>

    <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->

    <h3>Sperren</h3>

    <p>
        Änderungen an einer Prozessklasse übernimmt der Scheduler sofort.
    </p>
    <p>
        Beim Löschen einer Sperre beendet der Scheduler alle zugehörigen Tasks.
        Erst wenn keine Task mehr läuft, löscht er die Sperre.
        Bis dahin startet der Scheduler keine weiteren Tasks, wie wenn die bereits Sperre belegt wäre.
    </p>

    <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->

    <h3>Jobs</h3>

    <p>
        Einen geänderten Job übernimmt der Scheduler, nachdem er alle Tasks beendet hat.
    </p>
    <p>
        Beim Löschen verfährt der Scheduler ebenso.
        Keine neue Tasks werden gestartet.
    </p>
    <p>
        Fehlt dem Job die Prozessklasse oder eine Sperre, wirkt das so, 
        wie wenn die Prozessklasse erschöpft oder die Sperre nicht verfügbar wäre.
    </p>

    <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->

    <h3>Jobketten</h3>

    <p>
        Eine geänderte Jobkette übernimmt der Scheduler, nachdem alle Aufträge ihren Jobschritt beendet haben.
        Weitere Jobschritte werden solange verhindert.
    </p>
    <p>
        Aufträge in Jobkettenknoten mit gleichem Auftragszustand übernimmt der Scheduler in die geänderte Jobkette.
    </p>
    <p>
        Beim Löschen verfährt der Scheduler ebenso.
    </p>
    <p>
        Fehlt der Jobkette ein Job, dann sammeln sich die Aufträge im Jobkettenknoten,
        als wäre der Job nicht zur Auftragsausführung bereit.
    </p>

    <h4>Verschachtelte Jobketten</h4>
    <p>
        Fehlt der Jobkette eine verschachtelte Jobkette <scheduler_element name="job_chain_node.job_chain"/>,
        dann ist die gesamte Jobkette nicht bereit.
        Alle untergeordneten Jobketten müssen bekannt sein, 
        damit der Scheduler die Eindeutigkeit der Auftragskennungen sicherstellen kann.
    </p>
    <p>
        Ebenso wird eine untergeordnete Jobkette erst gelöscht,
        wenn auch die übergeordnete Jobkette gelöscht ist.
    </p>
    

    <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->

    <h3>Daueraufträge</h3>
    <p>
        Daueraufträge werden anders behandelt als die anderen Objekte.
        Zum einen haben sie einen zusammengesetzten Namen (<code>job_chain=</code> und <code>id=</code> statt <code>name=</code>),
        zum anderen werden Dateiänderungen nicht jederzeit beachtet.
        Eine gelöschte oder geänderte Auftragsdatei wird nur beachtet,
        wenn 
    </p>
    <ul>
        <li>
            der Auftrag nicht bekannt,
        </li>
        <li>
            der Auftrag noch nicht gestartet worden oder
        </li>
        <li>
            der Auftrag wegen <scheduler_element name="run_time"/> wiederholt, aber noch nicht gestartet worden ist.
        </li>
    </ul>

    <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->

    <h2>Kommando &lt;show_state></h2>

    <p>
        Das Kommando liefert zu jedem dateibasiertem Objekt ein
        <scheduler_element directory="xml/answer/" name="file_based"/> mit Angaben zur Datei.
    </p>
    <p>
        Wenn eine Ersetzung im Gang ist, zeigt <scheduler_element directory="xml/answer/" name="replacement"/> dies an.
    </p>
    <p>
        Wenn eine Datei gelöscht ist, aber das dazugehörige Objekt noch nicht,
        wird ein <scheduler_element directory="xml/answer/" name="removed"/> geliefert.
    </p>

    <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->

</description>
