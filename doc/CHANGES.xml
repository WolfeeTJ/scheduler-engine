<?xml version="1.0"?>
<?xml-stylesheet href="changes.xsl" type="text/xsl"?>

<!--$Id$-->

<changes title    = "Änderungsprotokoll"
         author   = "$Author$"
         date     = "$Date$">

    <scheduler_keyword keyword="Änderungsprotokoll"/>
    <scheduler_keyword keyword="Change log"/>

    <change date="2005-11-03" version="2.0.142" subversion_revision="4003">
        <revision type="new" title="&lt;job java_options=&gt;">
            <description>
                <p>
                    Siehe <scheduler_element name="job" attribute="java_options"/>.
                </p>
                <p>
                    Außerdem wirkt <scheduler_element name="config" attribute="java_options"/> jetzt auch, 
                    wenn ein Job in einem eigenen Prozess läuft.
                </p>
            </description>
        </revision>
    </change>
    
    <change date="2005-10-31" version="2.0.140" subversion_revision="3999">
        <revision type="modification" title="Job-&lt;script&gt; ist überschreibbar">
            <description>
                <p>
                    Siehe <scheduler_element name="script"/>.
                </p>
                <p>
                    Die Attribute (<code>language=</code> etc.) sind nicht änderbar.
                    Nur der Skript-Code mit <scheduler_element name="include"/> ist änderbar.
                    Die nächste Task verwendet den neuen Skript-Code.
                </p>
            </description>
        </revision>
    </change>
    
    <change date="2005-10-30" version="2.0.140" subversion_revision="3995">
        <revision type="new" title="Monitor zur Überwachung eines Jobs">
            <description>
                <p>
                    Siehe <scheduler_element name="monitor"/>.
                </p>
                <p>
                    Für Monitoren in Javascript muss die aktuelle spidermonkey.dll bzw. libspidermonkey.so eingesetzt werden.
                </p>
            </description>
        </revision>
        <revision type="new" title="Neues XML-Element &lt;job_chains&gt;">
            <description>
                <p>
                    Siehe <scheduler_element name="job_chains"/>.
                </p>
            </description>
        </revision>
        <revision type="new" title="Neues XML-Element &lt;start_when_directory_changed&gt;">
            <description>
                <p>
                    Siehe <scheduler_element name="start_when_directory_changed"/>.
                </p>
            </description>
        </revision>
        <revision type="new" title="Neues XML-Element &lt;delay_after_error&gt;">
            <description>
                <p>
                    Siehe <scheduler_element name="delay_after_error"/>.
                </p>
            </description>
        </revision>
        <revision type="new" title="Neues XML-Element &lt;delay_order_after_setback&gt;">
            <description>
                <p>
                    Siehe <scheduler_element name="delay_order_after_setback"/>.
                </p>
            </description>
        </revision>
    </change>

    <change date="2005-09-25" version="2.0.140" subversion_revision="3943">
        <revision type="modification" title="Wegen &lt;run_time&gt; wiederholter Auftrag erzeugt eigenen Historieneintrag">
            <description>
                <p>
                    Wenn ein Auftrag mit den Endzustand erreicht hat und 
                    dessen <scheduler_method class="Order" property="run_time"/>  einen weiteren Termin vorsieht,
                    dann
                </p>
                <ul>
                    <li>
                        schließt der Scheduler das Auftragsprotokoll, 
                    </li>
                    <li>
                        schreibt einen Eintrag in die Auftragshistorie,
                        siehe <scheduler_ini_entry file="factory.ini" section="spooler" entry="db_order_history_table"/>,
                    </li>
                    <li>
                    und beginnt ein neues Auftragsprotokoll.
                    </li>
                </ul>
            </description>
        </revision>
    </change>

    <change date="2005-09-24" version="2.0.140" subversion_revision="3939">
        <revision type="modification" title="Windows: Doppeltes Ctrl-C bricht alle Prozesse ab">
            <description>
                <p>
                    Das erste Ctrl-C 
                    beendet den Scheduler wie <scheduler_element name="modify_spooler" attribute="cmd" value="terminate"/>.
                </p>
                <p>
                    Das zweite Ctrl-C führt dann zum Abbruch aller Prozesse.
                </p>
                <p>
                    Erst das dritte lässt das Betriebssystem den Scheduler abbrechen.
                </p>
            </description>
        </revision>

        <revision type="new" title="Terminate mit Frist">
            <description>
                <p>
                    Der Scheduler kann jetzt mit Frist beendet werden.
                    Wenn innerhalb der Frist die Tasks nicht enden, bricht der Scheduler die Prozesse der Tasks ab,
                    und wartet dann längstens weitere 30s auf die Tasks, bevor er sich beendet.
                </p>
                <p>
                    Siehe <scheduler_element name="modify_spooler" attribute="cmd" value="terminate"/> und
                    <scheduler_method class="Spooler" method="terminate"/>.
                </p>
            </description>
        </revision>
    </change>

    <change date="2005-09-21" version="2.0.139" subversion_revision="3925">
        <revision type="modification" title="Fehlerhaftes &lt;include&gt; im &lt;description&gt; eines Jobs führt zur Warnung im Jobprotokoll">
            <description>
                <p>
                    (Bisher gab's einen Fehler nur im Hauptprotokoll.)
                </p>
                <p>
                    Siehe <scheduler_element name="description"/>.
                </p>
            </description>
        </revision>
    </change>

    <change date="2005-09-15" version="2.0.139" subversion_revision="3889">
        <revision type="modification" title="Neue Behandlung der Voreinstellungen für den eMail-Versand"/>
    </change>

    <change date="2005-09-07" version="2.0.138" subversion_revision="3866">
        <revision type="correction" title="spooler_log.debug1() bis spooler_log.debug9() im Scheduler-Skript werden nicht mehr unterdrückt"/>
        <revision type="modification" title="Datenbanktabellen werden mit varchar statt char angelegt"/>
    </change>

    <change date="2005-09-06" version="2.0.138" subversion_revision="3851">
        <revision type="new" title="Option -pid-file wird bei Installation als Windows-Dienst übernommen">
            <description>
                <p>
                    Siehe <scheduler_option name="pid-file"/>
                </p>
            </description>
        </revision>

        <revision type="new" title="XSLT-eMail erhält &lt;order&gt;-Element">
            <description>
                <p>
                    Das Element <scheduler_element name="order" directory="xml/answer/"/> wird
                    bei einem Abbruch der Task
                    im Element <scheduler_element name="task" directory="xml/answer/"/> geliefert.
                </p>
            </description>
        </revision>
    </change>

    <!--change date="2005-08-28" version="2.0.137" subversion_revision="3851">
        <revision type="correction" title="Scheduler beendet sich wieder, wenn eine Jobkette gefüllt ist (Folge der Implementierung von remove_job)"/>
    </change-->

    <change date="2005-08-24" version="2.0.137" subversion_revision="3844">
        <revision type="correction" title="-sos.ini= akzeptiert Leerzeichen im Dateinamen"/>
    </change>

    <change date="2005-08-21" version="2.0.137" subversion_revision="3839">
        <revision type="new" title="Neue Methode Job.remove(), neues XML-Kommando &lt;modify_job cmd=&quot;remove&quot;&gt;">
            <description>
                <p>
                    Siehe <scheduler_method class="Job" method="remove"/>
                    und <scheduler_element name="modify_job" attribute="cmd" value="remove"/>.
                </p>
            </description>
        </revision>

        <revision type="correction" title="&lt;remove_order&gt; wirkt sofort auf Datenbank"/>
        <revision type="correction" title="Fehler-eMails jetzt mit richtigem Nachrichtentext"/>
    </change>

    <change date="2005-08-12" version="2.0.136" subversion_revision="3836">
        <revision type="new" title="Neue Methoden Task.stdout_path und Task.stderr_path">
            <description>
                <p>
                    Siehe <scheduler_method class="Task" property="stdout_path"/>
                    und <scheduler_method class="Task" property="stderr_path"/>.
                </p>
            </description>
        </revision>

        <revision type="correction" title="&lt;remove_order&gt; wirkt sofort auf Datenbank"/>
        <revision type="correction" title="Fehler-eMails jetzt mit richtigem Nachrichtentext"/>
    </change>

    <change date="2005-08-12" version="2.0.136" subversion_revision="3834">
        <revision type="correction" title="Fehler bei SQL-Insert für neue Task führt nicht mehr zur eMail-Flut"/>
    </change>

    <change date="2005-08-12" version="2.0.134" subversion_revision="3832">
        <revision type="modification" title="Änderung der &lt;run_time&gt; eines Auftrags wirkt nur am Beginn der Jobkette">
            <description>
                <p>
                    Eine Änderung der &lt;run_time&gt; eines Auftrags wirkt nur,
                    wenn er am Anfang der Jobkette steht und noch nicht ausgeführt wird.
                    Sonst wird die Wirkung verzögert, bis der Auftrag einen Endzustand erreicht hat.
                </p>
            </description>
        </revision>
    </change>

    <change date="2005-08-10" version="2.0.135" subversion_revision="3824">
        <revision type="new" title="Kommando &lt;modify_order&gt; kann &lt;run_time&gt; ändern">
            <description>
                <p>
                    In <scheduler_element name="modify_order"/> kann jetzt
                    <scheduler_element name="run_time"/> gesetzt werden.
                </p>
            </description>
        </revision>

        <revision type="new" title="Methode Job_chain.add_or_replace_order() neu">
            <description>
                <p>
                    <scheduler_method class="Job_chain" method="add_or_replace_order" java_signature="sos.spooler.Order" />
                    wirkt wie
                    <scheduler_method class="Job_chain" method="add_order" java_signature="sos.spooler.Order" />,
                    wenn die Jobkette keinen Auftrag mit gleicher Kennung hat.
                </p>
                <p>
                    Hat die Jobkette bereits einen Auftrag mit gleicher Kennung, dann wird dieser ersetzt.
                    Genauer: er wird aus der Jobkette entfernt
                    (wie mit <scheduler_method class="Order" method="remove_from_job_chain"/>),
                    und der neue Auftrag wird hinzugefügt.
                </p>
                <p>
                    Falls der ersetzte Auftrag gerade von einer Task ausgeführt wird,
                    dann wartet der Scheduler die Ausführung ab, bevor der neue Auftrag ausgeführt werden kann.
                </p>
                <p>
                    Der ersetzte Auftrag erscheint in der XML-Antwort als
                    <scheduler_element name="order" directory="xml/answer/" attribute="replaced" value="yes"/>.
                    Dies nur innerhalb von
                    <scheduler_element name="task" directory="xml/answer/"/>,
                    (nicht von <scheduler_element name="order_queue" directory="xml/answer/"/>),
                    denn der Auftrag ist nicht mehr in der Auftragswarteschlange.
                </p>
                <p>
                    Der neue, ersetzende Auftrag erscheint in der XML-Antwort als
                    <scheduler_element name="order" directory="xml/answer/" attribute="replacement" value="yes"/>.
                </p>
                <p>
                    Siehe auch <scheduler_element name="add_order" attribute="replace" value="yes"/>.
                </p>
            </description>
        </revision>

        <revision type="modification" title="Methode Order.remove_from_job_chain() geändert">
            <description>
                <p>
                    (<scheduler_method class="Order" method="remove_from_job_chain"/> wirkt wie
                    <scheduler_element name="remove_order" />.)
                </p>
                <p>
                    Wenn der Auftrag gerade von einer Task ausgeführt wird,
                    liefert die Eigenschaft <scheduler_method class="Order" property="job_chain" />
                    weiterhin die Jobkette, aus der der Auftrag gerade entfernt wird.
                    Erst wenn die Ausführung beendet ist, liefert die Eigenschaft <code>null</code>
                    (außer der Auftrag ist wieder in eine Jobkette eingetragen worden).
                    Damit bleibt die Eigenschaft <code>job_chain</code> während der Ausführung durch die Task stabil.
                </p>
                <p>
                    Der entfernte, aber noch ausgeführte Auftrag erscheint in der XML-Antwort als
                    <scheduler_element name="order" directory="xml/answer/" attribute="removed" value="yes"/>.
                    Dies nur innerhalb von
                    <scheduler_element name="task" directory="xml/answer/"/>,
                    (nicht von <scheduler_element name="order_queue" directory="xml/answer/"/>),
                    denn der Auftrag ist nicht mehr in der Auftragswarteschlange.
                </p>
            </description>
        </revision>

        <revision type="correction" title="Java-Methode sos.spooler.id() liefert auch Integer als String">
            <description>
                <p>
                    Statt einem Cast <code>(String)</code> wird jetzt <code>.toString()</code> gerufen,
                    so dass auch eine Auftragskennung,
                    die als Integer-Variant (o.dgl.) gespeichert ist,
                    in Java als String geliefert wird.
                    (Bisher gab es eine ClassCastException.)
                </p>
            </description>
        </revision>

        <revision type="correction" title="let_run_terminate_and_restart beendet Tasks im Zustand running_waiting_for_order">
            <description>
                <p>
                    Siehe <scheduler_element name="modify_spooler" attribute="cmd" value="let_run_terminate_and_restart"/>.
                </p>
            </description>
        </revision>

    </change>

    <change date="2005-08-04" version="2.0.134" subversion_revision="3818">
        <revision type="correction" title="Klasse sos.spooler.Mail unter Unix/Java funktionsfähig">
            <description>
                <p>
                    Unter Unix in Java war die Klasse sos.spooler.Mail nicht benutzbar (Fehlercode COM-80020009  DISP_E_EXCEPTION).
                </p>
            </description>
        </revision>
    </change>

    <change date="2005-08-03" version="2.0.134" subversion_revision="3817">
        <revision type="correction" title="Order &lt;period single_start&gt; korrigiert">
            <description>
                <p>
                    Der nächste Single_start bei einem Auftrag mit
                    <scheduler_element name="period" attrbute="single_start"/>
                    wird jetzt korrekt ausgeführt.
                </p>
            </description>
        </revision>
    </change>

    <change date="2005-08-01" version="2.0.134" subversion_revision="3814">
        <revision type="new" title="Subprocess.termination_signal">
            <description>
                <p>
                    <scheduler_method class="Subprocess" property="termination_signal" />
                    liefert unter Unix 0 oder die Nummer des Signals, mit dem der Subprozess endete.
                </p>
                <p>
                    Unter Windows liefert die Methode 0.
                </p>
            </description>
        </revision>
    </change>

    <change date="2005-07-30" version="2.0.134" subversion_revision="3812">
        <revision type="new" title="delay_after_error erzeugt neue Task">
            <description>
                <p>
                    Eine Task, für die nach einem Fehler
                    <scheduler_method class="Job" property="delay_after_error" java_signature="int, double" access="write"/>
                    wirksam wird,
                    fügt der Scheduler jetzt (mit neuer Kennung) erneut in die Task-Warteschlange ein.
                    Dabei werden die Task-Parameter übernommen.
                </p>
                <p>
                    Das gilt nicht für Auftragsjobs.
                    Für die wird wie bisher keine neue Task gestartet,
                    denn der Start wird durch den evtl. anstehenden Auftrag angestossen.
                </p>
            </description>
        </revision>

        <revision type="new" title="Neues Attribut delayed_after_error_task im Antwort-XML-Element &lt;task&gt;">
            <description>
                <p>
                    Siehe <scheduler_element directory="xml/answer/" name="task" attribute="delayed_after_error_task"/>.
                </p>
            </description>
        </revision>

        <revision type="new" title="Neue Attribute delay_after_error= und in_period= im Antwort-XML-Element &lt;job&gt;">
            <description>
                <p>
                    Siehe <scheduler_element directory="xml/answer/" name="job" attribute="delay_after_error"/>
                    <br/>
                    und <scheduler_element directory="xml/answer/" name="job" attribute="in_period"/>.
                </p>
            </description>
        </revision>

    </change>

    <change date="2005-07-04" version="2.0.133" subversion_revision="3786">
        <revision type="new" title="XSLT-Stylesheets für eMails">
            <description>
                <p>
                    <scheduler_method class="Mail" property="xslt_stylesheet_path" java_signature="java.lang.String" access="write"/>
                    setzt das XSLT-Stylesheet für eMails.
                </p>
            </description>
        </revision>

        <revision type="new" title="Neue Klasse Xslt_stylesheet">
            <description>
                <p>
                    <scheduler_method class="Spooler" method="create_xslt_stylesheet" />
                    liefert ein <scheduler_method class="Xslt_stylesheet" />.
                </p>
            </description>
        </revision>
    </change>

    <change date="2005-06-25" version="2.0.132" subversion_revision="3743">
        <revision type="new" title="&lt;order_queue&gt; liefert Attribut next_start_time"/>
    </change>

    <change date="2005-06-24" version="2.0.130" subversion_revision="3742">
        <revision type="correction" title="Fehlendes &lt;run_time&gt; wird wieder wie leeres &lt;run_time/&gt; interpretiert"/>
    </change>

    <change date="2005-06-08" version="2.0.129" subversion_revision="3696">
        <revision type="modification" title="Auftragsjob stoppt bei return false in spooler_init() oder spooler_open()">
            <description>
                <p>
                    Ein Auftragsjob, der
                    <code>false</code> in
                    <scheduler_method class="Job_impl" method="spooler_init"/>
                    oder
                    <scheduler_method class="Job_impl" method="spooler_open"/>
                    liefert,
                    wird mit Fehlermeldung gestoppt.
                </p>
                <p>
                    Das Stoppen kann mit
                    <scheduler_method class="Job" property="delay_after_error" java_signature="int, double" access="write"/>
                    verhindert werden.
                </p>
                <p>
                    Der Auftrag bleibt in der Auftragswarteschlange des Jobs
                    und wird beim nächsten erfolgreichen Start des Jobs verarbeitet.
                </p>
            </description>
        </revision>
    </change>

</changes>
