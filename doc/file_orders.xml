<?xml version="1.0"?>
<?xml-stylesheet href="scheduler.xsl" type="text/xsl"?>

<!--$Id$-->

<description
    title               = "Verzeichnisüberwachung mit Dateiaufträgen"
    base_dir            = ""
    author              = "$Author$"
    date                = "$Date$"
>
    
    <p>
        Wenn eine Jobkette Dateien aus einem Verzeichnis verarbeiten soll,
        können Sie Dateiaufträge verwenden.
        Ein Dateiauftrag ist ein Auftrag mit einem Verweis auf eine Datei.
        Der Scheduler überwacht das Verzeichnis und erzeugt zu jeder neuen Datei einen Dateiauftrag.
    </p>
    
    <pre>&lt;job_chain name="<i>my_job_chain</i>">
    &lt;file_order_source directory="<i>path</i>"/>
    &lt;file_order_source directory="<i>other_path</i>" regex="<i>regex</i>"/>
    &lt;job_chain_node  state="<i>100</i>" job="<i>job_1</i> error_state="<i>error</i>"/>
    &lt;job_chain_node  state="<i>200</i>" job="<i>job_2</i> error_state="<i>error</i>"/>
    &lt;file_order_sink state="<i>ok</i>" remove="yes"/>
    &lt;file_order_sink state="<i>error</i>" move_to="<i>/errorpath.../ </i>"/>
&lt;/job_chain></pre>

    <p>
        Siehe
        <scheduler_element name="job_chain"/>,
        <scheduler_element name="file_order_source"/> und
        <scheduler_element name="file_order_sink"/>.
    </p>

    <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
    
    <h2>Dateiauftragsquelle</h2>
    
    <p>
        Eine Dateiauftragsquelle <scheduler_element name="file_order_source"/>
        überwacht ein Verzeichnis.
        Wenn diesem ein Dateiname hinzugefügt wird,
        der dem optionalen Regulären Ausdruck entspricht,
        führt das zu einem Dateiauftrag.
    </p>
    <pre>&lt;job_chain …>
    &lt;file_order_source directory="…" regex="…"/>
    …</pre>

    <p>
        Ein Dateiauftrag ist ein Auftrag <scheduler_method class="Order"/> mit folgenden Eigenschaften:
    </p>
    <dl>
        <dt>
            <scheduler_method class="Order" object="order" property="state"/>
        </dt>
        <dd>
            Status des Auftrags ist der des ersten Jobs der Jobkette
            oder der mit <scheduler_element name="file_order_source" attribute="next_state"/> eingestellte Zustand.
        </dd>
        <dt>
            <scheduler_method class="Order" object="order" property="id"/>
        </dt>
        <dd>
            Kennung des Auftrags ist der Pfad, zusammengesetzt aus Verzeichnisname,
            wie er in der Auftragsquelle angegeben ist,
            und dem Dateinamen.
        </dd>
        <dt>
            <scheduler_method class="Order" object="order" property="params"/><code>.<scheduler_method class="Variable_set" object="" method="value" value='"scheduler_file_path"'/></code>
        </dt>
        <dd>
            enthält den Pfad, derselbe Wert wie <scheduler_method class="Order" object="order" property="id"/>.
            Diese für den Scheduler reservierte Variable macht einen Auftrag zum Dateiauftrag.
        </dd>
    </dl>

    <h3>Reihenfolge der Dateiaufträge</h3>
    <p>
        Die ältesten Dateien (die mit der am weitesten zurückliegenden letzten Änderung)
        werden zuerst berücksichtigt.
    </p>
    
    <h3>Mehrere Auftragsquellen</h3>
    <p>
        Eine Jobkette kann mehrere Auftragsquellen haben. 
        Der Scheduler berücksichtigt sie in der angegebenen Reihenfolge.
    </p>

    <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->

    <h2>Der Dateiauftrag überwacht die Datei</h2>

    <p>
        Der Scheduler entfernt einen Dateiauftrag,
        wenn die dazugehörige Datei nicht mehr im Verzeichnis steht
        und
    </p>
    <ul class="big">
        <li>
            <p>
                der Dateiauftrag noch nicht einem Job übergeben wurde
                <br/>
                <scheduler_message level="warn" code="SCHEDULER-982" show_text="yes"/>
            </p>
        </li>
        <li>
            <p>
                der Dateiauftrag auf der Schwarzen Liste steht
                <br/>
                <scheduler_message level="info" code="SCHEDULER-981" show_text="yes"/>
            </p>
        </li>
    </ul>
    <p>
        Dateiaufträge, die in Ausführung sind, sind nicht betroffen.
    </p>

    <p>
        Dieser Abgleich wird durchgeführt,
    </p>
    <ul>
        <li>
            wenn der Scheduler das Verzeichnis liest,
        </li>
        <li>
            wenn der Scheduler den Dateiauftrag zum ersten Mal einem Job übergibt.
        </li>
    </ul>

    <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->

    <h2>Auftragssenke: Datei verschieben oder entfernen </h2>
    <p>
        Am Ende der Ausführung des Auftrags kann die zugehörige Datei entfernt oder verschoben werden.
        Die mit <scheduler_element name="file_order_sink"/> definierten Zustände sind Endzustände.
    </p>
    <p>
        Wenn aber die Datei bereits entfernt worden ist,
        gibt der Scheduler eine Warnung aus und der Dateiauftrag ist erledigt.
    </p>
    <p>
        <scheduler_message level="warn" code="SCHEDULER-339" show_text="yes"/>
    </p>

    <p>
        Wenn die Datei sich nicht entfernen bzw. verschieben lässt, 
        gelangt der Auftrag auf die Schwarze Liste.
    </p>
    
    <h3>Datei verschieben</h3>
    <pre>&lt;file_order_sink state="…" move_to="<i>directory_path</i>"></pre>
    <p>
        Eine Datei gleichen Namens im Zielverzeichnis wird ohne Warnung überschrieben.
    </p>

    <h3>Datei entfernen</h3>

    <pre>&lt;file_order_sink state="…" remove="yes"></pre>

    <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->

    <h2>Schwarze Liste</h2>

    <p>
        Wenn ein Dateiauftrag ausgeführt ist (einen Endzustand erreicht hat),
        aber die Datei noch vorhanden ist,
        dann setzt der Scheduler den Auftrag  auf die Schwarze Liste.
    </p>
    <p>
        <scheduler_message level="warn" code="SCHEDULER-340" show_text="yes"/>
    </p>
    <p>
        Dort bleibt er bis
    </p>
    <ul>
        <li>
            der Scheduler beim Lesen des Verzeichnisses feststellt, dass die Datei entfernt worden ist
            (Meldung <scheduler_message code="SCHEDULER-981"/>), oder
        </li>
        <li>
            das Kommando <scheduler_element name="remove_order"/> ausgeführt wird.
        </li>
    </ul>

    <p>
        Damit wird verhindert, dass die Datei sofort zu einem neuen Dateiauftrag führt.
    </p>

    <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->

    <h2>Verzeichnis-Fehler</h2>
    <p>
        Wenn die Verzeichnisüberwachung auf einen Fehler läuft,
        zum Beispiel weil das Verzeichnis abgehängt worden ist,
        dann gibt der Scheduler eine Warnung aus
        und erzeugt eine eMail
        (die Einstellungen aus <scheduler_ini_entry file="factory.ini" section="spooler"/> gelten).
    </p>

    <p>
        Der Scheduler versucht periodisch die Überwachung erneut zu starten.
        Fehlermeldungen dabei werden ignoriert.
        Die Periode ist einstellbar mit <scheduler_element name="file_order_source" attribute="delay_after_error"/>. 
        Sobald das Verzeichnis wieder lesbar ist, gibt der Scheduler diese Meldung aus:
    </p>
    <p>
        <scheduler_message level="info" code="SCHEDULER-984" show_text="yes"/>
    </p>

    <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->

    <h2>Wann wird das Verzeichnis gelesen?</h2>

    <p>
        Sobald der erste Job zum ersten Mal bereit ist, einen Auftrag auszuführen, 
        liest der Scheduler das Verzeichnis (mit der Beschränkung durch den Regulären Ausdruck)
        und erzeugt daraus Dateiaufträge.
    </p>
    <p>
        Wenn das Verzeichnis viele Dateien enthält
        (mehr als mit <scheduler_element name="file_order_source" attribute="max"/> eingestellt),
        dann verbleibt eine Liste der übrigen Dateien im Speicher,
        aus der der Scheduler später die weiteren Dateiaufträge erzeugt.
        Die Meldungen dazu sind:
    </p>

    <scheduler_message level="info" code="SCHEDULER-985" show_text="yes"/>
    <scheduler_message level="info" code="SCHEDULER-986" show_text="yes"/>

    <p>
        Der Scheduler liest das Verzeichnis erneut, wenn
    </p>
    <ul>
        <li>
            alle Dateien dem ersten Job übergeben worden sind,
        </li>
        <li>
            dieser für einen weiteren Auftrag bereit ist,
        </li>
        <li>
            und die mit <scheduler_element name="file_order_source" attribute="repeat"/>
            einstellte Periode abgelaufen ist.
        </li>
    </ul>
    <p>
        Unter Windows lässt der Scheduler außerdem das Verzeichnis vom Betriebssystem überwachen.
        Eine Signalisierung veranlasst den Scheduler, 
        das Verzeichnis vor Ablauf der Periode zu lesen.
        Damit reagiert der Scheduler sofort auf eine neue Datei.
    </p>

    <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->

    <h2>Auftragsgesteuerte &lt;process>-Jobs</h2>
    <p>
        Einen auftragsgesteuerter <scheduler_element name="process"/>-Job 
        startet der Scheduler für jeden Dateiauftrag.
    </p>
    <p>
        Die Umgebungsvariable <code>SCHEDULER_TASK_TRIGGER_FILES</code> enthält den Dateipfad.
    </p>

    <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
    
</description>
