<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet href="scheduler.xsl" type="text/xsl"?>

<!--$Id$-->

<!-- Einige Einstellungen können an mehreren Stellen vorgenommen werden:
     - Konfigurationsdatei
     - factory.ini
     - Kommandozeile
     - Programm-Schnittstelle

     Diese Einstellungen werden hier beschrieben.
-->

<settings
    base_dir    = ""
    title       = "Einstellungen"
    author      = "$Author$"
    date        = "$Date$"
>

    <setting setting        = "scheduler_log" 
             type           = "dateiname" 
             title          = "Dateiname des scheduler.log">

        <description>
            <p>
                Wenn diese Einstellung gesetzt ist, 
                schreibt der Scheduler ein detailliertes Protokoll zur Fehlerdiagnose in die Datei.
                Geben Sie den Dateinamen absolut an (als vollständigen Pfad).
            </p>
            <p>
                Ein Plus (+) direkt vor dem Dateinamen lässt ein vorhandenenes Protokoll fortsetzen.
                Sonst wird es überschrieben.
            </p>
            <h3>Kategorien</h3>
            <p>
                Sie können das Log mit Kategorien erweitern oder einschränken. 
                Schreiben Sie die Namen der Kategorien mit Zwischenräumen getrennt vor den Dateinamen, 
                den Sie mit einem Größerzeichen (>) einleiten.
            </p>
            <p>
                Hier ist eine <a href="log_categories.xml">Liste der Kategorien</a>.
            </p>
        </description>

        <example>
            <pre>log = c:/tmp/scheduler.log
log = scheduler.wait >scheduler.log
log = scheduler.wait com_server.* >scheduler.log</pre>
        </example>
        
    </setting>


    <setting setting        = "log_dir" 
             type           = "verzeichnis" 
             title          = "Verzeichnis der Protokolle">

        <description>
            <p>
                In dieses Verzeichnis schreibt der Scheduler seine Protokolle.
            </p>
            <p>
                <scheduler_setting name="log_dir" value="*stderr"/> lässt den Scheduler 
                die Protokollausgabe nach stderr (auf den Schirm) schreiben.
            </p>
        </description>
    </setting>


    <setting setting           = "param" 
             api               = "Spooler.param"
             type              = "text" 
             title             = "Zur freien Verwendung">

        <description>
            <p>
                Zur freien Verwendung.
                Der Parameter ist in den Skripten über <code>spooler.param</code> lesbar.
            </p>
        </description>
    </setting>


    <setting setting= "config" 
             type   = "dateiname" 
             title  = "Konfigurationsdatei">

        <description>
            <scheduler_keyword keyword="Konfiguration"/>
            <scheduler_keyword keyword="XML-Konfiguration"/>
            
            <p>
                Gibt die <a href="konfiguration.xml">Konfigurationsdatei</a> an.
            </p>
        </description>
    </setting>


    <setting setting= "option_id" 
             type   = "scheduler_id"
             title  = "Kennung des Schedulers">

        <description>
            <p>
                Der Scheduler wählt nur die Elemente der XML-Konfiguration aus,
                deren Attribut <code>spooler_id</code> leer ist oder denselben Wert
                wie in dieser Einstellung enthält.
            </p>
            <p>
                Wenn die Scheduler-Id nicht angegeben ist, beachtet der Scheduler das XML-Attribut <code>spooler_id=</code> nicht
                und wählt alle Elemente der XML-Konfiguration aus.
            </p>
            <p>
                Siehe z.B. <scheduler_element name="config"/>.
            </p>
        </description>
    </setting>

    
    <setting setting= "spooler_id" 
             type   = "scheduler_id">

        <description>
            <p>
                Das Element ist nur wirksam, wenn dieses Attribut leer oder gleich dem
                Parameter <code>-id=</code> vom Scheduler-Start ist,
                oder wenn beim Scheduler-Start die Option <scheduler_option name="id"/> nicht angegeben worden ist.
<!--
                Gibt die Scheduler-Id an.
                Der Scheduler wählt aus der Konfigurationsdatei die Einträge mit dem Attribut 
                <code>spooler_id="</code><i>spooler_id</i><code>"</code> oder 
                <code>spooler_id=""</code>
                aus.
-->                
            </p>
        </description>
    </setting>
    

    <setting setting= "port" 
             type   = "number"
             title  = "TCP- und UDP-Port zur Steuerung des Schedulers">

        <description>
            <p>
            </p>
        </description>
    </setting>
    

    <setting setting= "tcp_port" 
             type   = "number"
             title  = "TCP-Port zur Steuerung des Schedulers">

        <description>
            <p>
            </p>
        </description>
    </setting>
    

    <setting setting= "udp_port" 
             type   = "number"
             title  = "UDP-Port zur Steuerung des Schedulers">

        <description>
            <p>
            </p>
        </description>
    </setting>
    

    <setting setting= "log_level" 
             type   = "log_level"
             title  = "Protokollausgaben beschränken">
        <description>
            <p>
                Legt fest, ab welcher Stufe der Scheduler Protokollzeilen ausgibt.
                Jede Protokollzeile ist auf einer der folgenden Stufen:
                <code>error</code>, <code>warn</code>, <code>info</code>, <code>debug1</code> bis <code>debug9</code> 
                (<code>debug1</code> ist dasselbe wie <code>debug</code>).
            </p>
            <p>
                Siehe auch <scheduler_method class="Log" method="level"/>.
            </p>
        </description>
    </setting>


    <setting setting   = "include_path" 
             type      = "verzeichnis"
             title     = "Für &lt;include&gt;"
             subst_env = "yes">
        <description>
            <p>
                Verzeichnis der Dateien, die mit <scheduler_element name="include"/> eingezogen werden.
            </p>
        </description>
    </setting>

    
    <setting setting = "html_dir" 
             type    = "verzeichnis"
             title   = "Verzeichnis der HTML-Dateien">
        <description>
            <p>
                In diesem Verzeichnis stehen die HTML-Dateien für den HTTP-Server im Scheduler.
            </p>
            <p>
                Wenn die Angabe fehlt, nimmt der Scheduler das Verzeichnis <code>html</code> im Verzeichnis der Konfigurationsdatei.
            </p>
        </description>
    </setting>


    <setting setting = "db_tasks_table" 
             type    = "name"
             initial = "SCHEDULER_TASKS"
             title   = "Name der Datenbanktabelle für die Tasks">
        <description>
            <p>
            </p>
            <p>
                Siehe auch <scheduler_method class="Spooler" method="db_tasks_table_name"/>
            </p>
        </description>
    </setting>


    <setting setting = "db_history_table" 
             type    = "name"
             initial = "SCHEDULER_HISTORY"
             title   = "Name der Datenbanktabelle für die Historie">
        <description>
            <p>
            </p>
            <p>
                Siehe auch <scheduler_method class="Spooler" method="db_history_table_name"/>
            </p>
        </description>
    </setting>


    <setting setting = "db_order_history_table" 
             type    = "name"
             initial = "SCHEDULER_ORDER_HISTORY"
             title   = "Name der Datenbanktabelle für die Auftragshistorie">
        <description>
            <p>
            </p>
            <p>
                Siehe auch <scheduler_method class="Spooler" method="db_order_history_table_name"/>
            </p>
        </description>
    </setting>


    <setting setting = "db_orders_table" 
             type    = "name"
             initial = "SCHEDULER_ORDERS"
             title   = "Name der Datenbanktabelle für die Aufträge">
        <description>
            <p>
                Siehe auch <scheduler_method class="Spooler" method="db_orders_table_name"/>
            </p>
        </description>
    </setting>


    <setting setting = "db_variables_table" 
             type    = "name"
             initial = "SCHEDULER_VARIABLES"
             title   = "Name der Datenbanktabelle für die internen Variablen des Schedulers">
        <description>
            <p>
                Der Scheduler hält in dieser Tabelle interne Zähler, 
                zum Beispiel für die nächste freie Task-Id.
            </p>
            <p>
                Siehe auch <scheduler_method class="Spooler" method="db_variables_table_name"/>
            </p>
        </description>
    </setting>


    <setting setting = "history_columns" 
             type    = "name, name, ..."
             title   = "Zusätzliche Spalten in der Historie">
        <description>
            <p>
                Eine Task kann mit der Methode 
                <scheduler_method class="Task" method="set_history_field" java_signature="java.lang.String, java.lang.String"/>
                die hier angegebenen Felder der Datenbanktabelle für die Task-Historie setzen.
            </p>
        </description>
    </setting>

    <setting setting = "history" 
             type    = "yes|no"
             initial = "yes"
             title   = "Historie schreiben?">
        <description>
            <p>
                Gibt ein, ob eine Task-Historie geschrieben werden soll. 
                Der Scheduler schreibt dann für jede Task einen Satz in die Datenbank, oder, wenn der Scheduler ohne Datenbank arbeitet,
                in eine Datei im mit <scheduler_option name="log-dir"/> angegebenen Verzeichnis.
            </p>
        </description>
    </setting>


    <setting setting = "history_file" 
             type    = "dateiname"
             title   = "Dateiname der Historie (für datenbanklosen Betrieb)">
        <description>
            <p>
                Der Scheduler nimmt einen eigenen Namen, wenn diese Option fehlt. 
                Die Option <scheduler_option name="log-dir"/> muss gesetzt sein oder der Scheduler schreibt die Datei nicht.
                In diese Datei wird, wenn der <code>history=yes</code> gesetzt ist und der Scheduler keine Datenbank verwendet,
                für jede gelaufende Task ein Satz geschrieben.
            </p>
        </description>
    </setting>


    <setting setting= "history_on_process" 
             type   = "yes|no|zahl"
             initial = "0"
             title  = "Nach spooler_process() Historiensatz schreiben?">
        <description>
            <p>
                Bei <code>history_on_process=yes</code> oder <code>=1</code> schreibt der Scheduler beim Start der Task
                einen Satz in die Historie (wenn eine geführt wird).
            </p>
            <p>
                Wenn eine Zahl angegeben ist, schreibt der Scheduler erst vor dem 
                soundsovielten Aufruf von <code>spooler_process()</code> einen Satz in die Historie.
            </p>
        </description>
    </setting>


    <setting setting = "history_archive" 
             type    = "yes|no|gzip"
             initial = "no"
             title   = "Historiendateien archivieren?">
        <description>
            <p>
                Wenn die Historie in einer Datei (also nicht in einer Datenbank) geführt wird,
                kann der Scheduler die Historien des letzten Scheduler-Laufs archivieren und mit gzip komprimieren.
            </p>
        </description>
    </setting>


    <setting setting = "history_with_log" 
             type    = "yes|no|gzip"
             initial = "no"
             title   = "Protokoll in die Historie schreiben?">
        <description>
            <p>
                Der Scheduler kann auch das Task-Protokoll in die Historie (in der Datenbank) schreiben,
                auch mit gzip komprimiert (prüfen Sie, ob Ihre Datenbank das dann binär gespeicherte Protokoll wieder hergibt!).
                <br/>
            </p>
            <p>
                Siehe Kommando <scheduler_element name="show_task" attribute="what" value="log"/>.
            </p>
        </description>
    </setting>

    <setting setting = "order_history" 
             type    = "yes_no"
             initial = "yes"
             title   = "Aufträge in die Historie schreiben?">
        <description>
            <p>
                Für die Aufträge gibt es eine eigene Historie.
            </p>
        </description>
    </setting>


    <setting setting = "order_history_with_log" 
             type    = "yes|no|gzip"
             initial = "no"
             title   = "Auftragsprotokolle in die Historie schreiben?">
        <description>
            <p>
                Der Scheduler kann das Auftragsprotokoll in die Datenbank schreiben,
                auch mit gzip komprimiert (prüfen Sie, ob Ihre Datenbank das dann binär gespeicherte Protokoll wieder hergibt!).
            </p>
            <p>
                Siehe Kommando <scheduler_element name="show_order" attribute="what" value="log"/>.
            </p>
        </description>
    </setting>


    <setting setting = "db" 
             type    = "hostware_filename"
             title   = "Hostware-Dateiname der Datenbank">
        <description>
            <p>
Hostware-Dateiname der Datenbank für die Historienführung.
Ohne Eintrag werden Dateien im .csv-Format erzeugt, siehe <scheduler_ini_entry file="factory.ini" section="spooler" entry="history_file"/>.
            </p>
            <p>
Unter Windows kann auch ein einfacher Dateiname angegebenen werden, der auf <code>.mdb</code> endet (z.B. <code>scheduler.mdb</code>).
Der Scheduler verwendet dann eine Microsoft-Access-Datenbank dieses Namens, 
die im Protokollverzeichnis (s. Option <scheduler_option name="log-dir"/>) liegt.
Der Scheduler richtet die Datei ein, wenn sie fehlt.
            </p>
            <p>
Der Scheduler richtet die Tabellen selbständig ein.            
            </p>
        </description>
        
        <example>
        
<pre>db = jdbc -class=com.microsoft.jdbc.sqlserver.SQLServerDriver jdbc:microsoft:sqlserver://localhost:1433;selectMethod=Cursor;databaseName=factory -user=factory -password=factory
db = odbc -db=factory_sql -user=factory -password=factory
 
db = jdbc -class=com.mysql.jdbc.Driver jdbc:mysql://localhost/factory:3307?user=factory&amp;password=factory
db = odbc -db=factory_mysql -user=factory -password=factory
 
db = jdbc -class=oracle.jdbc.driver.OracleDriver jdbc:oracle:thin:@apnb:1521:test -user=factory -password=factory
db = odbc -db=factory_oracle -user=factory -password=factory

;db = scheduler.mdb</pre>        
 
        </example>
    </setting>


    <setting setting = "need_db" 
             type    = "yes|no|strict"
             initial = "no"
             title   = "Ist die Datenbank notwendig?">
        <description>
            <dl>
                <dt><code>need_db=no</code></dt>
                <dd>
                    <p>
                        Wenn die Einstellung <scheduler_setting setting="db"/> fehlt, 
                        gibt der Scheduler eine Warnung aus und arbeitet ohne Datenbank.
                    </p>
                    <p>
                        Wenn das Öffnen der Datenbank oder das automatische Anlegen der Tabellen fehlschlägt,
                        gibt der Scheduler eine Warnung aus und arbeitet ohne Datenbank.
                    </p>
                    <p>
                        Bei einem Datenbankfehler während des Betriebs schließt der Scheduler die Datenbank und
                        öffnet sie erneut.
                        Wenn das fehlschlägt, arbeitet der Scheduler ohne Datenbank weiter.
                    </p>
                </dd>

                <dt><code>need_db=yes</code></dt>
                <dd>
                    <p>
                        Wenn die Einstellung <scheduler_setting setting="db"/> fehlt, 
                        startet der Scheduler nicht und gibt die Meldung 
                        <scheduler_error code="SCHEDULER-205"/> aus.
                    </p>
                    <p>
                        Bei einem Datenbankfehler schließt der Scheduler die Datenbank und
                        öffnet sie erneut.
                        Wenn das fehlschlägt, versucht der Scheduler endlos im Abstand von einer Minute
                        die Datenbank erneut zu öffnen.
                        Die Tasks werden währenddessen nicht bedient.
                    </p>
                    <p>
                        Wenn sich die Datenbank nicht erneut öffnen lässt,
                        schickt er eine <a href="email.xml">eMail</a>.
                    </p>
                </dd>

                <dt><code>need_db=strict</code></dt>
                <dd>
                    <p>
                        Wie <code>need_db=yes</code> mit folgender Ausnahme.
                    </p>
                    <p>
                        Bei einem Datenbankfehler während des Betriebs schließt der Scheduler die Datenbank und
                        öffnet sie erneut.
                        Bei einem erneuten Fehler wiederholt der Scheduler den Versuch so oft,
                        wie mit <scheduler_setting setting="max_db_errors"/> eingestellt.
                        Wenn das fehlschlägt, beendet sich der Scheduler.
                    </p>
                </dd>
            </dl>
        </description>
    </setting>


    <setting setting = "max_db_errors" 
             type    = "zahl"
             initial = "5"
             title   = "Anzahl Datenbank-Fehler, bevor Scheduler aufgibt">
        <description>
            <p>
                Der Scheduler toleriert diese Anzahl Datenbankfehler.
                Wird sie überschritten, dann setzt er bei <code>need_db=no</code> ohne Datenbank fort,
                anderfalls beendet er sich sofort.
            </p>
            <p>
                Bei <scheduler_setting setting="need_db" value="yes"/> werden Fehler, die beim Versuch, die Datenbank zu öffnen, auftreten, nicht gezählt.
                Damit kann er Scheduler auf eine Datenbank warten, die noch nicht angelaufen ist.
            </p>
        </description>
    </setting>

    <setting setting = "mail_encoding" 
             type    = "quoted-printable|base64"
             initial = "quoted-printable"
             title   = "Codierung des eMail-Anhangs">
        <description>
            <p>
                Das Protokoll wird beim Versand mit quoted-printable codiert. Diese Codierung 
                kann in der factory.ini auf einen anderen von Jmail akzeptierten Wert geändert 
                werden (für JMail von Dimac).
            </p>
        </description>
    </setting>


    <setting setting = "mail_on_error" 
             type    = "yes|no"
             initial = "no"
             title   = "Mit Fehler beendete Task verschickt eMail">
        <description>
            <p>
                Siehe auch <scheduler_method class="Log" property="mail_on_error"/>
            </p>
        </description>
    </setting>


    <setting setting = "mail_on_warning" 
             type    = "yes|no"
             initial = "no"
             title   = "Wenn eine Warnung oder ein Fehler ausgegeben worden ist, wird am Task-Ende eine eMail verschickt">
        <description>
            <p>
                Siehe auch <scheduler_method class="Log" property="mail_on_warning"/>
            </p>
        </description>
    </setting>


    <setting setting = "mail_on_process" 
             type    = "yes|no|zahl"
             initial = "no"
             title   = "Task mit spooler_process() verschickt eMail">
        <description>
            <p>
                Siehe auch <scheduler_method class="Log" property="mail_on_process"/>
            </p>
        </description>
    </setting>


    <setting setting = "mail_on_success" 
             type    = "yes|no"
             initial = "no"
             title   = "Erfolgreich gelaufende Task verschickt eMail">
        <description>
            <p>
                Siehe auch <scheduler_method class="Log" property="mail_on_success"/>
            </p>
        </description>
    </setting>


    <setting setting = "mail_queue_dir" 
             type    = "verzeichnis"
             title   = "Verzeichnis der zeitweilig nicht versendbaren eMails">
        <description>
            <p>
                eMails, die der Scheduler nicht verschicken kann (weil z.B. der SMTP-Server nicht läuft),
                werden hier abgelegt.
            </p>
            <p>
                Um diese eMails später zu verschicken, muss ein Job geschrieben werden, der die 
                Methode <scheduler_method class="Mail" method="dequeue"/> aufruft.
            </p>
        </description>
    </setting>


    <setting setting   = "java_class_path" 
             type      = "dateinamen"
             prepend   = "yes"
             subst_env = "yes"
             title     = "Java-Classpath">
        <description>
            <p>
                Wenn Jobs in Java implementiert sind, kann hier der <code>CLASS_PATH</code> eingestellt werden.
                Das ist eine Liste von Verzeichnissen, in Windows durch Semikolons (;), in Unix 
                durch Doppelpunkte getrennt.
            </p>
        </description>
    </setting>


    <setting setting   = "java_options" 
             type      = "text"
             prepend   = "yes"
             subst_env = "yes"
             title     = "Java-Optionen">
        <description>
            <p>
                Die Optionen werden der Java Virtual Machine übergeben.
            </p>
        </description>
    </setting>


    <setting setting = "javac" 
             type    = "dateiname"
             initial = "javac"
             title   = "Dateiname des Java-Compilers">
        <description>
            <p>
            </p>
        </description>
    </setting>


    <setting setting = "log_mail_subject" 
             type    = "text"
             title   = "Betreff der eMails">
        <description>
            <p>
            </p>
        </description>
    </setting>


    <setting setting = "log_mail_from" 
             type    = "email_address"
             title   = "Absender der eMails">
        <description>
            <p>
            </p>
        </description>
    </setting>


    <setting setting = "log_mail_to" 
             type    = "email_address"
             title   = "To-Empfänger der eMails">
        <description>
            <p>
            </p>
        </description>
    </setting>


    <setting setting = "log_mail_cc" 
             type    = "email_address"
             title   = "Cc-Empfänger der eMails">
        <description>
            <p>
            </p>
        </description>
    </setting>


    <setting setting = "log_mail_bcc" 
             type    = "email_address"
             title   = "Bcc-Empfänger der eMails">
        <description>
            <p>
            </p>
        </description>
    </setting>


    <setting setting = "smtp" 
             type    = "host_address"
             title   = "Hostname oder IP-Nummer des SMTP-Servers für eMail">
        <description>
            <p>
            </p>
        </description>
    </setting>

<!--
    <setting setting = "run_time_begin" 
             type    = "hh:mm[:ss]"
             initial = "00:00">
        <description>
            <p>
                Wenn das Element leer ist (also kein <code>&lt;period></code> enthält),
                generiert der Scheduler eine Periode mit dieser Einstellung, 
                anderfalls ist es die Voreinstellung für die Kind-Elemente.
            </p>
        </description>
    </setting>


    <setting setting = "run_time_end" 
             type    = "hh:mm[:ss]"
             initial = "24:00"
             title   = "">
        <description>
            <p>
                Wenn das Element leer ist (also kein <code>&lt;period></code> enthält),
                generiert der Scheduler eine Periode mit dieser Einstellung, 
                anderfalls ist es die Voreinstellung für die Kind-Elemente.
            </p>
        </description>
    </setting>


    <setting setting = "run_time_single_start" 
             type    = "hh:mm[:ss]"
             initial = ""
             title   = "">
        <description>
            <p>
                Wenn das Element leer ist (also kein <code>&lt;period></code> enthält),
                generiert der Scheduler eine Periode mit dieser Einstellung.
            </p>
        </description>
    </setting>


    <setting setting = "run_time_let_run" 
             type    = "yes_no"
             initial = ""
             title   = "">
        <description>
            <p>
                Voreinstellung für <scheduler_element name="period"/>.
            </p>
        </description>
    </setting>
-->

    <description>
        <scheduler_keyword keyword="Einstellungen"/>
        <p>
            Hier sind Einstellungen aufgeführt, die an mehreren Stellen vorgenommen werden können.
        </p>
    </description>
    
</settings>
