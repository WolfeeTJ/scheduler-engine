<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet href="../scheduler.xsl" type="text/xsl"?>

<!--$Id$-->

<xml_element name     = "config"
             title    = "Konfiguration"
             category = "Konfiguration"
             base_dir = "../"
             parent_page = "../konfiguration.xml"
             author   = "$Author$"
             date     = "$Date$">

    <xml_parent_elements>
        <xml_parent_element name="spooler"/>
    </xml_parent_elements>


    <xml_attributes>

        <xml_attribute name="configuration_directory" type="path">
            <description>
                <p>
                    Voreingestellt ist das Verzeichnis <code>live</code> 
                    im Verzeichnis der Konfigurationsdatei,
                    siehe <scheduler_option name="config"/>.
                </p>
                <p>
                    Diesem Verzeichnis entnimmt der Scheduler die
                    Defitionen der Jobs usw., 
                    siehe <scheduler_a href="../dynamic_configuration.xml" quote="yes"/>.
                </p>
            </description>
        </xml_attribute>

        
        <xml_attribute name="main_scheduler" type="host:port">
            <description>
                <p>
                    Ein Haupt-Scheduler, bei dem sich dieser Scheduler an- und abmelden soll.
                    Das geschieht asynchron und Fehler beeinträchtigen nicht den Betrieb.
                </p>
                <p>
                    Version 2.0.116: Wenn der Haupt-Scheduler unter Windows läuft,
                    sollten nicht mehr als vier Scheduler sich bei ihn anmelden.
                </p>
            </description>
        </xml_attribute>


        <xml_attribute name="spooler_id" type="spooler_id">
            <!-- Diese Beschreibung wird auch von anderen Elementen verwendet. Also allgemein halten! -->
            <description>
                Das Element ist nur wirksam, wenn dieses Attribut gleich dem
                Parameter <code>-id=</code> vom Scheduler-Start ist,
                oder wenn beim Scheduler-Start der Parameter <code>-id=</code> nicht angegeben worden ist.
            </description>
        </xml_attribute>


        <xml_attribute setting="port" title="Portnummer für TCP und UDP">
            <description>
                <p>
                    Siehe auch <scheduler_element name="config" attribute="tcp_port"/>.
                    und <scheduler_element name="config" attribute="udp_port"/>.
                </p>
            </description>
            <example>
                <pre>&lt;config port="4444"></pre>
            </example>
        </xml_attribute>


        <xml_attribute setting="tcp_port">
            <description>
                <p>
                    Siehe auch <scheduler_element name="config" attribute="port"/>.
                </p>
            </description>
            <example>
                <pre>&lt;config tcp_port="4444"></pre>
            </example>
        </xml_attribute>


        <xml_attribute setting="udp_port" >
            <description>
                <p>
                    Siehe auch <scheduler_element name="config" attribute="port"/>.
                </p>
            </description>
            <example>
                <pre>&lt;config udp_port="4444"></pre>
            </example>
        </xml_attribute>


        <xml_attribute name="param" type="text" command_line_option="param" title="Zur freien Verwendung">
            <description>
                Setzt spooler.param (Objekt spooler, Eigenschaft param). Zur freien Verwendung in den Skripten.
            </description>
        </xml_attribute>

        <xml_attribute name="log_dir" type="verzeichnis" option="log-dir" title="Verzeichnis der Protokolle">
            <description>
                <p>
                    Gibt das Verzeichnis an, an das der Scheduler die Protokoll schreibt.
                </p>
                <p>
                    <code>log_dir="*stderr"</code> lässt den Scheduler das Hauptprotokoll nach stderr schreiben.
                </p>
            </description>
        </xml_attribute>

        <xml_attribute setting="include_path"/>

        <!-- Veraltet: xml_attribute name="priority_max" type="zahl" initial="1000">
            <description>
                <p>
                    Höchste Priorität, die eine Task haben kann.
                </p>
            </description>

            <example>
                <pre>&lt;config priority_max="10"></pre>
            </example>
        </xml_attribute-->

        <xml_attribute setting="mail_xslt_stylesheet"/>

        <xml_attribute setting="java_class_path"/>
        <xml_attribute setting="java_options"/>

        <xml_attribute setting="ip_address"/>

    </xml_attributes>


    <xml_child_elements>
        <xml_child_element name="base" multiple="yes" title="Basiskonfiguration">
            <description>
                Eine Basiskonfigurationsdatei kann hier angegeben werden, die der Scheduler zuerst auswertet.
                Die Einstellungen darin bilden die Voreinstellungen für die Konfigurationsdatei, die das Element
                <code>&lt;base></code> enthält.
            </description>
        </xml_child_element>

        <xml_child_element name="security" title="Stellt den Zugriffsschutz ein">
        </xml_child_element>

        <xml_child_element name="cluster"/>

        <xml_child_element name="process_classes" title="Jobs in eigenen Prozessen">
            <description>
                <p>
                    Jede Prozessklasse stellt eine Anzahl Prozesse zum Betrieb der Jobs bereit.
                </p>
                <p>
                    Dieses Element sollte angegeben werden, denn sonst laufen die Jobs im Prozess des Schedulers, was nur zum Debuggen
                    empfehlenswert ist.
                </p>
            </description>
            <example>
                <pre>&lt;process_classes/></pre>
            </example>
        </xml_child_element>

        <xml_child_element name="script" title="Scheduler-Skript">
            <description>
                <p>
                    Wie <scheduler_element name="scheduler_script"/><scheduler_element name="script"/>, siehe unten.
                </p>
            </description>            
        </xml_child_element>
        
        <xml_child_element name="scheduler_script" title="Scheduler-Skript">
            <description>
                <p>
                    Das hierin enthaltene Skript führt der Scheduler beim Start, vor jedem Job aus.
                    Wenn die Methode <scheduler_method class="Job_impl" method="spooler_init"/> implementiert ist,
                    ruft der Scheduler sie auf.
                    Es eignet sich zum Setzen von Scheduler-Variablen.
                </p>
                <p>
                    Bei einem Fehler bricht der Scheduler ab.
                </p>
                <p>
                    Das Skript wird erst geschlossen, wenn der Scheduler endet.
                </p>
            </description>
            <example>
                <pre>&lt;scheduler_script>
    &lt;script language="javascript">&lt;![CDATA[

        spooler.variables( "database_name" ) = "db7";

    ]]&gt;&lt;/script>
&lt;/scheduler_script></pre>
            </example>
        </xml_child_element>

        <xml_child_element name="http_server"/>

        <xml_child_element name="holidays" title="Feiertage">
            <description>
                Grundsätzliche Einstellung der Feiertage (an denen Jobs nicht laufen sollen).
            </description>
        </xml_child_element>

        <xml_child_element name="jobs">
            <description>
                Enthält die Jobs als Folge von <code>&lt;job></code>-Elementen.
            </description>

            <example>
                <pre>&lt;script language="javascript">&lt;![CDATA[

    spooler.variables( "database_name" ) = "db7";

]]&gt;&lt;/script></pre>
            </example>
        </xml_child_element>

        <xml_child_element name="job_chains"/>

        <xml_child_element name="commands">
            <description>
                <p>
                    Die Kommandos werden beim Start des Schedulers vor dem Scheduler-Skript ausgeführt.
                    Ein Fehler führt zum Abbruch des Schedulers.
                </p>
            </description>
        </xml_child_element>

    </xml_child_elements>

    <behavior_with_xml_element element="base" complete_attribute="spooler_id"/>

    <description>
        <p>
            <code>&lt;config></code> enthält die Konfiguration des Schedulers, vor allem die Jobs.
            Das Element kann wiederholt werden, wenn das Attribut <code>spooler_id</code> wechselt.
            Wenn bei Scheduler-Start der Parameter <code>-id=</code>
            nicht angegeben worden ist, ist das erste <code>&lt;config></code>, sonst das mit gleichem Wert im
            Attribut <code>spooler_id</code> wirksam.
        </p>
    </description>

</xml_element>
