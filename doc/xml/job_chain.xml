<?xml version="1.0" encoding="utf-8" ?>
<?xml-stylesheet href="../scheduler.xsl" type="text/xsl"?>
<!--$Id$-->

<xml_element name     = "job_chain"
             title    = "Jobkette"
             category = "Konfiguration"
             base_dir = "../"
             parent_page = "../konfiguration.xml"
             author   = "$Author$"
             date     = "$Date$">

    <scheduler_keyword keyword="Jobkette"/>

    <xml_parent_elements>
        <xml_parent_element name="job_chains"/>
    </xml_parent_elements>

    <xml_attributes>
        <xml_attribute name="name" type="name">
            <description>
                <p>
                    Name der Jobkette. 
                    Jede Jobkette kann nur einmal definiert werden.
                </p>
            </description>
        </xml_attribute>
    </xml_attributes>


    <xml_child_elements>
        <xml_child_element name="job_chain_node" multiple="yes"/>
    </xml_child_elements>


    <description>
        <p>
            Führt eine neue Jobkette (siehe Klasse <scheduler_method class="Job_chain"/>) ein. 
        </p>
        <p>
            Siehe <a href="../order.xml">Aufträge</a>,
            <scheduler_method class="Job_chain"/>,
            <scheduler_method class="Spooler" method="create_job_chain"/> 
            und <scheduler_method class="Spooler" method="add_job_chain"/> 
        </p>
    </description>

    <example>
<pre>&lt;job_chains>
    &lt;job_chain name="Kette_A">
        &lt;job_chain_node state=  "1" job="job_a" next_state=  "2" error_state="999" />            
        &lt;job_chain_node state=  "2" job="job_b" next_state="100" error_state="999" />            
        &lt;job_chain_node state="100" />
        &lt;job_chain_node state="999" />
    &lt;/job_chain>
&lt;/job_chains></pre>

Das ist dasselbe wie folgendes Scheduler-Skript:

<pre>&lt;script language="javascript">&lt;[CDATA[
    var job_chain = spooler.create_job_chain();
        job_chain.name = "Kette_A";
        job_chain.add_job( "job_a", 1,   2, 999 );
        job_chain.add_job( "job_b", 2, 100, 999 );
        job_chain.add_end_state( 100 );
        job_chain.add_end_state( 999 );
    spooler.add_job_chain( job_chain );
]]&gt;&lt;/script></pre>
    </example>

    <behavior_with_xml_element element="base" allowed="no">
        <description>
            <code>&lt;job_chain name="</code>Name<code>"></code> mit verschiedenen Namen können hinzugefügt werden.
        </description>
    </behavior_with_xml_element>
</xml_element>
