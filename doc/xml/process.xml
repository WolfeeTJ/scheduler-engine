<?xml version="1.0" encoding="utf-8" ?>
<?xml-stylesheet href="../scheduler.xsl" type="text/xsl"?>
<!--$Id$-->

<xml_element name     = "process"
             title    = "Externes Programm (alternativ zu &lt;script&gt;)"
             category = "Konfiguration"
             base_dir = "../"
             parent_page = "../konfiguration.xml"
             author   = "$Author$"
             date     = "$Date$">

    <xml_parent_elements>
        <xml_parent_element name="job">
        </xml_parent_element>
    </xml_parent_elements>

    <xml_attributes>
        <xml_attribute name="file" type="filename">
            <description>
                <p>
                    Name der Datei, die das Programm oder das Skript enthält,
                    mit dem der Prozess gestartet werden soll.
                    Die Datei muss vom Betriebssystem ausführbar sein.
                </p>
            </description>
        </xml_attribute>

        <xml_attribute name="param" type="text">
            <description>
                <p>
                    Gibt den Parameterstring an, der dem Prozess übergeben wird.
                </p>
            </description>
        </xml_attribute>


        <xml_attribute name="log_file" type="dateiname">
            <description>
                <p>
                    Der Scheduler übernimmt nach Prozessende den Inhalt dieser Datei in sein Protokoll.
                </p>
            </description>
        </xml_attribute>


        <xml_attribute name="ignore_error" type="yes|no" initial="no">
            <description>
                <p>
                    Bei <code>ignore_error="no"</code> (Voreinstellung) führt ein Exit code ≠ 0 zu einem Jobfehler.
                    Der Job wird gestoppt.
                </p>
                <p>
                    Bei <code>ignore_error="yes"</code> führt ein Exit code ≠ 0 nicht zu einem Jobfehler.
                </p>
            </description>
        </xml_attribute>


        <xml_attribute name="ignore_signal" type="yes|no" initial="no">
            <description>
                <p>
                    Wirkt nur unter Unix.
                    (Unter Windows liefert ein abgebrochener Prozess einen Exit code, der von <code>ignore_error=""</code> berücksichtigt wird.)
                </p>
                <p>
                    Bei <code>ignore_signal="no"</code> (Voreinstellung) führt ein Signal
                    (d.h. ein Abbruch des Prozesses, z.B. durch <code>kill</code>)
                    zu einem Jobfehler.
                    Der Job wird gestoppt.
                </p>
                <p>
                    Bei <code>ignore_signal="yes"</code> führt ein Signal nicht zu einem Jobfehler.
                </p>
            </description>
        </xml_attribute>
    </xml_attributes>


    <xml_child_elements>
        <xml_child_element name="environment">
            <description>
                <p>
                    Die hier aufgeführten Umgebungsvariablen werden zusammen mit den Umgebungsvariablen des Scheduler-Prozesses
                    dem neuen Prozess übergeben.
                    Erste überschreiben letztere gleichen Namens.
                </p>
            </description>
        </xml_child_element>
    </xml_child_elements>


    <description>
        <p>
            Beim Start des Jobs, also zu Beginn einer Task, wird ein Prozess eingerichtet.
            Der Spooler überwacht den Prozess und beendet die Task nachdem der Prozess sich beendet hat.
            Ein Exit code verschieden von 0 wird als Fehler interpretiert.
            Der Exit code ist das Ergebnis der Task und steht in <code>task.result</code> bereit.
        </p>
    </description>

    <behavior_with_xml_element element="base" allowed="no"/>
</xml_element>
