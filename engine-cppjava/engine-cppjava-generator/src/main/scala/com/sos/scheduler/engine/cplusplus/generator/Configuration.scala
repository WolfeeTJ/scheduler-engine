package com.sos.scheduler.engine.cplusplus.generator

import com.google.common.base.Charsets.UTF_8
import com.sos.scheduler.engine.cplusplus.generator.cpp.Namespace
import com.sos.scheduler.engine.cplusplus.generator.cpp.javabridge.JavaBridge
import com.sos.scheduler.engine.cplusplus.runtime.Sister
import java.io.PrintStream

object Configuration {
  val commentLine =  "*** Generated by " + getClass.getPackage.getName + " ***\n"
  val unixEncoding = UTF_8
  val javaEncoding = UTF_8
  val cppEncoding = UTF_8
  val generatedJavaProxyNamespace = Namespace("javaproxy")
  val cppSubdirectory = generatedJavaProxyNamespace.simpleName
  val cppFileExtension = "cxx"
  val cppFileExtensions = List("cxx","cpp")
  val cppAndJavaComment = "// " + commentLine
  val cppStandardUsingNamespaces = List(Namespace("zschimmer"), JavaBridge.namespace)
  val precompiledModuleName = "_precompiled"
  val visualStudioGeneratedFilesFilterName = "Generated C++/Java-Proxies"     // Keine XML-Metazeichen verwenden!

  val cppStandardIncludes = List(
    "../zschimmer/java.h",
    "../zschimmer/Has_proxy.h",
    "../zschimmer/javaproxy.h",
    "../zschimmer/lazy.h")

  val extraNeededClasses = Set(
    classOf[Sister],
    classOf[String],    // FÃ¼r obj_name(), also auch operator<<(ostream&)
    classOf[Object])    // toString()

  val defaultPrinter: PrintStream = System.err
}
