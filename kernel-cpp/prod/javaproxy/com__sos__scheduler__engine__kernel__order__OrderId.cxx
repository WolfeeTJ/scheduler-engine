// *** Generated by com.sos.scheduler.engine.cplusplus.generator ***

#include "_precompiled.h"

#include "com__sos__scheduler__engine__kernel__order__OrderId.h"
#include "com__sos__scheduler__engine__kernel__util__StringValue.h"
#include "java__lang__String.h"

namespace javaproxy { namespace com { namespace sos { namespace scheduler { namespace engine { namespace kernel { namespace order { 

struct OrderId__class : ::zschimmer::javabridge::Class
{
    OrderId__class(const string& class_name);
   ~OrderId__class();

    ::zschimmer::javabridge::Method const __constructor__Ljava_lang_String_2__method;

    static const ::zschimmer::javabridge::class_factory< OrderId__class > class_factory;
};

const ::zschimmer::javabridge::class_factory< OrderId__class > OrderId__class::class_factory ("com.sos.scheduler.engine.kernel.order.OrderId");

OrderId__class::OrderId__class(const string& class_name) :
    ::zschimmer::javabridge::Class(class_name)
    ,__constructor__Ljava_lang_String_2__method(this, "<init>", "(Ljava/lang/String;)V"){}

OrderId__class::~OrderId__class() {}



OrderId OrderId::new_instance(const ::zschimmer::javabridge::proxy_jobject< ::javaproxy::java::lang::String >& p0) {
    OrderId result;
    result.java_object_allocate_();
    ::zschimmer::javabridge::raw_parameter_list<1> parameter_list;
    parameter_list._jvalues[0].l = p0.get_jobject();
    OrderId__class* cls = result._class.get();
    cls->__constructor__Ljava_lang_String_2__method.call(result.get_jobject(), parameter_list);
    return result;
}


OrderId::OrderId(jobject jo) { if (jo) assign_(jo); }

OrderId::OrderId(const OrderId& o) { assign_(o.get_jobject()); }

#ifdef Z_HAS_MOVE_CONSTRUCTOR
    OrderId::OrderId(OrderId&& o) { set_jobject(o.get_jobject());  o.set_jobject(NULL); }
#endif

OrderId::~OrderId() { assign_(NULL); }





::zschimmer::javabridge::Class* OrderId::java_object_class_() { return _class.get(); }

::zschimmer::javabridge::Class* OrderId::java_class_() { return OrderId__class::class_factory.clas(); }


void OrderId::Lazy_class::initialize() {
    _value = OrderId__class::class_factory.clas();
}


}}}}}}}
