// *** Generated by com.sos.scheduler.engine.cplusplus.generator ***

#include "_precompiled.h"

#include "com__sos__scheduler__engine__kernel__log__PrefixLog.h"
#include "java__lang__Object.h"
#include "java__lang__String.h"

namespace javaproxy { namespace com { namespace sos { namespace scheduler { namespace engine { namespace kernel { namespace log { 

struct PrefixLog__class : ::zschimmer::javabridge::Class
{
    PrefixLog__class(const string& class_name);
   ~PrefixLog__class();


    static const ::zschimmer::javabridge::class_factory< PrefixLog__class > class_factory;
};

const ::zschimmer::javabridge::class_factory< PrefixLog__class > PrefixLog__class::class_factory ("com.sos.scheduler.engine.kernel.log.PrefixLog");

PrefixLog__class::PrefixLog__class(const string& class_name) :
    ::zschimmer::javabridge::Class(class_name)
{}

PrefixLog__class::~PrefixLog__class() {}




PrefixLog::PrefixLog(jobject jo) { if (jo) assign_(jo); }

PrefixLog::PrefixLog(const PrefixLog& o) { assign_(o.get_jobject()); }

#ifdef Z_HAS_MOVE_CONSTRUCTOR
    PrefixLog::PrefixLog(PrefixLog&& o) { set_jobject(o.get_jobject());  o.set_jobject(NULL); }
#endif

PrefixLog::~PrefixLog() { assign_(NULL); }





::zschimmer::javabridge::Class* PrefixLog::java_object_class_() { return _class.get(); }

::zschimmer::javabridge::Class* PrefixLog::java_class_() { return PrefixLog__class::class_factory.clas(); }


void PrefixLog::Lazy_class::initialize() {
    _value = PrefixLog__class::class_factory.clas();
}


}}}}}}}
