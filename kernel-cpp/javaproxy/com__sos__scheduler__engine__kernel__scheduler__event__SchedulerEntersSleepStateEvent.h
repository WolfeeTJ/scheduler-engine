// *** Generated by com.sos.scheduler.engine.cplusplus.generator ***

#include "_precompiled.h"

#ifndef _JAVAPROXY_COM_SOS_SCHEDULER_ENGINE_KERNEL_SCHEDULER_EVENT_SCHEDULERENTERSSLEEPSTATEEVENT_H_
#define _JAVAPROXY_COM_SOS_SCHEDULER_ENGINE_KERNEL_SCHEDULER_EVENT_SCHEDULERENTERSSLEEPSTATEEVENT_H_

#include "com__sos__scheduler__engine__kernel__event__Event.h"
#include "java__lang__Object.h"

namespace javaproxy { namespace com { namespace sos { namespace scheduler { namespace engine { namespace kernel { namespace event { struct Event; }}}}}}}
namespace javaproxy { namespace java { namespace lang { struct String; }}}


namespace javaproxy { namespace com { namespace sos { namespace scheduler { namespace engine { namespace kernel { namespace scheduler { namespace event { 


struct SchedulerEntersSleepStateEvent__class;

struct SchedulerEntersSleepStateEvent : ::zschimmer::javabridge::proxy_jobject< SchedulerEntersSleepStateEvent >, ::javaproxy::com::sos::scheduler::engine::kernel::event::Event {
    static SchedulerEntersSleepStateEvent new_instance();

    SchedulerEntersSleepStateEvent(jobject = NULL);

    SchedulerEntersSleepStateEvent(const SchedulerEntersSleepStateEvent&);

    #ifdef Z_HAS_MOVE_CONSTRUCTOR
        SchedulerEntersSleepStateEvent(SchedulerEntersSleepStateEvent&&);
    #endif

    ~SchedulerEntersSleepStateEvent();

    SchedulerEntersSleepStateEvent& operator=(jobject jo) { assign_(jo); return *this; }
    SchedulerEntersSleepStateEvent& operator=(const SchedulerEntersSleepStateEvent& o) { assign_(o.get_jobject()); return *this; }
    #ifdef Z_HAS_MOVE_CONSTRUCTOR
        SchedulerEntersSleepStateEvent& operator=(SchedulerEntersSleepStateEvent&& o) { set_jobject(o.get_jobject()); o.set_jobject(NULL); return *this; }
    #endif

    jobject get_jobject() const { return ::zschimmer::javabridge::proxy_jobject< SchedulerEntersSleepStateEvent >::get_jobject(); }

  protected:
    void set_jobject(jobject jo) {
        ::zschimmer::javabridge::proxy_jobject< SchedulerEntersSleepStateEvent >::set_jobject(jo);
        ::javaproxy::com::sos::scheduler::engine::kernel::event::Event::set_jobject(jo);
    }
  public:


    ::zschimmer::javabridge::Class* java_object_class_();

    static ::zschimmer::javabridge::Class* java_class_();


  private:
    struct Lazy_class : ::zschimmer::abstract_lazy<SchedulerEntersSleepStateEvent__class*> {
        void initialize();
    };

    Lazy_class _class;
};


}}}}}}}}

#endif
