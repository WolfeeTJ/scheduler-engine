// *** Generated by com.sos.scheduler.engine.cplusplus.generator ***

#include "_precompiled.h"

#include "com__sos__scheduler__engine__kernel__order__GenericOrderEvent.h"
#include "com__sos__scheduler__engine__kernel__event__ObjectEvent.h"
#include "com__sos__scheduler__engine__kernel__order__UnmodifiableOrder.h"
#include "java__lang__String.h"

namespace javaproxy { namespace com { namespace sos { namespace scheduler { namespace engine { namespace kernel { namespace order { 

struct GenericOrderEvent__class : ::zschimmer::javabridge::Class
{
    GenericOrderEvent__class(const string& class_name);
   ~GenericOrderEvent__class();

    ::zschimmer::javabridge::Method const __constructor__Lcom_sos_scheduler_engine_kernel_order_UnmodifiableOrder_2__method;
    ::zschimmer::javabridge::Method const _getOrder____method;

    static const ::zschimmer::javabridge::class_factory< GenericOrderEvent__class > class_factory;
};

const ::zschimmer::javabridge::class_factory< GenericOrderEvent__class > GenericOrderEvent__class::class_factory ("com.sos.scheduler.engine.kernel.order.GenericOrderEvent");

GenericOrderEvent__class::GenericOrderEvent__class(const string& class_name) :
    ::zschimmer::javabridge::Class(class_name)
    ,__constructor__Lcom_sos_scheduler_engine_kernel_order_UnmodifiableOrder_2__method(this, "<init>", "(Lcom/sos/scheduler/engine/kernel/order/UnmodifiableOrder;)V")
    ,_getOrder____method(this, "getOrder", "()Lcom/sos/scheduler/engine/kernel/order/UnmodifiableOrder;"){}

GenericOrderEvent__class::~GenericOrderEvent__class() {}



GenericOrderEvent GenericOrderEvent::new_instance(const ::zschimmer::javabridge::proxy_jobject< ::javaproxy::com::sos::scheduler::engine::kernel::order::UnmodifiableOrder >& p0) {
    GenericOrderEvent result;
    result.java_object_allocate_();
    ::zschimmer::javabridge::raw_parameter_list<1> parameter_list;
    parameter_list._jvalues[0].l = p0.get_jobject();
    GenericOrderEvent__class* cls = result._class.get();
    cls->__constructor__Lcom_sos_scheduler_engine_kernel_order_UnmodifiableOrder_2__method.call(result.get_jobject(), parameter_list);
    return result;
}


GenericOrderEvent::GenericOrderEvent(jobject jo) { if (jo) assign_(jo); }

GenericOrderEvent::GenericOrderEvent(const GenericOrderEvent& o) { assign_(o.get_jobject()); }

#ifdef Z_HAS_MOVE_CONSTRUCTOR
    GenericOrderEvent::GenericOrderEvent(GenericOrderEvent&& o) { set_jobject(o.get_jobject());  o.set_jobject(NULL); }
#endif

GenericOrderEvent::~GenericOrderEvent() { assign_(NULL); }




::javaproxy::com::sos::scheduler::engine::kernel::order::UnmodifiableOrder GenericOrderEvent::getOrder() {
    ::zschimmer::javabridge::raw_parameter_list<0> parameter_list;
    GenericOrderEvent__class* cls = _class.get();
    ::javaproxy::com::sos::scheduler::engine::kernel::order::UnmodifiableOrder result;
    result.steal_local_ref(cls->_getOrder____method.jobject_call(get_jobject(), parameter_list));
    return result;
}


::zschimmer::javabridge::Class* GenericOrderEvent::java_object_class_() { return _class.get(); }

::zschimmer::javabridge::Class* GenericOrderEvent::java_class_() { return GenericOrderEvent__class::class_factory.clas(); }


void GenericOrderEvent::Lazy_class::initialize() {
    _value = GenericOrderEvent__class::class_factory.clas();
}


}}}}}}}
