// *** Generated by com.sos.scheduler.engine.cplusplus.generator ***

#include "_precompiled.h"

#include "com__sos__scheduler__engine__kernel__order__Order.h"
#include "com__sos__scheduler__engine__cplusplus__runtime__Sister.h"
#include "com__sos__scheduler__engine__kernel__Platform.h"
#include "com__sos__scheduler__engine__kernel__cppproxy__OrderC.h"
#include "com__sos__scheduler__engine__kernel__folder__FileBased.h"
#include "com__sos__scheduler__engine__kernel__order__OrderId.h"
#include "com__sos__scheduler__engine__kernel__order__OrderState.h"
#include "java__lang__String.h"

namespace javaproxy { namespace com { namespace sos { namespace scheduler { namespace engine { namespace kernel { namespace order { 

struct Order__class : ::zschimmer::javabridge::Class
{
    Order__class(const string& class_name);
   ~Order__class();

    ::zschimmer::javabridge::Method const __constructor__Lcom_sos_scheduler_engine_kernel_Platform_2Lcom_sos_scheduler_engine_kernel_cppproxy_OrderC_2__method;
    ::zschimmer::javabridge::Method const _getEndState____method;
    ::zschimmer::javabridge::Method const _getFilePath____method;
    ::zschimmer::javabridge::Method const _getId____method;
    ::zschimmer::javabridge::Method const _getState____method;
    ::zschimmer::javabridge::Method const _getTitle____method;
    ::zschimmer::javabridge::Method const _onCppProxyInvalidated____method;
    ::zschimmer::javabridge::Method const _setEndState__Lcom_sos_scheduler_engine_kernel_order_OrderState_2__method;
    ::zschimmer::javabridge::Method const _toString____method;

    static const ::zschimmer::javabridge::class_factory< Order__class > class_factory;
};

const ::zschimmer::javabridge::class_factory< Order__class > Order__class::class_factory ("com.sos.scheduler.engine.kernel.order.Order");

Order__class::Order__class(const string& class_name) :
    ::zschimmer::javabridge::Class(class_name)
    ,__constructor__Lcom_sos_scheduler_engine_kernel_Platform_2Lcom_sos_scheduler_engine_kernel_cppproxy_OrderC_2__method(this, "<init>", "(Lcom/sos/scheduler/engine/kernel/Platform;Lcom/sos/scheduler/engine/kernel/cppproxy/OrderC;)V")
    ,_getEndState____method(this, "getEndState", "()Lcom/sos/scheduler/engine/kernel/order/OrderState;")
    ,_getFilePath____method(this, "getFilePath", "()V")
    ,_getId____method(this, "getId", "()Lcom/sos/scheduler/engine/kernel/order/OrderId;")
    ,_getState____method(this, "getState", "()Lcom/sos/scheduler/engine/kernel/order/OrderState;")
    ,_getTitle____method(this, "getTitle", "()Ljava/lang/String;")
    ,_onCppProxyInvalidated____method(this, "onCppProxyInvalidated", "()V")
    ,_setEndState__Lcom_sos_scheduler_engine_kernel_order_OrderState_2__method(this, "setEndState", "(Lcom/sos/scheduler/engine/kernel/order/OrderState;)V")
    ,_toString____method(this, "toString", "()Ljava/lang/String;"){}

Order__class::~Order__class() {}



Order Order::new_instance(const ::zschimmer::javabridge::proxy_jobject< ::javaproxy::com::sos::scheduler::engine::kernel::Platform >& p0, const ::zschimmer::javabridge::proxy_jobject< ::javaproxy::com::sos::scheduler::engine::kernel::cppproxy::OrderC >& p1) {
    Order result;
    result.java_object_allocate_();
    ::zschimmer::javabridge::raw_parameter_list<2> parameter_list;
    parameter_list._jvalues[0].l = p0.get_jobject();
    parameter_list._jvalues[1].l = p1.get_jobject();
    Order__class* cls = result._class.get();
    cls->__constructor__Lcom_sos_scheduler_engine_kernel_Platform_2Lcom_sos_scheduler_engine_kernel_cppproxy_OrderC_2__method.call(result.get_jobject(), parameter_list);
    return result;
}


Order::Order(jobject jo) { if (jo) assign_(jo); }

Order::Order(const Order& o) { assign_(o.get_jobject()); }

#ifdef Z_HAS_MOVE_CONSTRUCTOR
    Order::Order(Order&& o) { set_jobject(o.get_jobject());  o.set_jobject(NULL); }
#endif

Order::~Order() { assign_(NULL); }




::javaproxy::com::sos::scheduler::engine::kernel::order::OrderState Order::getEndState() {
    ::zschimmer::javabridge::raw_parameter_list<0> parameter_list;
    Order__class* cls = _class.get();
    ::javaproxy::com::sos::scheduler::engine::kernel::order::OrderState result;
    result.steal_local_ref(cls->_getEndState____method.jobject_call(get_jobject(), parameter_list));
    return result;
}

void Order::getFilePath() {
    ::zschimmer::javabridge::raw_parameter_list<0> parameter_list;
    Order__class* cls = _class.get();
    cls->_getFilePath____method.call(get_jobject(), parameter_list);
}

::javaproxy::com::sos::scheduler::engine::kernel::order::OrderId Order::getId() {
    ::zschimmer::javabridge::raw_parameter_list<0> parameter_list;
    Order__class* cls = _class.get();
    ::javaproxy::com::sos::scheduler::engine::kernel::order::OrderId result;
    result.steal_local_ref(cls->_getId____method.jobject_call(get_jobject(), parameter_list));
    return result;
}

::javaproxy::com::sos::scheduler::engine::kernel::order::OrderState Order::getState() {
    ::zschimmer::javabridge::raw_parameter_list<0> parameter_list;
    Order__class* cls = _class.get();
    ::javaproxy::com::sos::scheduler::engine::kernel::order::OrderState result;
    result.steal_local_ref(cls->_getState____method.jobject_call(get_jobject(), parameter_list));
    return result;
}

::javaproxy::java::lang::String Order::getTitle() {
    ::zschimmer::javabridge::raw_parameter_list<0> parameter_list;
    Order__class* cls = _class.get();
    ::javaproxy::java::lang::String result;
    result.steal_local_ref(cls->_getTitle____method.jobject_call(get_jobject(), parameter_list));
    return result;
}

void Order::onCppProxyInvalidated() {
    ::zschimmer::javabridge::raw_parameter_list<0> parameter_list;
    Order__class* cls = _class.get();
    cls->_onCppProxyInvalidated____method.call(get_jobject(), parameter_list);
}

void Order::setEndState(const ::zschimmer::javabridge::proxy_jobject< ::javaproxy::com::sos::scheduler::engine::kernel::order::OrderState >& p0) {
    ::zschimmer::javabridge::raw_parameter_list<1> parameter_list;
    parameter_list._jvalues[0].l = p0.get_jobject();
    Order__class* cls = _class.get();
    cls->_setEndState__Lcom_sos_scheduler_engine_kernel_order_OrderState_2__method.call(get_jobject(), parameter_list);
}

::javaproxy::java::lang::String Order::toString() {
    ::zschimmer::javabridge::raw_parameter_list<0> parameter_list;
    Order__class* cls = _class.get();
    ::javaproxy::java::lang::String result;
    result.steal_local_ref(cls->_toString____method.jobject_call(get_jobject(), parameter_list));
    return result;
}


::zschimmer::javabridge::Class* Order::java_object_class_() { return _class.get(); }

::zschimmer::javabridge::Class* Order::java_class_() { return Order__class::class_factory.clas(); }


void Order::Lazy_class::initialize() {
    _value = Order__class::class_factory.clas();
}


}}}}}}}
