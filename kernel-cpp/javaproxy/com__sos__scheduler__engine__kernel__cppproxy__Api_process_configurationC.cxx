// *** Generated by com.sos.scheduler.engine.cplusplus.generator ***

#include "_precompiled.h"

#include "com__sos__scheduler__engine__kernel__cppproxy__Api_process_configurationC.h"
#include "com__sos__scheduler__engine__kernel__cppproxy__Variable_setC.h"
#include "java__lang__Object.h"
#include "java__lang__String.h"

namespace javaproxy { namespace com { namespace sos { namespace scheduler { namespace engine { namespace kernel { namespace cppproxy { 

struct Api_process_configurationC__class : ::zschimmer::javabridge::Class
{
    Api_process_configurationC__class(const string& class_name);
   ~Api_process_configurationC__class();


    static const ::zschimmer::javabridge::class_factory< Api_process_configurationC__class > class_factory;
};

const ::zschimmer::javabridge::class_factory< Api_process_configurationC__class > Api_process_configurationC__class::class_factory ("com.sos.scheduler.engine.kernel.cppproxy.Api_process_configurationC");

Api_process_configurationC__class::Api_process_configurationC__class(const string& class_name) :
    ::zschimmer::javabridge::Class(class_name)
{}

Api_process_configurationC__class::~Api_process_configurationC__class() {}




Api_process_configurationC::Api_process_configurationC(jobject jo) { if (jo) assign_(jo); }

Api_process_configurationC::Api_process_configurationC(const Api_process_configurationC& o) { assign_(o.get_jobject()); }

#ifdef Z_HAS_MOVE_CONSTRUCTOR
    Api_process_configurationC::Api_process_configurationC(Api_process_configurationC&& o) { set_jobject(o.get_jobject());  o.set_jobject(NULL); }
#endif

Api_process_configurationC::~Api_process_configurationC() { assign_(NULL); }





::zschimmer::javabridge::Class* Api_process_configurationC::java_object_class_() const { return _class.get(); }

::zschimmer::javabridge::Class* Api_process_configurationC::java_class_() { return Api_process_configurationC__class::class_factory.clas(); }


void Api_process_configurationC::Lazy_class::initialize() const {
    _value = Api_process_configurationC__class::class_factory.clas();
}


}}}}}}}
