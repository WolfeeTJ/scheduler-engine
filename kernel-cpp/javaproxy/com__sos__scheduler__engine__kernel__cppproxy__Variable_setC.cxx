// *** Generated by com.sos.scheduler.engine.cplusplus.generator ***

#include "_precompiled.h"

#include "com__sos__scheduler__engine__kernel__cppproxy__Variable_setC.h"
#include "java__lang__Object.h"
#include "java__lang__String.h"
#include "java__util__List.h"

namespace javaproxy { namespace com { namespace sos { namespace scheduler { namespace engine { namespace kernel { namespace cppproxy { 

struct Variable_setC__class : ::zschimmer::javabridge::Class
{
    Variable_setC__class(const string& class_name);
   ~Variable_setC__class();


    static const ::zschimmer::javabridge::class_factory< Variable_setC__class > class_factory;
};

const ::zschimmer::javabridge::class_factory< Variable_setC__class > Variable_setC__class::class_factory ("com.sos.scheduler.engine.kernel.cppproxy.Variable_setC");

Variable_setC__class::Variable_setC__class(const string& class_name) :
    ::zschimmer::javabridge::Class(class_name)
{}

Variable_setC__class::~Variable_setC__class() {}




Variable_setC::Variable_setC(jobject jo) { if (jo) assign_(jo); }

Variable_setC::Variable_setC(const Variable_setC& o) { assign_(o.get_jobject()); }

#ifdef Z_HAS_MOVE_CONSTRUCTOR
    Variable_setC::Variable_setC(Variable_setC&& o) { set_jobject(o.get_jobject());  o.set_jobject(NULL); }
#endif

Variable_setC::~Variable_setC() { assign_(NULL); }





::zschimmer::javabridge::Class* Variable_setC::java_object_class_() { return _class.get(); }

::zschimmer::javabridge::Class* Variable_setC::java_class_() { return Variable_setC__class::class_factory.clas(); }


void Variable_setC::Lazy_class::initialize() {
    _value = Variable_setC__class::class_factory.clas();
}


}}}}}}}
