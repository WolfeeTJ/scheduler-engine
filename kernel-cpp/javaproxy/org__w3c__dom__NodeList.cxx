// *** Generated by com.sos.scheduler.engine.cplusplus.generator ***

#include "_precompiled.h"

#include "org__w3c__dom__NodeList.h"
#include "java__lang__Object.h"
#include "java__lang__String.h"
#include "org__w3c__dom__Node.h"

namespace javaproxy { namespace org { namespace w3c { namespace dom { 

struct NodeList__class : ::zschimmer::javabridge::Class
{
    NodeList__class(const string& class_name);
   ~NodeList__class();

    ::zschimmer::javabridge::Method const _getLength____method;
    ::zschimmer::javabridge::Method const _item__I__method;

    static const ::zschimmer::javabridge::class_factory< NodeList__class > class_factory;
};

const ::zschimmer::javabridge::class_factory< NodeList__class > NodeList__class::class_factory ("org.w3c.dom.NodeList");

NodeList__class::NodeList__class(const string& class_name) :
    ::zschimmer::javabridge::Class(class_name)
    ,_getLength____method(this, "getLength", "()I")
    ,_item__I__method(this, "item", "(I)Lorg/w3c/dom/Node;"){}

NodeList__class::~NodeList__class() {}




NodeList::NodeList(jobject jo) { if (jo) assign_(jo); }

NodeList::NodeList(const NodeList& o) { assign_(o.get_jobject()); }

#ifdef Z_HAS_MOVE_CONSTRUCTOR
    NodeList::NodeList(NodeList&& o) { set_jobject(o.get_jobject());  o.set_jobject(NULL); }
#endif

NodeList::~NodeList() { assign_(NULL); }




jint NodeList::getLength() const {
    ::zschimmer::javabridge::raw_parameter_list<0> parameter_list;
    NodeList__class* cls = _class.get();
    return cls->_getLength____method.int_call(get_jobject(), parameter_list);
}

::javaproxy::org::w3c::dom::Node NodeList::item(jint p0) const {
    ::zschimmer::javabridge::raw_parameter_list<1> parameter_list;
    parameter_list._jvalues[0].i = p0;
    NodeList__class* cls = _class.get();
    ::javaproxy::org::w3c::dom::Node result;
    result.steal_local_ref(cls->_item__I__method.jobject_call(get_jobject(), parameter_list));
    return result;
}


::zschimmer::javabridge::Class* NodeList::java_object_class_() const { return _class.get(); }

::zschimmer::javabridge::Class* NodeList::java_class_() { return NodeList__class::class_factory.clas(); }


void NodeList::Lazy_class::initialize() const {
    _value = NodeList__class::class_factory.clas();
}


}}}}
