// *** Generated by com.sos.scheduler.engine.cplusplus.generator ***

#include "_precompiled.h"

#include "com__sos__scheduler__engine__kernel__order__UnmodifiableOrderEvent.h"
#include "com__sos__scheduler__engine__kernel__order__OrderEvent.h"
#include "com__sos__scheduler__engine__kernel__order__UnmodifiableOrder.h"
#include "java__lang__String.h"

namespace javaproxy { namespace com { namespace sos { namespace scheduler { namespace engine { namespace kernel { namespace order { 

struct UnmodifiableOrderEvent__class : ::zschimmer::javabridge::Class
{
    UnmodifiableOrderEvent__class(const string& class_name);
   ~UnmodifiableOrderEvent__class();

    ::zschimmer::javabridge::Method const _getOrder____method;

    static const ::zschimmer::javabridge::class_factory< UnmodifiableOrderEvent__class > class_factory;
};

const ::zschimmer::javabridge::class_factory< UnmodifiableOrderEvent__class > UnmodifiableOrderEvent__class::class_factory ("com.sos.scheduler.engine.kernel.order.UnmodifiableOrderEvent");

UnmodifiableOrderEvent__class::UnmodifiableOrderEvent__class(const string& class_name) :
    ::zschimmer::javabridge::Class(class_name)
    ,_getOrder____method(this, "getOrder", "()Lcom/sos/scheduler/engine/kernel/order/UnmodifiableOrder;"){}

UnmodifiableOrderEvent__class::~UnmodifiableOrderEvent__class() {}




UnmodifiableOrderEvent::UnmodifiableOrderEvent(jobject jo) { if (jo) assign_(jo); }

UnmodifiableOrderEvent::UnmodifiableOrderEvent(const UnmodifiableOrderEvent& o) { assign_(o.get_jobject()); }

#ifdef Z_HAS_MOVE_CONSTRUCTOR
    UnmodifiableOrderEvent::UnmodifiableOrderEvent(UnmodifiableOrderEvent&& o) { set_jobject(o.get_jobject());  o.set_jobject(NULL); }
#endif

UnmodifiableOrderEvent::~UnmodifiableOrderEvent() { assign_(NULL); }




::javaproxy::com::sos::scheduler::engine::kernel::order::UnmodifiableOrder UnmodifiableOrderEvent::getOrder() {
    ::zschimmer::javabridge::raw_parameter_list<0> parameter_list;
    UnmodifiableOrderEvent__class* cls = _class.get();
    ::javaproxy::com::sos::scheduler::engine::kernel::order::UnmodifiableOrder result;
    result.steal_local_ref(cls->_getOrder____method.jobject_call(get_jobject(), parameter_list));
    return result;
}


::zschimmer::javabridge::Class* UnmodifiableOrderEvent::java_object_class_() { return _class.get(); }

::zschimmer::javabridge::Class* UnmodifiableOrderEvent::java_class_() { return UnmodifiableOrderEvent__class::class_factory.clas(); }


void UnmodifiableOrderEvent::Lazy_class::initialize() {
    _value = UnmodifiableOrderEvent__class::class_factory.clas();
}


}}}}}}}
