<?xml version="1.0"?>
<!-- $Id$ -->

<spooler
    xmlns:xsi                     = "http://www.w3.org/2001/XMLSchema-instance" 
    xsi:noNamespaceSchemaLocation = "s:/prod/scheduler/scheduler.xsd"
>
    <config
        tcp_port="4444" 
        main_scheduler="lillerud.zschimmer:6310"
    >
        <security>
            <allowed_host host="0.0.0.0" level="all"/>
        </security>

        <process_classes/>

        <jobs>

            <job name="javascript">

                <script language="JavaScript">
                    <![CDATA[

spooler_log.mail_on_error = true;  // <kill_task> kann zu einem Fehler in Process.priority() führen, das Verhalten prüfen wir

if(1)
{
    var subprocess = spooler_task.create_subprocess();
    subprocess.start( subprocess.env.substitute( "${MY_HOME}\\1.cmd a\\b" ) );
    subprocess.wait_for_termination();
    spooler_log.info( subprocess.exit_code );
}

var subprocess = spooler_task.create_subprocess();

subprocess.environment( "test1" ) = "ETT";
subprocess.environment( "test2" ) = "TVÅ";
subprocess.environment( "PATh" ) = "";
spooler_log.info( "subprocess.env.names=" + subprocess.env.names );
var s = "test1=$test1 TEST1=$TEST1 test2=${test2}";
spooler_log.info( "substitute: " + s + " ==> " + subprocess.env.substitute( s ) );
subprocess.ignore_error = true;

subprocess.start( "sh -c set" );
//subprocess.start( "sleep 30" );

spooler_log.info( "pid=" + subprocess.pid );
subprocess.timeout = 20;

new ActiveXObject( "hostware.global" ).sleep( 1 );
//subprocess.kill();
spooler_log.info( "wait_for_termination ..." );
var ok = subprocess.wait_for_termination( 10 );
spooler_log.info( "wait_for_termination ok=" + ok );

if( subprocess.terminated )  spooler_log.info( "exit code=" + subprocess.exit_code ), spooler_log.info( "termination signal=" + subprocess.termination_signal );

var cmd = "sleep 6";
var exit_code = system( cmd, 5 );
spooler_log.info( cmd + " ==> " + exit_code );


function system( cmd, timeout )
{
    var subprocess = spooler_task.create_subprocess();
    
    try
    {
        if( timeout )  subprocess.timeout = timeout;
        subprocess.start( cmd );
        subprocess.wait_for_termination();
        return subprocess.exit_code;
    }
    finally
    {
        subprocess.close();
    }
}

                ]]>
                </script>

                <run_time/>
            </job>


            <job name="java">

                <script java_class="spooler_job.My_job">
                    <![CDATA[

package spooler_job;

import sos.spooler.*;

public class My_job  extends sos.spooler.Job_impl
{   
    Subprocess subprocess;
                     
    public boolean spooler_open()  throws Exception
    {                     
        //subprocess = spooler_task.create_subprocess( "/tmp/test.cmd EINS ZWEI" );
        return true;
    }
    
    public boolean spooler_process()  throws Exception
    {
        subprocess = spooler_task.create_subprocess();
        
        subprocess.set_ignore_signal( true );
        subprocess.set_environment( "test1", "ETT" );
        subprocess.set_environment( "test2", "TV" );
        spooler_log.info( subprocess.env().substitute( "test1=$test1" ) );
        subprocess.set_timeout( 13 );

        subprocess.start( new String[]{ "sleep", "20"} );
        //subprocess.start( "sleep 20" );

        spooler_log.info( "pid=" + subprocess.pid() );
        //subprocess.set_timeout( 10 );

        spooler_log.info( "wait_for_termination ..." );
        boolean ok = subprocess.wait_for_termination( 5 );
        spooler_log.info( "wait_for_termination ok=" + ok );

        if( subprocess.terminated() ) 
        {
            spooler_log.info( "exit code=" + subprocess.exit_code() );
            spooler_log.info( "termination_signal=" + subprocess.termination_signal() );
        }

        return false;
    }
}
                ]]>
                </script>

                <run_time/>
            </job>

        </jobs>

        <commands>
            <start_job job="java"/>
        </commands>
    </config>
</spooler>
