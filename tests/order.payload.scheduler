<?xml version="1.0"?>
<spooler
    xmlns:xsi                     = "http://www.w3.org/2001/XMLSchema-instance" 
    xsi:noNamespaceSchemaLocation = "http://www.zschimmer.com/2006/scheduler.xsd"
>
    <config>

        <base file="$SCHEDULER_TEST/base.scheduler"/>

        <process_classes>
            <process_class name="single" max_processes="1"/>
        </process_classes>
    
        <script language="javascript">
        <![CDATA[

var order = spooler.create_order();
order.payload = spooler;
spooler_log.info( order.payload_is_type( "spooler.variable_set" ) );

order.payload = spooler.create_variable_set();
spooler_log.info( order.payload_is_type( "spooler.variable_set" ) );
spooler_log.info( order.payload_is_type( "hostware.record" ) );

spooler_log.info( "****" );
//

        ]]></script>


        <jobs>

            <job name="perl" process_class="single">
                <script language="perl">
                    <include file="$SCHEDULER_TEST/expect.pl"/>
                    <![CDATA[
package main;
use vars qw($spooler $spooler_log $spooler_job $spooler_task);
use strict;
use warnings FATAL => "all";

my $order = $spooler->create_order();
$order->LetProperty( 'id'   , "perl" );
$order->LetProperty( 'title', "Order aus Perl" );
$order->LetProperty( 'xml_payload'   , "<?xml version='1.0' encoding='iso-8859-1'?><my_xml><a>åäöüÅÄÖÜß<![CDATA[åäöüÅÄÖÜß]" . "]></a></my_xml>" );
$spooler->job_chain( "order_payload.scheduler" )->add_or_replace_order( $order );

                    ]]>
                </script>
            </job>


            <job name="java" process_class="single">
                <script java_class="spooler_job.My_job">
                    <![CDATA[
package spooler_job;
import sos.spooler.*;
import java.util.Date;
import java.io.*;

public class My_job  extends sos.spooler.Job_impl
{   
    public boolean spooler_process()  throws Exception
    {
        Order order = spooler.create_order();
        order.set_id   ( "java string" );
        order.set_title( "Order aus Java, String" );
        
        
        BufferedInputStream in = new BufferedInputStream( new FileInputStream( "c:/tmp/xml_payload.xml" ) );
        byte inBuffer[] = new byte[1024];
        int  inBytesRead;
        StringBuffer sb  = new StringBuffer();
        while( ( inBytesRead = in.read(inBuffer) ) != -1 ) 
            sb.append( new String( inBuffer, 0, inBytesRead ) );
            
        spooler_log.info( "####### sb=         " + sb );
        order.set_xml_payload( sb.toString() );    
        spooler_log.info( "####### xml_payload=" + order.xml_payload() );        
        spooler_log.info( "####### order_xml  =" + order.xml() );        
        order.set_xml_payload( "<?xml version='1.0' encoding='iso-8859-1'?><my_xml><a>åäöüÅÄÖÜß<![CDATA[åäöüÅÄÖÜß]" + "]></a></my_xml>" );
        
        spooler.job_chain( "order_payload.scheduler" ).add_or_replace_order( order );

        return false;
    }
}
                ]]>
                </script>
            </job>


            <job name="javascript" process_class="single">
        
                <script language="JavaScript">
        <![CDATA[

function spooler_process() 
{               
    var order = spooler.create_order();
    order.id = "javascript";
    order.title = "Order aus Javascript";
  //order.xml_payload = "<?xml version='1.0' encoding='iso-8859-1'?><my_xml><a>åäöüÅÄÖÜß<![CDATA[åäöüÅÄÖÜß]" + "]></a></my_xml>";
    order.xml_payload = "<my_xml><a>åäöüÅÄÖÜß<![CDATA[åäöüÅÄÖÜß]" + "]></a></my_xml>";
    spooler_log.info( order.xml );
    spooler.job_chain( "order_payload.scheduler" ).add_or_replace_order( order );
    return false;
}

                ]]></script>
            </job>


            <job name="javascript_order"  process_class="single" order="yes">

                <script language="JavaScript">
                    <![CDATA[

function spooler_process() 
{               
    var order = spooler_task.order;
    spooler_log.info( "************" + order.title + "    xml_payload=" + order.xml_payload );
    
    return true;
}

                ]]>
                </script>
            </job>

            
            <job name="javascript_order2"  process_class="single" order="yes">

                <script language="JavaScript">
                    <![CDATA[

function spooler_process() 
{               
    return true;
}

                ]]>
                </script>
            </job>
        </jobs>
        
            
        <job_chains>
            <job_chain name="order_payload.scheduler">
                <job_chain_node state="test" job="javascript_order" error_state="fertig"/>
                <!--job_chain_node state="zwei" job="javascript_order2" error_state="fertig"/-->
                <job_chain_node state="fertig"/>
            </job_chain>
        </job_chains>

        <commands>
            <start_job job="java"/>
            <start_job job="perl"/>
            <start_job job="javascript"/>
        </commands>

    </config>
</spooler>
