<?xml version="1.0"?>
<spooler
    xmlns:xsi                     = "http://www.w3.org/2001/XMLSchema-instance" 
    xsi:noNamespaceSchemaLocation = "s:/prod/scheduler/scheduler.xsd"
>
    <config>

        <base file="$SCHEDULER_TEST/base.scheduler"/>

        <process_classes/>
    
        <script language="javascript">
        <![CDATA[
/*
var n = 300;
spooler.variables( "n" ) = n;
var hostware = new ActiveXObject( "hostware.global" );

for( var i = 1; i <= n; i++ )
{
    hostware.open( "-out /tmp/x/gen" + i ).close();
}
*/

        ]]></script>


        <jobs>

            <job name="generator">
                <script language="JavaScript">
                    <![CDATA[
                    
var i = 0;
var n = 1000;
spooler.variables( "n" ) = n;
var hostware = new ActiveXObject( "hostware.global" );

function spooler_process() 
{     
    for( var j = 1; j <= 100; j++ )
    {
        if( i++ == n )  return false;
        hostware.open( "-out /tmp/x/gen" + i + ".ok" ).close();
    }
    
    return true;
}

                ]]>
                </script>
                <run_time>
                    <period repeat="00:03"/>
                </run_time>
            </job>

            <job name="javascript" order="yes">

                <script language="JavaScript">
                    <![CDATA[

counter = 1*spooler.variables( "n" );

function spooler_process() 
{               
    var order = spooler_task.order;
    spooler_log.info( "ORDER-ID=" + order.id );
    //spooler_log.info( "order.xml=" + spooler_task.order.xml );
    //spooler_log.info( "spooler_task.trigger_files=" + spooler_task.trigger_files );
    //new ActiveXObject( "hostware.global" ).sleep( 10 );
    //spooler.terminate();
    if( --counter == 0 )  spooler.terminate();
    //if( spooler_task.order.params( "scheduler_file_order" ) == "/tmp/x/gen9" )  spooler.terminate();
    spooler_task.end();
    return true;
}

                ]]>
                </script>

            </job>

            
            <job name="javascript2" order="yes" tasks="2">
        
                <script language="JavaScript"><![CDATA[

counter = 1*spooler.variables( "n" );

function spooler_process() 
{               
    var order = spooler_task.order;     // Prüfen, ob Garbage Collector den Auftrag zu lange offen hält
    spooler_log.info( "ORDER-ID=" + order.id );
    spooler_task.end();
    return true;
}

                ]]></script>

            </job>
        
            
            <job name="java" order="yes" tasks="3">
                <script java_class="spooler_job.My_job">
                    <![CDATA[
package spooler_job;
import sos.spooler.*;
import java.util.Date;

public class My_job  extends sos.spooler.Job_impl
{   
    public boolean spooler_process()  throws Exception
    {
        spooler_log.info( "ORDER_ID=" + spooler_task.order().id() );
        return true;
    }
}
                ]]>
                </script>
                <run_time/>
            </job>


        </jobs>

        <job_chains>
            <job_chain name="my_job_chain" distributed="yes">
                <file_order_source directory="/tmp/x/" regex="^gen.*\.ok$"/>
                <!--file_order_source directory="/tmp/yyy/" regex="^gen"/-->
                <!--file_order_source directory="/tmp/y" regex="^gen" next_state="second"/-->
                <!--job_chain_node state="edno" job="javascript"/-->
                <!--job_chain_node state="dwa" job="javascript2"/-->
                <job_chain_node state="tri" job="java"/>
                <file_order_sink state="remove" remove="yes"/>
                <!--file_order_sink state="remove" move_to="/gibsnich/"/-->
                <!--job_chain_node state="finished"/-->
            </job_chain>
        </job_chains>        
    </config>
</spooler>
