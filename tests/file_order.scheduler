<?xml version="1.0"?>
<spooler
    xmlns:xsi                     = "http://www.w3.org/2001/XMLSchema-instance" 
    xsi:noNamespaceSchemaLocation = "s:/prod/scheduler/scheduler.xsd"
>
    <config>

        <base file="$SCHEDULER_TEST/base.scheduler"/>

        <process_classes/>
    
        <script language="javascript">
        <![CDATA[
/*
var n = 300;
spooler.variables( "n" ) = n;
var hostware = new ActiveXObject( "hostware.global" );

for( var i = 1; i <= n; i++ )
{
    hostware.open( "-out /tmp/x/g" + i ).close();
}
*/

        ]]></script>


        <jobs>

            <job name="generator">
                <params>
                    <param name="sos_mount" value="$SOS_MOUNT"/>
                </params>
                
                <script java_class="spooler_job.Generator">
                    <![CDATA[
package spooler_job;
import sos.spooler.*;
import java.io.*;

public class Generator  extends sos.spooler.Job_impl
{   
    int i              = 0;
    int new_file_count = 0;

    //spooler.variables().set_var( "n", Integer.toString( n ) );


    public boolean spooler_process()  throws Exception
    {     
        int n            = Integer.parseInt( spooler.param() );
        String sos_mount = spooler_task.params().value( "sos_mount" );
        
        for( int j = 1; j <= 1000; j++ )
        {
            i++;
            File file = new File( sos_mount, "tmp/x/g" + i + ".ok" );
            boolean ok = file.createNewFile();
            if( ok )  new_file_count++;
            if( ok  &&  new_file_count % 1000 == 0 )  spooler_log.info( new_file_count + " DATEIEN ERZEUGT: " + file );
            if( i >= n )  return false;
        }
        
        return true;
    }
}
                ]]>
                </script>
                
                <run_time once="yes">
                    <period repeat=""/>
                </run_time>
            </job>

            
            <job name="javascript" order="yes">

                <script language="JavaScript">
                    <![CDATA[

function spooler_process() 
{               
    var order = spooler_task.order;
    spooler_log.info( "ORDER-ID=" + order.id );
    //spooler_log.info( "order.xml=" + spooler_task.order.xml );
    //spooler_log.info( "spooler_task.trigger_files=" + spooler_task.trigger_files );
    //if( spooler_task.order.params( "scheduler_file_order" ) == "/tmp/x/gen9" )  spooler.terminate();
    //spooler_task.end();
    return true;
}

                ]]>
                </script>

            </job>

            
            <job name="javascript2" order="yes" tasks="1">
        
                <script language="JavaScript"><![CDATA[

//counter = 1*spooler.variables( "n" );

function spooler_process() 
{               
    var order = spooler_task.order;     // Prüfen, ob Garbage Collector den Auftrag zu lange offen hält
    spooler_log.info( "ORDER-ID=" + order.id );
    new ActiveXObject( "hostware.global" ).sleep( 0.5 );
    //spooler_task.end();
    return true;
}

                ]]></script>

            </job>
        
            
            <job name="java" order="yes" tasks="1">
                <script java_class="spooler_job.My_job">
                    <![CDATA[
package spooler_job;
import sos.spooler.*;
import java.util.Date;

public class My_job  extends sos.spooler.Job_impl
{   
    public boolean spooler_process()  throws Exception
    {
        Order order = spooler_task.order();
        spooler_log.info( "ORDER_ID=" + order.id() );
        return true;
    }
}
                ]]>
                </script>
                <run_time/>
            </job>


        </jobs>

        <job_chains>
            <job_chain name="my_job_chain" distributed="yes">
                <file_order_source directory="$SOS_MOUNT/tmp/x/" regex="^g.*\.ok$"/>
                <file_order_source directory="$SOS_MOUNT/tmp/y/" regex="^g.*\.ok$"/>
                <job_chain_node state="edno" job="javascript"/>
                <job_chain_node state="dwa"  job="javascript2"/>
                <job_chain_node state="tri"  job="java"/>
                <file_order_sink state="remove" remove="yes"/>
            </job_chain>
        </job_chains>        
    </config>
</spooler>
