package com.sos.scheduler.engine.kernel.scripting;

import com.sos.scheduler.engine.kernel.scripting.UnsupportedScriptLanguageException;
import com.sos.scheduler.engine.kernel.scripting.ModuleInstance;
import com.sos.scheduler.engine.kernel.scripting.InvalidScriptException;
import org.junit.Test;
import com.sos.scheduler.engine.kernel.LogMock;

/**
* \class ModuleInstanceTest 
* 
* \brief ModuleInstanceTest - 
* 
* \details
*
* \section ModuleInstanceTest.java_intro_sec Introduction
*
* \section ModuleInstanceTest.java_samples Some Samples
*
* \code
*   .... code goes here ...
* \endcode
*
* <p style="text-align:center">
* <br />---------------------------------------------------------------------------
* <br /> APL/Software GmbH - Berlin
* <br />##### generated by ClaviusXPress (http://www.sos-berlin.com) #########
* <br />---------------------------------------------------------------------------
* </p>
* \author EQCPN
* \version 15.12.2010
* \see reference
*
* Created on 15.12.2010 13:55:53
 */

public class ModuleInstanceTest {
	
	private final static String script_root = "./src/test/scripts/";

	@Test
	public void javaScript() {
		ModuleInstance module = new ModuleInstance("javascript");
		module.setSourceCode("print('Hallo Welt\\n');");
		module.call();
	}

	@Test
	public void javaScriptWithParams() {
		ModuleInstance module = new ModuleInstance("javascript");
		module.setSourceCode("print('Hallo ' + name + '\\n');");
		module.addObject("Walter", "name");
		module.call();
	}

	@Test
	public void javaScriptWithFunction() {
		String script = "function show () {print('hallo welt'); }\n";
		ModuleInstance module = new ModuleInstance("javascript");
		module.setSourceCode(script);
		try {
			module.call("show");
		} catch (NoSuchMethodException e) {
			e.printStackTrace();
		}
	}

	@Test
	public void javaScriptWithFunctions() {
		String script = "function add (a, b) {c = a + b; return c; }";
		ModuleInstance module = new ModuleInstance("javascript");
		module.setSourceCode(script);
		module.addObject("hugo", "name");
		Object result;
		try {
			result = module.call("add", new Object[] { 5, 2 });
			System.out.println("result: " + result);
		} catch (NoSuchMethodException e) {
			e.printStackTrace();
		}
	}

	@Test
	public void javaScriptDoubleFunction() {
		String script = "function divide (a, b) {c = a / b; return c; }";
		ModuleInstance module = new ModuleInstance("javascript");
		module.setSourceCode(script);
		Object result;
		try {
			result = module.callDouble("divide", new Object[] { 10, 3 });
			System.out.println("result: " + result);
		} catch (NoSuchMethodException e) {
			e.printStackTrace();
		}
	}

	@Test
	public void javaScriptFromFile() {
		ModuleInstance module = new ModuleInstance("javascript");
		module.setSourceFile(script_root + "test.js");
		module.addObject("hugo", "name");
		try {
			module.call("spooler_init");
			while (module.callBoolean("spooler_process")) {
				;
			}
		} catch (NoSuchMethodException e) {
			e.printStackTrace();
		}
	}

	//	@Test
	//	public void javascriptJavaObject() {
	//		String code = "importPackage(javax.swing);" + "var optionPane = " + "  JOptionPane.showMessageDialog(null, 'Hello, world!');";
	//		ModuleInstance module = new ModuleInstance("javascript");
	//		module.setSourceCode(code);
	//		module.call();
	//	}

	// @Test - maven dependencies not found for bean
	// http://www.beanshell.org/
	public void beanScript() {
		String script = "for (int i=0; i<5; i++)\n" + "print(i);\n" + "print(\"Hello \" + name);\n";
		ModuleInstance module = new ModuleInstance("bsh");
		module.setSourceCode(script);
		module.addObject("hugo", "name");
		module.call();
	}

	/*
	 * \brief Executes a simple jython script
	 * \detail
	 * Calls the jython script test.py and gives them some objects
	 * via the addObject method.
	 * The script contains some funtions called by the call method
	 * and the callBoolean method.
	 * http://www.jython.org/
	 * jar-file: jython.jar from the jython 2.2.1 installation
	 * jar-file: jython-engine.jar
	 * 
	 * the use of a jython version above 2.2.1 will cause a pathon error:
	 * java.lang.VerifyError: class com.sun.script.jython.JythonScope overrides final method __findattr__.(Ljava/lang/String;)Lorg/python/core/PyObject;
	 */
	// @Test
	//	maven dependencies not found for bean
	public void jythonScriptFromFile() throws NoSuchMethodException {
		ModuleInstance module = new ModuleInstance("jython");
		module.setSourceFile(script_root + "test.py");
		module.addObject("jythonScriptFromFile", "name");
		module.addObject(new LogMock(), "log");
		module.call("spooler_init");
		while (module.callBoolean("spooler_process")) {
			;
		}
		module.call("spooler_exit");
	}

	/*
	 * \brief Executes a simple groovy script
	 * \detail
	 * Calls a grrovy script and gives them some objects via the addObject method.
	 * http://groovy.codehaus.org/
	 * jar-file: groovy-all-1.5.6.jar
	 * jar-file: groovy-engine.jar
	 */
	// @Test
	//	maven dependencies not found for bean
	public void groovyScript() {
		String script = "println 'hello, groovy world'\n";
		ModuleInstance module = new ModuleInstance("groovy");
		module.setSourceCode(script);
		module.call();
	}

	@Test(expected = UnsupportedScriptLanguageException.class)
	public void unsupportedScriptLanguage() {
		try {
			ModuleInstance module = new ModuleInstance("tolami");
			module.setSourceCode("print('Hallo Welt\\n');");
			module.call();
		}
		finally {
		}
	}

	@Test(expected = InvalidScriptException.class)
	public void missingScriptCode() {
		try {
			ModuleInstance module = new ModuleInstance("javascript");
			module.call();
		}
		finally {
		}
	}

	//	@Test
	//	public void awkScript() {
	//		String script = "# BEGIN {printf(\"hello world\");} END {}";
	//		ModuleInstance module = new ModuleInstance("awk");
	//		module.setSourceCode(script);
	//		module.call();
	//		System.out.println("fertig !");
	//	}

}
