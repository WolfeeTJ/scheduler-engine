// *** Generated by com.sos.scheduler.engine.cplusplus.generator ***

#include "_precompiled.h"

#include "com__sos__scheduler__engine__kernel__cppproxy__OrderC.h"
#include "com__sos__scheduler__engine__kernel__cppproxy__Job_chainC.h"
#include "java__lang__Object.h"
#include "java__lang__String.h"

namespace javaproxy { namespace com { namespace sos { namespace scheduler { namespace engine { namespace kernel { namespace cppproxy { 

struct OrderC__class : ::zschimmer::javabridge::Class
{
    OrderC__class(const string& class_name);
   ~OrderC__class();


    static const ::zschimmer::javabridge::class_factory< OrderC__class > class_factory;
};

const ::zschimmer::javabridge::class_factory< OrderC__class > OrderC__class::class_factory ("com.sos.scheduler.engine.kernel.cppproxy.OrderC");

OrderC__class::OrderC__class(const string& class_name) :
    ::zschimmer::javabridge::Class(class_name)
{}

OrderC__class::~OrderC__class() {}




OrderC::OrderC(jobject jo) { if (jo) assign_(jo); }

OrderC::OrderC(const OrderC& o) { assign_(o.get_jobject()); }

#ifdef Z_HAS_MOVE_CONSTRUCTOR
    OrderC::OrderC(OrderC&& o) { set_jobject(o.get_jobject());  o.set_jobject(NULL); }
#endif

OrderC::~OrderC() { assign_(NULL); }





::zschimmer::javabridge::Class* OrderC::java_object_class_() { return _class.get(); }

::zschimmer::javabridge::Class* OrderC::java_class_() { return OrderC__class::class_factory.clas(); }


void OrderC::Lazy_class::initialize() {
    _value = OrderC__class::class_factory.clas();
}


}}}}}}}
