// *** Generated by com.sos.scheduler.engine.cplusplus.generator ***

#include "_precompiled.h"

#include "com__sos__scheduler__engine__kernel__main__MainContext.h"
#include "com__sos__scheduler__engine__kernel__Scheduler.h"
#include "java__lang__Object.h"
#include "java__lang__String.h"

namespace javaproxy { namespace com { namespace sos { namespace scheduler { namespace engine { namespace kernel { namespace main { 

struct MainContext__class : ::zschimmer::javabridge::Class
{
    MainContext__class(const string& class_name);
   ~MainContext__class();

    ::zschimmer::javabridge::Method const _onSchedulerActivated____method;
    ::zschimmer::javabridge::Method const _setScheduler__Lcom_sos_scheduler_engine_kernel_Scheduler_2__method;

    static const ::zschimmer::javabridge::class_factory< MainContext__class > class_factory;
};

const ::zschimmer::javabridge::class_factory< MainContext__class > MainContext__class::class_factory ("com.sos.scheduler.engine.kernel.main.MainContext");

MainContext__class::MainContext__class(const string& class_name) :
    ::zschimmer::javabridge::Class(class_name)
    ,_onSchedulerActivated____method(this, "onSchedulerActivated", "()V")
    ,_setScheduler__Lcom_sos_scheduler_engine_kernel_Scheduler_2__method(this, "setScheduler", "(Lcom/sos/scheduler/engine/kernel/Scheduler;)V"){}

MainContext__class::~MainContext__class() {}




MainContext::MainContext(jobject jo) { if (jo) assign_(jo); }

MainContext::MainContext(const MainContext& o) { assign_(o.get_jobject()); }

#ifdef Z_HAS_MOVE_CONSTRUCTOR
    MainContext::MainContext(MainContext&& o) { set_jobject(o.get_jobject());  o.set_jobject(NULL); }
#endif

MainContext::~MainContext() { assign_(NULL); }




void MainContext::onSchedulerActivated() {
    ::zschimmer::javabridge::raw_parameter_list<0> parameter_list;
    MainContext__class* cls = _class.get();
    cls->_onSchedulerActivated____method.call(get_jobject(), parameter_list);
}

void MainContext::setScheduler(const ::zschimmer::javabridge::proxy_jobject< ::javaproxy::com::sos::scheduler::engine::kernel::Scheduler >& p0) {
    ::zschimmer::javabridge::raw_parameter_list<1> parameter_list;
    parameter_list._jvalues[0].l = p0.get_jobject();
    MainContext__class* cls = _class.get();
    cls->_setScheduler__Lcom_sos_scheduler_engine_kernel_Scheduler_2__method.call(get_jobject(), parameter_list);
}


::zschimmer::javabridge::Class* MainContext::java_object_class_() { return _class.get(); }

::zschimmer::javabridge::Class* MainContext::java_class_() { return MainContext__class::class_factory.clas(); }


void MainContext::Lazy_class::initialize() {
    _value = MainContext__class::class_factory.clas();
}


}}}}}}}
